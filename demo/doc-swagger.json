"url": "https://api.call-ai.com"
Authnentication 
{
"title": "Token",
"description": "The Token API provides method to authenticate and authorize a request. It enables to implement secure authentication and authorization mechanisms.
",
// Path
"/token/v1/auth/api/v1/authentication/get-auth-token/{tenant_id}": {
"get": {
"tags": [
"Token"
],
"summary": "Get Auth Token",
"description": "This API endpoint allows you to obtain an authentication token required for accessing protected resources within the system. The token serves as a temporary authorization credential, granting access to specific functionality or data for a limited time.",
"operationId": "get-auth-api-v1-authentication-get-auth-token-tenant_id",
"parameters": [
{
    "name": "tenant_id",
    "in": "path",
    "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": "tenant_12345"
}
],
"responses": {
"200": {
    "description": "SUCCESS",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200_getAuthToken"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkxicmlsNWNsQVk3Q3dsMlNSX0MwNiJ9.eyJpc3MiOiJodHRwczovL2NhbGxhaS51cy5hdXRoMC5jb20vIiwic3ViIjoidURoRzZPa1VZR1dqeGFDcXJjbm1meHlSQ0JSblZXMjBAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vcGxhdGZvcm0uYXBpLmNhbGxhaSIsImlhdCI6MTY4Mzg5MzY4MiwiZXhwIjoxNjgzOTgwMDgyLCJhenAiOiJ1RGhHNk9rVVlHV2p4YUNxcmNubWZ4eVJDQlJuVlcyMCIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyIsInBlcm1pc3Npb25zIjpbXX0.DnPi9TahV8zCZIn5T6F2UzuByUfyplIjmU-OEFXuAa4rO4Rd3g8hGT8uOlTZIFbnSAnmkqTshvS01h45wjpQvd4ZIBZRwuXCzsEcpBxMND9W31fetEhQ4SXKz1qwha183wg2SerGGaxPuqEc2559jQVm0F-cxunUGwnGhD0L84wiSufJ9j2ktiGu9I3qX1elB-ze9dhYTTXZ40jzGAhWnXMH-QkGBQkGHcYVWugbxJaGjdyEJTgrgDcUyhY_nw8VMqEdi_IOSSraIvQ1Bocvr8lehEeHJMdjszlX7RBTuWRg7CT16ikQ8McufOV44LJ0s0C_cKG1wQ9abVciZ864XQ",
                    "expires_in": 86400,
                    "token_type": "Bearer"
                },
                "error": {}
            }
        }
    }
},
"400": {
    "description": "BAD REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"404": {
    "description": "NOT FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Internal server error occurred",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "SERVER ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal server error occurred",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
}
}
}
}
// schema
{
"response_200_getAuthToken": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "access_token": {
        "type": "string",
        "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkxicmlsNWNsQVk3Q3dsMlNSX0MwNiJ9.eyJpc3MiOiJodHRwczovL2NhbGxhaS51cy5hdXRoMC5jb20vIiwic3ViIjoidURoRzZPa1VZR1dqeGFDcXJjbm1meHlSQ0JSblZXMjBAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vcGxhdGZvcm0uYXBpLmNhbGxhaSIsImlhdCI6MTY4Mzg5MzY4MiwiZXhwIjoxNjgzOTgwMDgyLCJhenAiOiJ1RGhHNk9rVVlHV2p4YUNxcmNubWZ4eVJDQlJuVlcyMCIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyIsInBlcm1pc3Npb25zIjpbXX0.DnPi9TahV8zCZIn5T6F2UzuByUfyplIjmU-OEFXuAa4rO4Rd3g8hGT8uOlTZIFbnSAnmkqTshvS01h45wjpQvd4ZIBZRwuXCzsEcpBxMND9W31fetEhQ4SXKz1qwha183wg2SerGGaxPuqEc2559jQVm0F-cxunUGwnGhD0L84wiSufJ9j2ktiGu9I3qX1elB-ze9dhYTTXZ40jzGAhWnXMH-QkGBQkGHcYVWugbxJaGjdyEJTgrgDcUyhY_nw8VMqEdi_IOSSraIvQ1Bocvr8lehEeHJMdjszlX7RBTuWRg7CT16ikQ8McufOV44LJ0s0C_cKG1wQ9abVciZ864XQ"
    },
    "expires_in": {
        "type": "integer",
        "example": 86400
    },
    "token_type": {
        "type": "string",
        "example": "Bearer"
    }
}
},
"error": {
"type": "object"
}
}
},
"response_200": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object"
},
"error": {
"type": "object"
}
}
},
"response_201": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object"
},
"error": {
"type": "object"
}
}
},
"response_202": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object"
},
"error": {
"type": "object"
}
}
},
"response_204": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 204
    },
    "example": {
        "type": "string",
        "example": "NO_CONTENT"
    },
    "message": {
        "type": "string",
        "example": "No Content found"
    }
}
}
}
},
"response_503": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 503
    },
    "example": {
        "type": "string",
        "example": "SERVICE_UNAVAILABLE"
    },
    "message": {
        "type": "string",
        "example": "Currently this Service is Unavailable"
    }
}
}
}
},
"response_500": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "Internal server error occurred"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 500
    },
    "example": {
        "type": "string",
        "example": "INTERNAL_SERVER_ERROR"
    },
    "message": {
        "type": "string",
        "example": "Internal server error occurred"
    }
}
}
}
},
"response_400": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 400
    },
    "example": {
        "type": "string",
        "example": "BAD_REQUEST"
    },
    "message": {
        "type": "string",
        "example": "required parameters missing or invalid"
    }
}
}
}
},
"response_403": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 403
    },
    "example": {
        "type": "string",
        "example": "FORBIDDEN"
    },
    "message": {
        "type": "string",
        "example": "authentication required"
    }
}
}
}
},
"response_404": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "Internal server error occurred"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 404
    },
    "example": {
        "type": "string",
        "example": "NOT_FOUND"
    },
    "message": {
        "type": "string",
        "example": "requested resource not available"
    }
}
}
}
},
"response_401": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 401
    },
    "example": {
        "type": "string",
        "example": "UNAUTHORIZED"
    },
    "message": {
        "type": "string",
        "example": "invalid authentication data"
    }
}
}
}
},
"response_409": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 409
    },
    "example": {
        "type": "string",
        "example": "CONFLICT"
    },
    "message": {
        "type": "string",
        "example": "conflict has been occurred"
    }
}
}
}
}
}
}

DVA
{
"title": "DVA (Digital Virtual Assistant",
"description": "The Integration API is a web-based interface that enables to search for available DID(Direct Inward Dialing) numbers and purchase them configure voice over internet protocol (VOIP) with call AI, and attach and detach numbers with virtual agents. The service also includes functionality for setting up automatic speech recognition (ASR) and text-to-speech (TTS) features for the numbers.Users can create and manage virtual agents through the service and virtual agent can also be updated at any time to keep up with changing business needs.Additionally, the service offers SMS connector configuration with popular providers like Twilio or Vonage, enabling users to manage SMS interactions with customers from within the microservice",
// path
{
"/basic-dva/v1/basic/api/v1/bot/template/bots": {
"get": {
"tags": [
"DVA"
],
"summary": "Fetch DVA Templates",
"description": "The fetch DVA templates API allows you to fetch a comprehensive list of all the DVA (Digital Virtual Assistant) Templates that are currently available.",
"operationId": "get-basic-api-v1-bot-template-bots",
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/BotTemplatesResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "data": [
                        {
                            "_id": "6343b264f2a53e78434af8fb",
                            "template_id": "ssdc213vnvn",
                            "bot_name": "abcd",
                            "customer_name": "abcd",
                            "bot_id": "cvvsdgerrgfd123",
                            "is_editable": true,
                            "created_at": "2022-10-10T05:49:24.6090000+00:00",
                            "updated_at": "2022-10-10T05:49:24.6090000+00:00",
                            "number_attached": [
                                "123445"
                            ],
                            "slots": [
                                {
                                    "seq_no": "123",
                                    "slot_name": "abcd",
                                    "display_name": "abcd",
                                    "slot_utterance": "abcd",
                                    "utterance_updatable": true,
                                    "is_enabled": true,
                                    "_id": "63cf73c37f522c9a4b799af8"
                                }
                            ],
                            "fhir_specs": {
                                "client_id": "123354",
                                "secret_key": "as123zx",
                                "url": "http://abcd.com",
                                "fhir_resource_name": "abcd"
                            }
                        }
                    ]
                },
                "error": {}
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-dva/v1/basic/api/v1/bot/create": {
"post": {
"tags": [
"DVA"
],
"summary": "Create DVA",
"description": "This Create DVA API enables the creation of a brand-new Digital Virtual Assistant(DVA)",
"operationId": "post-basic-api-v1-bot-create",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Create_Bot"
        },
        "example": {
            "bot": {
                "template_id": "ssdc213vnvn",
                "customer_name": "adbc",
                "bot_name": "abcd",
                "webhook": "http://31.228.104.43:8896/webhooks/rest/webhook",
                "slots": [
                    {
                        "seq_no": "123",
                        "slot_name": "abcd",
                        "display_name": "abcd",
                        "slot_utterance": "abcd",
                        "is_mandatory": true,
                        "utterance_updatable": true,
                        "is_enabled": true
                    }
                ],
                "created_by": "admin@123gmail.com",
                "end_webhook": {
                    "is_enabled": true,
                    "url": "http://37.228.104.43:8896/webhooks/rest/webhook"
                },
                "fhir_specs": {
                    "client_id": "123354",
                    "secret_key": "as123zx",
                    "url": "http://abcd.com",
                    "fhir_resource_name": "abcd"
                }
            },
            "tenant_id": "tenant_12345"
        }
    }
}
},
"responses": {
"202": {
    "description": "ACCEPTED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_202"
            },
            "example": {
                "response": "Accepted",
                "message": "",
                "data": {},
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-dva/v1/basic/api/v1/bot": {
"post": {
"tags": [
"DVA"
],
"summary": "Fetch DVA",
"description": "The fetch DVA API allows you to obtain a comprehensive list of all DVA (Digital Virtual Assistant) based on their respective tenant ID.",
"operationId": "post-basic-api-v1-bot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Fetch_Bot"
        },
        "example": {
            "tenant_id": "tenant_12345",
            "itemsPerPage": 5,
            "pageIndex": 0
        }
    }
}
},
"responses": {
"202": {
    "description": "ACCEPTED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/fetchBotResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "bots": [
                        {
                            "_id": "6343b264f2a53e78434af8fb",
                            "bot_name": "abcd",
                            "customer_name": "abcd",
                            "bot_id": "cvvsdgerrgfd123",
                            "is_editable": true,
                            "created_at": "2022-10-10T05:49:24.6090000+00:00",
                            "updated_at": "2022-10-10T05:49:24.6090000+00:00",
                            "number_attached": [
                                "123445"
                            ],
                            "slots": [
                                {
                                    "seq_no": "123",
                                    "slot_name": "abcd",
                                    "display_name": "abcd",
                                    "slot_utterance": "abcd",
                                    "utterance_updatable": true,
                                    "is_enabled": true,
                                    "_id": "63cf73c37f522c9a4b799af8"
                                }
                            ],
                            "fhir_specs": {
                                "client_id": "123354",
                                "secret_key": "as123zx",
                                "url": "http://abcd.com",
                                "fhir_resource_name": "abcd"
                            }
                        }
                    ],
                    "count": 1
                },
                "error": {}
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
},
"patch": {
"tags": [
"DVA"
],
"summary": "Update DVA",
"description": "This API enables you to modify and make changes to a DVA(Digital Virtual Assistant).",
"operationId": "patch-basic-api-v1-bot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Update_Bot"
        },
        "example": {
            "bot": {
                "customer_name": "abcd",
                "bot_name": "abcd",
                "slots": [
                    {
                        "seq_no": "123",
                        "slot_name": "abcd",
                        "display_name": "abcd",
                        "slot_utterance": "abcd",
                        "is_mandatory": true,
                        "utterance_updatable": true,
                        "is_enabled": true
                    }
                ],
                "updated_by": "admin@123gmail.com",
                "end_webhook": {
                    "is_enabled": true,
                    "url": "http://37.228.104.43:8896/webhooks/rest/webhook"
                },
                "fhir_specs": {
                    "client_id": "123354",
                    "secret_key": "as123zx",
                    "url": "http://abcd.com",
                    "fhir_resource_name": "abcd"
                }
            },
            "tenant_id": "tenant_12345",
            "bot_id": "sfsdjfds32534dvds5sdfh",
            "is_bot_name_updated": true
        }
    }
}
},
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": "",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
},
"delete": {
"tags": [
"DVA"
],
"summary": "Delete DVA",
"description": "This API endpoint allows you to delete a DVA",
"operationId": "delete-basic-api-v1-bot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Delete_Bot"
        },
        "example": {
            "bot_id": "sfsdjfds32534dvds5sdfh",
            "tenant_id": "tenant_12345"
        }
    }
}
},
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": "",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-dva/v1/basic/api/v1/bot/{bot_id}": {
"get": {
"tags": [
"DVA"
],
"summary": "Fetch DVA Configuration",
"description": "The fetch DVA cofiguration retrieves the information regarding the configuration of the specified DVA (Digital Virtual Assistant).",
"operationId": "get-basic-api-v1-bot-bot_id",
"parameters": [
{
    "name": "bot_id",
    "in": "path",
    "description": "The unique identifier of the DVA",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": "sfsdjfds32534dvds5sdfh"
}
],
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/fetchBotConfigurationResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "bot": [
                        {
                            "_id": "6343b264f2a53e78434af8fb",
                            "bot_name": "abcd",
                            "customer_name": "abcd",
                            "bot_id": "cvvsdgerrgfd123",
                            "is_editable": true,
                            "tenant_id": "tenant_12345",
                            "created_at": "2022-10-10T05:49:24.6090000+00:00",
                            "updated_at": "2022-10-10T05:49:24.6090000+00:00",
                            "number_attached": [
                                "string"
                            ],
                            "slots": [
                                {
                                    "seq_no": "123",
                                    "slot_name": "abcd",
                                    "display_name": "abcd",
                                    "slot_utterance": "abcd",
                                    "utterance_updatable": true,
                                    "is_enabled": true,
                                    "_id": "63cf73c37f522c9a4b799af8"
                                }
                            ],
                            "fhir_specs": {
                                "client_id": "123354",
                                "secret_key": "as123zx",
                                "url": "http://abcd.com",
                                "fhir_resource_name": "abcd"
                            }
                        }
                    ]
                },
                "error": {}
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-dva/v1/basic/api/v1/number/attach/numberBot": {
"post": {
"tags": [
"DVA"
],
"summary": " Attach Number With DVA",
"description": "The attch number with DVA API allows you to attach a number to a DVA. Once the number is attached, the DVA can receive and respond to messages sent to that number.",
"operationId": "post-basic-api-v1-number-attach-numberbot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Attach_Number_Bot"
        },
        "example": {
            "number": "1234567890",
            "tenant_id": "tenant_12345",
            "webhook": "http://39.228.104.43:8896/webhooks/rest/webhook",
            "bot_name": "abcd",
            "bot_id": "fsdhfb2324xcnvx34534vdnj"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": {},
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-dva/v1/basic/api/v1/number/deattach/numberBot": {
"post": {
"tags": [
"DVA"
],
"summary": "Deattach Number With DVA",
"description": "The dettach number with DVA API allows you to deattach a number from a DVA. Once the number is deattached, the DVA will no longer receive messages sent to that number.",
"operationId": "post-basic-api-v1-number-deattach-numberbot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/DeAttach_Number_Bot"
        },
        "example": {
            "number": "1234567890",
            "tenant_id": "tenant_12345",
            "bot_id": "sfsdjfds32534dvds5sdfh"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": {},
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
}
}
// schem
{
"Create_Bot": {
"required": [
"tenant_id"
],
"type": "object",
"properties": {
"bot": {
"required": [
    "template_id",
    "bot_id",
    "bot_name",
    "created_by",
    "slots",
    "fhir_specs",
    "webhook",
    "end_webhook"
],
"type": "object",
"properties": {
    "template_id": {
        "type": "string",
        "description": "The unique identifier assigned to the template used for creating a Digital Virtual Assistant (DVA)",
        "example": "ssdc213vnvn"
    },
    "customer_name": {
        "type": "string",
        "description": "The customer's name is a unique identifier used to distinguish and refer to a specific individual or organization.",
        "example": "adbc"
    },
    "bot_name": {
        "type": "string",
        "description": "The name of the DVA(Digital Virtual Assistant)",
        "example": "abcd"
    },
    "webhook": {
        "type": "string",
        "description": "The webhook URL for the DVA(Digital Virtual Assistant)",
        "example": "http://31.228.104.43:8896/webhooks/rest/webhook"
    },
    "slots": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "seq_no": {
                    "type": "integer",
                    "description": "The slot's sequence number refers to a numerical identifier used to determine the order or position of items within the slot.",
                    "example": "123"
                },
                "slot_name": {
                    "type": "string",
                    "description": "A slot name refers to a parameter/variable used to capture and store user input during a conversation.",
                    "example": "abcd"
                },
                "display_name": {
                    "type": "string",
                    "description": "The display name represents the human-friendly label or name associated with a slot or parameter.",
                    "example": "abcd"
                },
                "slot_utterance": {
                    "type": "string",
                    "description": "A slot utterance refers to the way a chatbot prompts the user to provide a value for a specific slot or parameter.",
                    "example": "abcd"
                },
                "is_mandatory": {
                    "type": "boolean",
                    "description": "Specifies whether the slot is mandatory or not. If set to true, it indicates that the slot must be filled by the user or the system before proceeding. If set to false, the slot may be optional.",
                    "example": true
                },
                "utterance_updatable": {
                    "type": "boolean",
                    "description": " Determines whether the slot utterance is updatable or not. When set to true, it allows the modification of the user's response or the system's generated utterance for this slot. If set to false, the utterance associated with this slot remains fixed and cannot be changed",
                    "example": true
                },
                "is_enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the slot is enabled or not. When set to true, the slot is active and can be used in the conversation flow. If set to false, the slot is disabled and should not be considered during the conversation.",
                    "example": true
                }
            }
        }
    },
    "created_by": {
        "type": "string",
        "description": "Created By refers to the entity that created the user",
        "example": "admin@123gmail.com"
    },
    "end_webhook": {
        "type": "object",
        "properties": {
            "is_enabled": {
                "type": "boolean",
                "description": "Specifies whether the end webhook is enabled or not. Set this value to true if the webhook is active; otherwise, set it to false.",
                "example": true
            },
            "url": {
                "type": "string",
                "description": "The URL where the end webhook is hosted. Use this URL to send HTTP POST requests with the required payload for webhook processing.",
                "example": "http://37.228.104.43:8896/webhooks/rest/webhook"
            }
        }
    },
    "fhir_specs": {
        "type": "object",
        "properties": {
            "client_id": {
                "type": "string",
                "description": "The client ID associated with the FHIR specifications",
                "example": "123354"
            },
            "secret_key": {
                "type": "string",
                "description": "The secret key of the FHIR specifications",
                "example": "as123zx"
            },
            "url": {
                "type": "string",
                "description": "The URL of the FHIR specifications",
                "example": "http://abcd.com"
            },
            "fhir_resource_name": {
                "type": "string",
                "description": "The name of the FHIR resource used by the Digital Virtual Assistant (DVA)",
                "example": "abcd"
            }
        },
        "description": "An object that specifies the details of the FHIR (Fast Healthcare Interoperability Resources) server utilized by the Digital Virtual Assistant (DVA)"
    }
}
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
}
}
},
"Update_Bot": {
"required": [
"tenant_id",
"bot_id"
],
"type": "object",
"properties": {
"bot": {
"required": [
    "customer_name",
    "bot_name",
    "updated",
    "slots",
    "fhir_specs",
    "end_webhook"
],
"type": "object",
"properties": {
    "customer_name": {
        "type": "string",
        "description": "The customer's name is a unique identifier used to distinguish and refer to a specific individual or organization.",
        "example": "abcd"
    },
    "bot_name": {
        "type": "string",
        "description": "The name of the DVA(Digital Virtual Assistant)",
        "example": "abcd"
    },
    "slots": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "seq_no": {
                    "type": "integer",
                    "description": "The slot's sequence number refers to a numerical identifier used to determine the order or position of items within the slot.",
                    "example": "123"
                },
                "slot_name": {
                    "type": "string",
                    "description": "A slot name refers to a parameter/variable used to capture and store user input during a conversation.",
                    "example": "abcd"
                },
                "display_name": {
                    "type": "string",
                    "description": "The display name represents the human-friendly label or name associated with a slot or parameter.",
                    "example": "abcd"
                },
                "slot_utterance": {
                    "type": "string",
                    "description": "A slot utterance refers to the way a chatbot prompts the user to provide a value for a specific slot or parameter.",
                    "example": "abcd"
                },
                "is_mandatory": {
                    "type": "boolean",
                    "description": "Specifies whether the slot is mandatory or not. If set to true, it indicates that the slot must be filled by the user or the system before proceeding. If set to false, the slot may be optional.",
                    "example": true
                },
                "utterance_updatable": {
                    "type": "boolean",
                    "description": " Determines whether the slot utterance is updatable or not. When set to true, it allows the modification of the user's response or the system's generated utterance for this slot. If set to false, the utterance associated with this slot remains fixed and cannot be changed.",
                    "example": true
                },
                "is_enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the slot is enabled or not. When set to true, the slot is active and can be used in the conversation flow. If set to false, the slot is disabled and should not be considered during the conversation.",
                    "example": true
                }
            }
        }
    },
    "updated_by": {
        "type": "string",
        "description": "Updated By refers to the entity that updated the user",
        "example": "admin@123gmail.com"
    },
    "end_webhook": {
        "type": "object",
        "properties": {
            "is_enabled": {
                "type": "boolean",
                "description": "Specifies whether the end webhook is enabled or not. Set this value to true if the webhook is active; otherwise, set it to false.",
                "example": true
            },
            "url": {
                "type": "string",
                "description": " The URL where the end webhook is hosted. Use this URL to send HTTP POST requests with the required payload for webhook processing.",
                "example": "http://37.228.104.43:8896/webhooks/rest/webhook"
            }
        }
    },
    "fhir_specs": {
        "type": "object",
        "properties": {
            "client_id": {
                "type": "string",
                "description": "The client ID associated with the FHIR specifications",
                "example": "123354"
            },
            "secret_key": {
                "type": "string",
                "description": "The secret key of the FHIR specifications",
                "example": "as123zx"
            },
            "url": {
                "type": "string",
                "description": "The URL of the FHIR specifications",
                "example": "http://abcd.com"
            },
            "fhir_resource_name": {
                "type": "string",
                "description": "The name of the FHIR resource used by the Digital Virtual Assistant (DVA)",
                "example": "abcd"
            }
        }
    }
}
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"bot_id": {
"type": "string",
"description": "The unique identifier of the DVA",
"example": "sfsdjfds32534dvds5sdfh"
},
"is_bot_name_updated": {
"type": "boolean",
"description": "A boolean indicating whether the DVA's (Digital Virtual Assistant) name has been updated or not.."
}
}
},
"Delete_Bot": {
"required": [
"bot_id",
"tenant_id"
],
"type": "object",
"properties": {
"bot_id": {
"type": "string",
"description": "The unique identifier of the DVA",
"example": "sfsdjfds32534dvds5sdfh"
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
}
}
},
"Fetch_Bot": {
"required": [
"tenant_id",
"itemsPerPage",
"pageIndex"
],
"type": "object",
"properties": {
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"itemsPerPage": {
"type": "integer",
"description": "itemsPerPage refers to a constraint or restriction imposed on the number of results or actions that can be obtained or performed within a system.",
"example": 5
},
"pageIndex": {
"type": "integer",
"description": "pageIndex refers to the number of items or records that are skipped over before beginning to retrieve data",
"example": 0
}
},
"description": "Represents a request to fetch data for a virtual agent"
},
"Attach_Number_Bot": {
"required": [
"number",
"tenant_id",
"webhook"
],
"type": "object",
"properties": {
"number": {
"type": "string",
"description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
"example": "1234567890"
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"webhook": {
"type": "string",
"description": "The URL of the webhook associated with the bot",
"example": "http://39.228.104.43:8896/webhooks/rest/webhook"
},
"bot_name": {
"type": "string",
"description": "The name of the bot",
"example": "abcd"
},
"bot_id": {
"type": "string",
"description": "The unique identifier of the bot",
"example": "fsdhfb2324xcnvx34534vdnj"
}
}
},
"DeAttach_Number_Bot": {
"required": [
"number",
"tenant_id",
"bot_id"
],
"type": "object",
"properties": {
"number": {
"type": "string",
"description": "A phone number is a numerical sequence assigned to a telephone line or device to establish communication with other parties",
"example": "1234567890"
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"bot_id": {
"type": "string",
"description": "The unique identifier of the DVA",
"example": "sfsdjfds32534dvds5sdfh"
}
}
},
"BotTemplatesResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "data": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                    "example": "6343b264f2a53e78434af8fb"
                },
                "template_id": {
                    "type": "string",
                    "description": "The unique identifier assigned to the template used for creating a Digital Virtual Assistant (DVA)",
                    "example": "ssdc213vnvn"
                },
                "bot_name": {
                    "type": "string",
                    "description": "The name of the DVA(Digital Virtual Assistant)",
                    "example": "abcd"
                },
                "customer_name": {
                    "type": "string",
                    "description": "The customer's name is a unique identifier used to distinguish and refer to a specific individual or organization.",
                    "example": "abcd"
                },
                "bot_id": {
                    "type": "string",
                    "description": "The unique identifier of the DVA",
                    "example": "cvvsdgerrgfd123"
                },
                "is_editable": {
                    "type": "boolean",
                    "description": "Is editable defines whether the bot is editable or not.",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "description": "The specific date the entity is created.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "updated_at": {
                    "type": "string",
                    "description": "The specific date the entity is updated.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "number_attached": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "123445"
                    }
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "seq_no": {
                                "type": "integer",
                                "description": "The slot's sequence number refers to a numerical identifier used to determine the order or position of items within the slot.",
                                "example": "123"
                            },
                            "slot_name": {
                                "type": "string",
                                "description": "A slot name refers to a parameter/variable used to capture and store user input during a conversation.",
                                "example": "abcd"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "The display name represents the human-friendly label or name associated with a slot or parameter.",
                                "example": "abcd"
                            },
                            "slot_utterance": {
                                "type": "string",
                                "description": "A slot utterance refers to the way a chatbot prompts the user to provide a value for a specific slot or parameter.",
                                "example": "abcd"
                            },
                            "utterance_updatable": {
                                "type": "boolean",
                                "description": " Determines whether the slot utterance is updatable or not. When set to true, it allows the modification of the user's response or the system's generated utterance for this slot. If set to false, the utterance associated with this slot remains fixed and cannot be changed",
                                "example": true
                            },
                            "is_enabled": {
                                "type": "boolean",
                                "description": "Indicates whether the slot is enabled or not. When set to true, the slot is active and can be used in the conversation flow. If set to false, the slot is disabled and should not be considered during the conversation.",
                                "example": true
                            },
                            "_id": {
                                "type": "string",
                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                "example": "63cf73c37f522c9a4b799af8"
                            }
                        }
                    }
                },
                "fhir_specs": {
                    "type": "object",
                    "properties": {
                        "client_id": {
                            "type": "string",
                            "description": "The client ID associated with the FHIR specifications",
                            "example": "123354"
                        },
                        "secret_key": {
                            "type": "string",
                            "description": "The secret key of the FHIR specifications",
                            "example": "as123zx"
                        },
                        "url": {
                            "type": "string",
                            "description": "The URL of the FHIR specifications",
                            "example": "http://abcd.com"
                        },
                        "fhir_resource_name": {
                            "type": "string",
                            "description": "The name of the FHIR resource used by the Digital Virtual Assistant (DVA)",
                            "example": "abcd"
                        }
                    }
                }
            }
        }
    }
}
},
"error": {
"type": "object"
}
}
},
"fetchBotResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "bots": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                    "example": "6343b264f2a53e78434af8fb"
                },
                "bot_name": {
                    "type": "string",
                    "description": "The name of the DVA(Digital Virtual Assistant)",
                    "example": "abcd"
                },
                "customer_name": {
                    "type": "string",
                    "description": "The customer's name is a unique identifier used to distinguish and refer to a specific individual or organization.",
                    "example": "abcd"
                },
                "bot_id": {
                    "type": "string",
                    "description": "The unique identifier of the DVA",
                    "example": "cvvsdgerrgfd123"
                },
                "is_editable": {
                    "type": "boolean",
                    "description": "Is editable defines whether the bot is editable or not.",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "description": "The specific date the entity is created.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "updated_at": {
                    "type": "string",
                    "description": "The specific date the entity is updated.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "number_attached": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "123445"
                    }
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "seq_no": {
                                "type": "integer",
                                "description": "The slot's sequence number refers to a numerical identifier used to determine the order or position of items within the slot.",
                                "example": "123"
                            },
                            "slot_name": {
                                "type": "string",
                                "description": "A slot name refers to a parameter/variable used to capture and store user input during a conversation.",
                                "example": "abcd"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "The display name represents the human-friendly label or name associated with a slot or parameter.",
                                "example": "abcd"
                            },
                            "slot_utterance": {
                                "type": "string",
                                "description": "A slot utterance refers to the way a chatbot prompts the user to provide a value for a specific slot or parameter.",
                                "example": "abcd"
                            },
                            "utterance_updatable": {
                                "type": "boolean",
                                "description": " Determines whether the slot utterance is updatable or not. When set to true, it allows the modification of the user's response or the system's generated utterance for this slot. If set to false, the utterance associated with this slot remains fixed and cannot be changed",
                                "example": true
                            },
                            "is_enabled": {
                                "type": "boolean",
                                "description": "Indicates whether the slot is enabled or not. When set to true, the slot is active and can be used in the conversation flow. If set to false, the slot is disabled and should not be considered during the conversation.",
                                "example": true
                            },
                            "_id": {
                                "type": "string",
                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                "example": "63cf73c37f522c9a4b799af8"
                            }
                        }
                    }
                },
                "fhir_specs": {
                    "type": "object",
                    "properties": {
                        "client_id": {
                            "type": "string",
                            "description": "The client ID associated with the FHIR specifications",
                            "example": "123354"
                        },
                        "secret_key": {
                            "type": "string",
                            "description": "The secret key of the FHIR specifications",
                            "example": "as123zx"
                        },
                        "url": {
                            "type": "string",
                            "description": "The URL of the FHIR specifications",
                            "example": "http://abcd.com"
                        },
                        "fhir_resource_name": {
                            "type": "string",
                            "description": "The name of the FHIR resource used by the Digital Virtual Assistant (DVA)",
                            "example": "abcd"
                        }
                    }
                }
            }
        }
    },
    "count": {
        "type": "integer",
        "description": "Count refers to the numerical value that represents the total number of items, occurrences, or entities within a specific set or group.",
        "example": 1
    }
}
},
"error": {
"type": "object"
}
}
},
"fetchBotConfigurationResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "bot": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                    "example": "6343b264f2a53e78434af8fb"
                },
                "bot_name": {
                    "type": "string",
                    "description": "The name of the DVA(Digital Virtual Assistant)",
                    "example": "abcd"
                },
                "customer_name": {
                    "type": "string",
                    "description": "The customer's name is a unique identifier used to distinguish and refer to a specific individual or organization.",
                    "example": "abcd"
                },
                "bot_id": {
                    "type": "string",
                    "description": "The unique identifier of the DVA",
                    "example": "cvvsdgerrgfd123"
                },
                "is_editable": {
                    "type": "boolean",
                    "description": "Is editable defines whether the bot is editable or not.",
                    "example": true
                },
                "tenant_id": {
                    "type": "string",
                    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                    "example": "tenant_12345"
                },
                "created_at": {
                    "type": "string",
                    "description": "The specific date the entity is created.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "updated_at": {
                    "type": "string",
                    "description": "The specific date the entity is updated.",
                    "example": "2022-10-10T05:49:24.609Z"
                },
                "number_attached": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "seq_no": {
                                "type": "integer",
                                "description": "The slot's sequence number refers to a numerical identifier used to determine the order or position of items within the slot.",
                                "example": "123"
                            },
                            "slot_name": {
                                "type": "string",
                                "description": "A slot name refers to a parameter/variable used to capture and store user input during a conversation.",
                                "example": "abcd"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "The display name represents the human-friendly label or name associated with a slot or parameter.",
                                "example": "abcd"
                            },
                            "slot_utterance": {
                                "type": "string",
                                "description": "A slot utterance refers to the way a chatbot prompts the user to provide a value for a specific slot or parameter.",
                                "example": "abcd"
                            },
                            "utterance_updatable": {
                                "type": "boolean",
                                "description": " Determines whether the slot utterance is updatable or not. When set to true, it allows the modification of the user's response or the system's generated utterance for this slot. If set to false, the utterance associated with this slot remains fixed and cannot be changed",
                                "example": true
                            },
                            "is_enabled": {
                                "type": "boolean",
                                "description": "Indicates whether the slot is enabled or not. When set to true, the slot is active and can be used in the conversation flow. If set to false, the slot is disabled and should not be considered during the conversation.",
                                "example": true
                            },
                            "_id": {
                                "type": "string",
                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                "example": "63cf73c37f522c9a4b799af8"
                            }
                        }
                    }
                },
                "fhir_specs": {
                    "type": "object",
                    "properties": {
                        "client_id": {
                            "type": "string",
                            "description": "The client ID associated with the FHIR specifications",
                            "example": "123354"
                        },
                        "secret_key": {
                            "type": "string",
                            "description": "The secret key of the FHIR specifications",
                            "example": "as123zx"
                        },
                        "url": {
                            "type": "string",
                            "description": "The URL of the FHIR specifications",
                            "example": "http://abcd.com"
                        },
                        "fhir_resource_name": {
                            "type": "string",
                            "description": "The name of the FHIR resource used by the Digital Virtual Assistant (DVA)",
                            "example": "abcd"
                        }
                    }
                }
            }
        }
    }
}
},
"error": {
"type": "object"
}
}
}
}

}

VOICE call
{
"title": "Calling",
"description": "Outbound calling API allows you to programmatically initiate outgoing phone calls from your application or system. It provides a way to automate the process of making calls, enabling you to integrate voice communication capabilities into your software or service.",
// path
{
"/telephony/v1/outbound/api/v1/calling/dial-direct-call/{calling_no}/{called_no}": {
"post": {
"tags": [
"OUTBOUND"
],
"summary": "Make a Voice Call",
"description": "When you initiate outgoing phone calls from your application or system, you enable your software or service to automatically dial and connect with external phone numbers. This functionality is typically achieved by integrating with with Call Ai using an outbound calling API.",
"operationId": "post-outbound-api-v1-calling-dial-direct-call-calling_no-called_no",
"parameters": [
{
    "name": "calling_no",
    "in": "path",
    "description": "The number through which you want to inititate the call.",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": 12073000031
},
{
    "name": "called_no",
    "in": "path",
    "description": "Mobile_number defines the contact number that was dialed by campaign.",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": 918178809127
}
],
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/normalcall"
        },
        "example": "string"
    }
}
},
"responses": {
"200": {
    "description": "SUCESS",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200_channel"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "id": "Asterisk-MachineName-1234567890.123",
                    "protocol_id": "8bf07023-61d3-4fd8-8565-41cba0437fca",
                    "name": "PJSIP/123456789-00000000",
                    "state": "Up",
                    "caller": {
                        "name": "Alex",
                        "number": "123456789"
                    },
                    "connected": {
                        "name": "Alex",
                        "number": "123456789"
                    },
                    "accountcode": "string",
                    "dialplan": {
                        "context": "x",
                        "exten": "12345667890",
                        "priority": "1",
                        "app_name": "AppDialXX",
                        "app_data": "(Outgoing Line)"
                    },
                    "creationtime": "string",
                    "language": "string",
                    "channelvars": "string"
                },
                "error": {}
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 400,
                    "message": "Invalid endpoint specified"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "Authentication required"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "Channel with given unique ID already exists."
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal server error occurred",
                "error": {
                    "code": 500,
                    "message": "Yikes! Cannot parse resource"
                }
            }
        }
    }
}
}
}
},
"/telephony/v1/outbound/api/v1/calling/dial-campaign-call": {
"post": {
"tags": [
"OUTBOUND"
],
"summary": "Schedule Voice Call",
"description": "When you initiate outgoing phone calls from your application or system, you enable your software or service to automatically dial and connect with external phone numbers. This functionality is typically achieved by integrating with with Call Ai using an outbound calling API.",
"operationId": "post-ari-channels-endpoint-endpoint-extension-extension-context-context-api_",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/CampaignCall"
        },
        "example": {
            "tenant_id": "tenant_09722811",
            "campaign_id": "100",
            "called_no": "918178809127",
            "email": "sandeep.rawat@call-ai.com",
            "name": "Sandeep"
        }
    }
}
},
"responses": {
"200": {
    "description": "SUCESS",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200_channel"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "id": "Asterisk-MachineName-1234567890.123",
                    "protocol_id": "8bf07023-61d3-4fd8-8565-41cba0437fca",
                    "name": "PJSIP/123456789-00000000",
                    "state": "Up",
                    "caller": {
                        "name": "Alex",
                        "number": "123456789"
                    },
                    "connected": {
                        "name": "Alex",
                        "number": "123456789"
                    },
                    "accountcode": "string",
                    "dialplan": {
                        "context": "x",
                        "exten": "12345667890",
                        "priority": "1",
                        "app_name": "AppDialXX",
                        "app_data": "(Outgoing Line)"
                    },
                    "creationtime": "string",
                    "language": "string",
                    "channelvars": "string"
                },
                "error": {}
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 400,
                    "message": "Invalid endpoint specified"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "Authentication required"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "FAILED",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "Channel with given unique ID already exists."
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal server error occurred",
                "error": {
                    "code": 500,
                    "message": "Yikes! Cannot parse resource"
                }
            }
        }
    }
}
}
}
}
}
// schema

{
"CampaignCall": {
"type": "object",
"properties": {
"variables": {
"required": [
    "tenant_id",
    "campaign_id",
    "called_no",
    "name",
    "email"
],
"type": "object",
"properties": {
    "tenant_id": {
        "type": "string",
        "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
        "example": "teanat_123456"
    },
    "campaign_id": {
        "type": "string",
        "description": "When a new campaign is created, a campaign ID is assigned to it.",
        "example": "1"
    },
    "called_no": {
        "type": "string",
        "description": "Mobile_number defines the contact number that was dialed by campaign.",
        "example": "918178809127"
    },
    "name": {
        "type": "string",
        "description": "Name of the user who is going to reveive the call.",
        "example": "Sandeep"
    },
    "email": {
        "type": "string",
        "description": "Email of the user who is inititing the call.",
        "example": "sandeep@call-ai.com"
    }
}
}
}
},
"normalcall": {
"type": "string",
"description": "Normal Outbound Call Request Body Should Be Empty"
},
"response_200_channel": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "id": {
        "type": "string",
        "description": "Unique identifier of the channel",
        "example": "Asterisk-MachineName-1234567890.123"
    },
    "protocol_id": {
        "type": "string",
        "description": "Protocol id from underlying channel driver",
        "example": "8bf07023-61d3-4fd8-8565-41cba0437fca"
    },
    "name": {
        "type": "string",
        "description": "Name of the channel (i.e. SIP/XXX or PJSIP/XXX)",
        "example": "PJSIP/123456789-00000000"
    },
    "state": {
        "enum": [
            "Down",
            "Rsrved",
            "OffHook",
            "Dialing",
            "Ring",
            "Ringing",
            "Up",
            "Busy",
            "Dialing Offhook",
            "Pre-ring",
            "Unknown"
        ],
        "type": "string",
        "description": "State of The channel",
        "example": "Up"
    },
    "caller": {
        "type": "object",
        "properties": {
            "name": {
                "description": "Name Of Caller",
                "example": "Alex"
            },
            "number": {
                "description": "caller defines the phone number of the calling party.",
                "example": "123456789"
            }
        }
    },
    "connected": {
        "type": "object",
        "properties": {
            "name": {
                "description": "Name Of Caller",
                "example": "Alex"
            },
            "number": {
                "description": "caller defines the phone number of the calling party.",
                "example": "123456789"
            }
        }
    },
    "accountcode": {
        "type": "string"
    },
    "dialplan": {
        "type": "object",
        "properties": {
            "context": {
                "type": "string",
                "description": "Context in the dialplan",
                "example": "x"
            },
            "exten": {
                "type": "string",
                "description": "Extension in the dialplan",
                "example": "12345667890"
            },
            "priority": {
                "type": "string",
                "description": "Priority in the dialplan",
                "example": "1"
            },
            "app_name": {
                "type": "string",
                "description": "Name of current dialplan application",
                "example": "AppDialXX"
            },
            "app_data": {
                "type": "string",
                "description": "Parameter of current dialplan application",
                "example": "(Outgoing Line)"
            }
        },
        "description": "Current location in the dialplan"
    },
    "creationtime": {
        "type": "string",
        "description": "Timestamp when channel was created"
    },
    "language": {
        "type": "string",
        "description": "The default spoken language"
    },
    "channelvars": {
        "type": "string",
        "description": "Channel variables"
    }
}
},
"error": {
"type": "object"
}
}
},
"response_500": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "Internal server error occurred"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 500
    },
    "message": {
        "type": "string",
        "example": "Yikes! Cannot parse resource"
    }
}
}
}
},
"response_400": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 400
    },
    "message": {
        "type": "string",
        "example": "Invalid endpoint specified"
    }
}
}
}
},
"response_401": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 401
    },
    "example": {
        "type": "string",
        "example": "UNAUTHORIZED"
    },
    "message": {
        "type": "string",
        "example": "Authentication required"
    }
}
}
}
},
"response_409": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "FAILED"
},
"error": {
"type": "object",
"properties": {
    "code": {
        "type": "integer",
        "example": 409
    },
    "example": {
        "type": "string",
        "example": "CONFLICT"
    },
    "message": {
        "type": "string",
        "example": "Channel with given unique ID already exists."
    }
}
}
}
}
}
}

DID number management
{
"title": "Number Management",
"description": "The Integration API is a web-based interface that enables to search for available DID(Direct Inward Dialing) numbers and purchase them configure voice over internet protocol (VOIP) with call AI, and attach and detach numbers with virtual agents. The service also includes functionality for setting up automatic speech recognition (ASR) and text-to-speech (TTS) features for the numbers.Users can create and manage virtual agents through the service and virtual agent can also be updated at any time to keep up with changing business needs.Additionally, the service offers SMS connector configuration with popular providers like Twilio or Vonage, enabling users to manage SMS interactions with customers from within the microservice",
// path
{
"/basic-numbers/v1/basic/api/v1/number/buy": {
"post": {
"tags": [
"Buy Numbers"
],
"summary": "Buy Numbers",
"description": "The Buy Number API alows user to purchase a new number with the specified details.",
"operationId": "post-basic-api-v1-number-buy",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Buy_Number"
        },
        "example": {
            "tenant_id": "tenant_12345",
            "msisdn": "19212093845",
            "customer_email": "customer123@gmail.com",
            "country": "US",
            "type": "mobile-lvn"
        }
    }
}
},
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_200"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": "",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/available": {
"get": {
"tags": [
"Buy Numbers"
],
"summary": "Fetch All Available Number",
"description": "The fetch all available number API allows you to retrieve all available numbers.",
"operationId": "get-basic-api-v1-number-available-countrycode-countrycode-index-index-type-t",
"parameters": [
{
    "name": "countryCode",
    "in": "query",
    "description": "A code is a numerical or alphabetical code assigned to each country or territory",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": "US"
},
{
    "name": "index",
    "in": "query",
    "description": "A page index refers to a sequential numbering system that assigns unique numbers or labels to pages within a document.",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": 0
},
{
    "name": "type",
    "in": "query",
    "description": "Type define the entity individual personality.",
    "required": true,
    "schema": {
        "enum": [
            "mobile-lvn",
            "landline",
            "landline-toll-free"
        ],
        "type": "string",
        "example": "mobile-lvn"
    }
},
{
    "name": "page_size",
    "in": "query",
    "description": "Page size refers to the fixed amount of data or memory allocated for a single page of storage or processing. ",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": 1
},
{
    "name": "pattern",
    "in": "query",
    "description": "A pattern refers to a specific sequence or arrangement of characters, symbols, or data that is used to match or identify similar instances.",
    "schema": {
        "type": "string"
    },
    "example": "search_pattern"
},
{
    "name": "search_pattern",
    "in": "query",
    "description": "A search pattern specifies the criteria or conditions for matching and retrieving relevant information.",
    "schema": {
        "enum": [
            0,
            1,
            2
        ],
        "type": "integer",
        "example": "0"
    }
}
],
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/AvailableNumberResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "numbers": [
                        {
                            "country": "US",
                            "msisdn": "19212093845",
                            "cost": "0.90",
                            "type": "mobile-lvn",
                            "features": [
                                "VOICE"
                            ]
                        }
                    ],
                    "count": "123"
                },
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/countries": {
"get": {
"tags": [
"Buy Numbers"
],
"summary": "Fetch All Countries",
"description": "The fetch all countries API allows you to retrieve a list of numbers that are available for every countries.",
"operationId": "get-basic-api-v1-number-countries",
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/GetCountryResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": [
                    {
                        "_id": "62a724cb8ed735acf225d580",
                        "name": "Afghanistan",
                        "flag": "AF",
                        "code": "AF",
                        "dial_code": "+93"
                    }
                ],
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/purchased/{tenant_id}": {
"get": {
"tags": [
"Your numbers"
],
"summary": "Fetch All Purchased Numbers",
"description": "The fetch all purchased number API allows you to retrieve the list of phone numbers that have been purchased by a specific tenant",
"operationId": "get-basic-api-v1-number-purchased-tenant_id",
"parameters": [
{
    "name": "tenant_id",
    "in": "path",
    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
    "required": true,
    "schema": {
        "type": "string"
    },
    "example": "tenant_12345"
}
],
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/PurchasedNumbersResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "purchased_numbers_vonage": {
                        "count": "1",
                        "numbers": [
                            {
                                "country": "US",
                                "msisdn": "19212093845",
                                "type": "mobile-lvn",
                                "voiceCallbackType": "sip",
                                "voiceCallbackValue": "12073000031:Aa11b0be0d388224ff49edae@dev-siptrunk.mm.com",
                                "features": [
                                    "VOICE"
                                ]
                            }
                        ]
                    },
                    "purchased_numbers_db": [
                        {
                            "bot_attached": {
                                "bot_name": "basic_bot_tenant_09722812",
                                "bot_id": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vm"
                            },
                            "_id": "62d5164908eb6c8c036f591h",
                            "country": "US",
                            "msisdn": "19212093845",
                            "created_at": "2022-07-18T08:14:01.8210000+00:00",
                            "updated_at": "2022-07-18T08:14:01.8210000+00:00"
                        }
                    ]
                },
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/tts/save": {
"post": {
"tags": [
"Update Number Configuration"
],
"summary": "Update TTS",
"description": "The update TTS API allows to update text-to-speech data to the server, using the specified TTS engine and settings.",
"operationId": "post-basic-api-v1-number-tts-save",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Save_Voice_Data"
        },
        "example": {
            "tts": {
                "tts_engine": "google",
                "number": "1234567890",
                "language_code": "en-US",
                "ssml_gender": "MALE",
                "voice": " en-US-Standard-J",
                "voice_style ": "Newscast-Formal",
                "tenant_id": "tenant_12345",
                "pitch": "1",
                "speed": "1",
                "language": "Hindi (India)"
            },
            "mode": "update"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": "{}",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/attach/numberBot": {
"post": {
"tags": [
"Update Number Configuration"
],
"summary": " Attach  Number With DVA",
"description": "The attach number with DVA allows user to attach a number to DVA.",
"operationId": "post-basic-api-v1-number-attach-numberbot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Attach_Number_Bot"
        },
        "example": {
            "number": "1234567890",
            "tenant_id": "tenant_12345",
            "webhook": "http://39.228.104.43:8896/webhooks/rest/webhook",
            "bot_name": "abcd",
            "bot_id": "fsdhfb2324xcnvx34534vdnj"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": "{}",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/deattach/numberBot": {
"post": {
"tags": [
"Update Number Configuration"
],
"summary": "Deattach  Number With DVA",
"description": "The Deattach number with DVA allows user to deattach a number from DVA.",
"operationId": "post-basic-api-v1-number-deattach-numberbot",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/DeAttach_Number_Bot"
        },
        "example": {
            "number": "1234567890",
            "tenant_id": "tenant_12345",
            "bot_id": "sfsdjfds32534dvds5sdfh"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": "{}",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/teams/save": {
"post": {
"tags": [
"Update Number Configuration"
],
"summary": "Attach A Number With teams",
"description": "The attach a number with teams API allows to attach a number to the team.",
"operationId": "post-basic-api-v1-teams-save",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/save_Team_Data"
        },
        "example": {
            "tenant_id": "tenant_12345",
            "name": "tester_09722811",
            "display_name": "tester",
            "number_attached": "1234567890"
        }
    }
}
},
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/SaveTeamsResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": {
                    "response": {
                        "created_at": "2023-05-01T10:54:27.7520000+00:00",
                        "team_id": "1",
                        "tenant_id": "tenant_12345",
                        "name": "admin_tenant_12345",
                        "display_name": "admin",
                        "number_attached": "1234567890",
                        "default_team": "true"
                    }
                },
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/teams": {
"delete": {
"tags": [
"Update Number Configuration"
],
"summary": "DeAttach Number With teams",
"description": "The deattach a number with teams API allows to deattach a number to the team.",
"operationId": "delete-basic-api-v1-teams",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Delete_Team_Data"
        },
        "example": {
            "name": "tester_09722811"
        }
    }
}
},
"responses": {
"200": {
    "description": "OK",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/DeleteTeamDataResponse"
            },
            "example": {
                "response": "SUCCESS",
                "message": "",
                "data": "1",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
},
"/basic-numbers/v1/basic/api/v1/number/googleASR/save": {
"post": {
"tags": [
"Update Number Configuration"
],
"summary": "Update Asr",
"description": "The update ASR API update Google ASR data to the server.",
"operationId": "post-basic-api-v1-number-googleasr-save",
"requestBody": {
"content": {
    "application/json": {
        "schema": {
            "$ref": "#/components/schemas/Save_Asr_Data"
        },
        "example": {
            "asr": {
                "asr_engine": "google",
                "number": "1234567890",
                "language_code": "en-US",
                "model": "English-US",
                "tenant_id": "tenant_12345",
                "language": "Hindi (India)",
                "displayed_model": "Default"
            },
            "mode": "update"
        }
    }
}
},
"responses": {
"201": {
    "description": "CREATED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_201"
            },
            "example": {
                "response": "Created",
                "message": "",
                "data": "{}",
                "error": "{}"
            }
        }
    }
},
"204": {
    "description": "NO_CONTENT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_204"
            },
            "example": {
                "response": "No content",
                "error": {
                    "code": 204,
                    "example": "NO_CONTENT",
                    "message": "No Content found"
                }
            }
        }
    }
},
"400": {
    "description": "BAD_REQUEST",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_400"
            },
            "example": {
                "response": "Bad Request",
                "error": {
                    "code": 400,
                    "example": "BAD_REQUEST",
                    "message": "required parameters missing or invalid"
                }
            }
        }
    }
},
"401": {
    "description": "UNAUTHORIZED",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_401"
            },
            "example": {
                "response": "Unauthorized",
                "error": {
                    "code": 401,
                    "example": "UNAUTHORIZED",
                    "message": "invalid authentication data"
                }
            }
        }
    }
},
"403": {
    "description": "FORBIDDEN",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_403"
            },
            "example": {
                "response": " Forbidden",
                "error": {
                    "code": 403,
                    "example": "FORBIDDEN",
                    "message": "authentication required"
                }
            }
        }
    }
},
"404": {
    "description": "NOT_FOUND",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_404"
            },
            "example": {
                "response": "Not Found",
                "error": {
                    "code": 404,
                    "example": "NOT_FOUND",
                    "message": "requested resource not available"
                }
            }
        }
    }
},
"409": {
    "description": "CONFLICT",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_409"
            },
            "example": {
                "response": "Conflict",
                "error": {
                    "code": 409,
                    "example": "CONFLICT",
                    "message": "conflict has been occurred"
                }
            }
        }
    }
},
"500": {
    "description": "INTERNAL_SERVER_ERROR",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_500"
            },
            "example": {
                "response": "Internal Server Error",
                "error": {
                    "code": 500,
                    "example": "INTERNAL_SERVER_ERROR",
                    "message": "Internal server error occurred"
                }
            }
        }
    }
},
"503": {
    "description": "SERVICE_UNAVAILABLE",
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/response_503"
            },
            "example": {
                "response": "Service Unavailable",
                "error": {
                    "code": 503,
                    "example": "SERVICE_UNAVAILABLE",
                    "message": "Currently this Service is Unavailable"
                }
            }
        }
    }
}
}
}
}
}
// schema
{
"Buy_Number": {
"required": [
"tenant_id",
"msisdn",
"customer_email",
"country"
],
"type": "object",
"properties": {
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"msisdn": {
"type": "string",
"description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
"example": "19212093845"
},
"customer_email": {
"type": "string",
"description": "Customer email refers to the email address associated with a customer's account or profile.",
"example": "customer123@gmail.com"
},
"country": {
"type": "string",
"description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
"example": "US"
},
"type": {
"type": "string",
"description": "Type define the entity individual personality.",
"example": "mobile-lvn"
}
}
},
"Save_Voice_Data": {
"required": [
"mode"
],
"type": "object",
"properties": {
"tts": {
"required": [
    "tts_engine",
    "number",
    "language_code",
    "ssml_gender",
    "voice",
    "tenant_id",
    "language"
],
"type": "object",
"properties": {
    "tts_engine": {
        "type": "string",
        "description": "A Text-to-Speech (TTS) engine is a software component or system responsible for the conversion of text into synthesized speech.",
        "example": "google"
    },
    "number": {
        "type": "string",
        "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
        "example": "1234567890"
    },
    "language_code": {
        "type": "string",
        "description": "A language code, also known as a language identifier or language tag, is a standardized code that represents a particular natural language. ",
        "example": "en-US"
    },
    "ssml_gender": {
        "enum": [
            "MALE",
            "FEMALE"
        ],
        "type": "string",
        "description": "SSML gender refers to the attribute or parameter used in Speech Synthesis Markup Language (SSML) to specify the gender or perceived voice characteristics of the synthesized speech."
    },
    "voice": {
        "type": "string",
        "description": "Voice refers to the unique sound produced by an individual or entity when speaking or communicating.",
        "example": " en-US-Standard-J"
    },
    "voice_style ": {
        "type": "string",
        "description": "Voice style refers to the specific manner, character, or tone in which speech or synthesized voices are delivered.",
        "example": "Newscast-Formal"
    },
    "tenant_id": {
        "type": "string",
        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
        "example": "tenant_12345"
    },
    "pitch": {
        "type": "string",
        "description": "Pitch refers to the perceived highness or lowness of a sound or voice.",
        "example": "1"
    },
    "speed": {
        "type": "string",
        "description": "Speed refers to the rate at which words or syllables are articulated.",
        "example": "1"
    },
    "language": {
        "type": "string",
        "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
        "example": "Hindi (India)"
    }
}
},
"mode": {
"enum": [
    "update"
],
"type": "string",
"description": "Mode specifies whether the data is being created/updated.",
"default": "update"
}
}
},
"Attach_Number_Bot": {
"required": [
"number",
"tenant_id",
"webhook"
],
"type": "object",
"properties": {
"number": {
"type": "string",
"description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
"example": "1234567890"
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"webhook": {
"type": "string",
"description": "The URL of the webhook associated with the bot",
"example": "http://39.228.104.43:8896/webhooks/rest/webhook"
},
"bot_name": {
"type": "string",
"description": "The name of the bot",
"example": "abcd"
},
"bot_id": {
"type": "string",
"description": "The unique identifier of the bot",
"example": "fsdhfb2324xcnvx34534vdnj"
}
}
},
"DeAttach_Number_Bot": {
"required": [
"number",
"tenant_id",
"bot_id"
],
"type": "object",
"properties": {
"number": {
"type": "string",
"description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
"example": "1234567890"
},
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"bot_id": {
"type": "string",
"description": "The unique identifier of the bot.",
"example": "sfsdjfds32534dvds5sdfh"
}
}
},
"Save_Asr_Data": {
"required": [
"mode"
],
"type": "object",
"properties": {
"asr": {
"required": [
    "asr_engine",
    "number",
    "language_code",
    "model",
    "tenant_id",
    "displayed_model"
],
"type": "object",
"properties": {
    "asr_engine": {
        "type": "string",
        "description": "ASR Engine refers to an Automatic Speech Recognition (ASR) system or software that converts spoken language into written text.",
        "example": "google"
    },
    "number": {
        "type": "string",
        "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
        "example": "1234567890"
    },
    "language_code": {
        "type": "string",
        "description": "A language code, also known as a language identifier or language tag, is a standardized code that represents a particular natural language. ",
        "example": "en-US"
    },
    "model": {
        "type": "string",
        "description": "The ASR engine relies on a dedicated model to process speech data effectively. This model plays a crucial role in converting audio input into text output.",
        "example": "English-US"
    },
    "tenant_id": {
        "type": "string",
        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
        "example": "tenant_12345"
    },
    "language": {
        "type": "string",
        "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
        "example": "Hindi (India)"
    },
    "displayed_model": {
        "type": "string",
        "description": "The displayed name of the model used by the ASR engine to process the speech data.",
        "example": "Default"
    }
}
},
"mode": {
"enum": [
    "update"
],
"type": "string",
"default": "update"
}
}
},
"save_Team_Data": {
"required": [
"tenant_id",
"name",
"display_name",
"number_attached"
],
"type": "object",
"properties": {
"tenant_id": {
"type": "string",
"description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
"example": "tenant_12345"
},
"name": {
"type": "string",
"description": "The unique name of the team.",
"example": "tester_09722811"
},
"display_name": {
"type": "string",
"description": "The display name of the team.",
"example": "tester"
},
"number_attached": {
"type": "string",
"description": "The phone number attached to the team.",
"example": "1234567890"
}
}
},
"Delete_Team_Data": {
"required": [
"name"
],
"type": "object",
"properties": {
"name": {
"type": "string",
"description": "The name of the team to be deleted",
"example": "tester_09722811"
}
}
},
"DeleteTeamDataResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
"example": "SUCCESS"
},
"message": {
"type": "string",
"description": "Message represents the content that is being transmitted from  the server to the client.",
"example": ""
},
"data": {
"type": "integer",
"description": "Data represents the information or content that the API provides to the client or consumer.",
"example": "1"
},
"error": {
"type": "object",
"description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
"example": "{}"
}
}
},
"AvailableNumberResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"example": "SUCCESS"
},
"message": {
"type": "string",
"description": "Message represents the content that is being transmitted from  the server to the client.",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "numbers": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
                    "example": "US"
                },
                "msisdn": {
                    "type": "string",
                    "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                    "example": "19212093845"
                },
                "cost": {
                    "type": "string",
                    "description": "Cost refers to the amount of money or resources required to acquire/buy a number.",
                    "example": "0.90"
                },
                "type": {
                    "type": "string",
                    "description": "Type define the entity individual personality.",
                    "example": "mobile-lvn"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "VOICE"
                    },
                    "description": "Features refers to specific qualities, characteristics or attributes of a number."
                }
            }
        }
    },
    "count": {
        "type": "integer",
        "description": "Count refers to the numerical value that represents the total number of items, occurrences, or entities within a specific set or group.",
        "example": "123"
    }
},
"description": "Data represents the information or content that the API provides to the client or consumer."
},
"error": {
"type": "object",
"description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
"example": "{}"
}
}
},
"PurchasedNumbersResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
"example": "SUCCESS"
},
"message": {
"type": "string",
"description": "Message represents the content that is being transmitted from  the server to the client.",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "purchased_numbers_vonage": {
        "type": "object",
        "properties": {
            "count": {
                "type": "integer",
                "description": "ount refers to the numerical value that represents the total number of items, occurrences, or entities within a specific set or group.",
                "example": "1"
            },
            "numbers": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "country": {
                            "type": "string",
                            "description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
                            "example": "US"
                        },
                        "msisdn": {
                            "type": "string",
                            "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                            "example": "19212093845"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type define the entity individual personality.",
                            "example": "mobile-lvn"
                        },
                        "voiceCallbackType": {
                            "type": "string",
                            "description": "Voice Call back type defines the call back type.",
                            "example": "sip"
                        },
                        "voiceCallbackValue": {
                            "type": "string",
                            "description": "Voice Call back value defines the call back value.",
                            "example": "12073000031:Aa11b0be0d388224ff49edae@dev-siptrunk.mm.com"
                        },
                        "features": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "VOICE"
                            },
                            "description": "Features refers to specific qualities, characteristics or attributes of a number."
                        }
                    }
                }
            }
        }
    },
    "purchased_numbers_db": {
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "bot_attached": {
                    "type": "object",
                    "properties": {
                        "bot_name": {
                            "type": "string",
                            "description": "The name of the bot.",
                            "example": "basic_bot_tenant_09722812"
                        },
                        "bot_id": {
                            "type": "string",
                            "description": "The unique identifier of the bot.",
                            "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vm"
                        }
                    }
                },
                "_id": {
                    "type": "string",
                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                    "example": "62d5164908eb6c8c036f591h"
                },
                "country": {
                    "type": "string",
                    "description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
                    "example": "US"
                },
                "msisdn": {
                    "type": "string",
                    "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                    "example": "19212093845"
                },
                "created_at": {
                    "type": "string",
                    "description": "The specific date the entity is created.",
                    "example": "2022-07-18T08:14:01.821Z"
                },
                "updated_at": {
                    "type": "string",
                    "description": "The specific date the entity is updated.",
                    "example": "2022-07-18T08:14:01.821Z"
                }
            }
        }
    }
},
"description": "Data represents the information or content that the API provides to the client or consumer."
},
"error": {
"type": "object",
"description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
"example": "{}"
}
}
},
"GetCountryResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
"example": "SUCCESS"
},
"message": {
"type": "string",
"description": "Message represents the content that is being transmitted from  the server to the client.",
"example": ""
},
"data": {
"type": "array",
"items": {
    "type": "object",
    "properties": {
        "_id": {
            "type": "string",
            "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
            "example": "62a724cb8ed735acf225d580"
        },
        "name": {
            "type": "string",
            "description": "The name of the country.",
            "example": "Afghanistan"
        },
        "flag": {
            "type": "string",
            "description": "A flag is a graphical representation or symbol used to represent a country, organization, or entity.",
            "example": "AF"
        },
        "code": {
            "type": "string",
            "description": "A code is a numerical or alphabetical code assigned to each country or territory",
            "example": "AF"
        },
        "dial_code": {
            "type": "string",
            "description": "Country dial code",
            "example": "+93"
        }
    }
},
"description": "Data represents the information or content that the API provides to the client or consumer."
},
"error": {
"type": "object",
"description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
"example": "{}"
}
}
},
"SaveTeamsResponse": {
"type": "object",
"properties": {
"response": {
"type": "string",
"description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
"example": "SUCCESS"
},
"message": {
"type": "string",
"description": "Message represents the content that is being transmitted from  the server to the client.",
"example": ""
},
"data": {
"type": "object",
"properties": {
    "response": {
        "type": "object",
        "properties": {
            "created_at": {
                "type": "string",
                "description": "The specific date the entity is created.",
                "example": "2023-05-01T10:54:27.752Z"
            },
            "team_id": {
                "type": "string",
                "description": "Team ID is a unique identifier assigned to a specific team within a system or organization. It is used to distinguish and reference a particular team among multiple teams within the same context.",
                "example": "1"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "name": {
                "type": "string",
                "description": "The name of the assigned team.",
                "example": "admin_tenant_12345"
            },
            "display_name": {
                "type": "string",
                "description": "The display name of the team.",
                "example": "admin"
            },
            "number_attached": {
                "type": "string",
                "description": "The phone number attached to the team.",
                "example": "1234567890"
            },
            "default_team": {
                "type": "boolean",
                "description": "The default team attribute signifies whether the team is designated as the default option for the tenant.",
                "example": "true"
            }
        },
        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API."
    }
},
"description": "Data represents the information or content that the API provides to the client or consumer."
},
"error": {
"type": "object",
"description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
"example": "{}"
}
}
}
}
}

Integrations
{
"title": "Integrations",
"description": "The Integration API is a web-based interface that enables to search for available DID(Direct Inward Dialing) numbers and purchase them configure voice over internet protocol (VOIP) with call AI, and attach and detach numbers with virtual agents. The service also includes functionality for setting up automatic speech recognition (ASR) and text-to-speech (TTS) features for the numbers.Users can create and manage virtual agents through the service and virtual agent can also be updated at any time to keep up with changing business needs.Additionally, the service offers SMS connector configuration with popular providers like Twilio or Vonage, enabling users to manage SMS interactions with customers from within the microservice",
// paths
{
"/basic-integrations/basic/api/v1/number/voip-numbers/{tenant_id}": {
"get": {
"tags": [
    "Voip-Numbers"
],
"summary": "List All SIP Trunks",
"description": "The list all SIP trunks API facilitates user to retrieve a comprehensive list of SIP Trunks belonging to the specified tenant.",
"operationId": "get-basic-api-v1-number-voip-numbers-tenant_id",
"parameters": [
    {
        "name": "tenant_id",
        "in": "path",
        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": "tenant_12345"
    }
],
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/ListAllVoipNumberResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "purchased_numbers_db": [
                            {
                                "_id": "62d5164908eb6c8c036f591h",
                                "country": "US",
                                "msisdn": "19212093845",
                                "customer_email": "customer123@gmail.com",
                                "tenant_id": "tenant_12345",
                                "voip_user_id": "9897969594",
                                "voip_user_password": "Abc123",
                                "voip_sip_server": "test_server",
                                "created_at": "2022-07-18T08:14:01.8210000+00:00",
                                "updated_at": "2022-07-18T08:14:01.8210000+00:00",
                                "is_active": true
                            }
                        ]
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/delete-voip-number": {
"delete": {
"tags": [
    "Voip-Numbers"
],
"summary": "Delete SIP Trunk",
"description": "The delete SIP trunk API facilitates user to delete a SIP Trunk from your account.",
"operationId": "delete-basic-api-v1-number-delete-voip-number",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Delete_Voip_Data"
            },
            "example": {
                "msisdn": "19212093845",
                "customer_email": "customer123@gmail.com",
                "tenant_id": "tenant_12345",
                "bot_attached": {
                    "bot_id": "sadfsdf3dsf43v34nfn"
                }
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_200"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/tts/asr/{number}": {
"get": {
"tags": [
    "Voip-Numbers"
],
"summary": "Fetch TTS ASR ",
"description": "The fetch TTS ASR API retrieves Text-to-Speech (TTS) and Automatic Speech Recognition (ASR) data. It allows users to access and retrieve TTS and ASR information, enabling the integration of these capabilities into various applications and services.",
"operationId": "get-basic-api-v1-number-tts-asr-number",
"parameters": [
    {
        "name": "number",
        "in": "path",
        "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": 1234567890
    }
],
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/FetchTtsAsrDataResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "tts_data": {
                            "_id": "62d5164908eb6c8c036f591h",
                            "number_id": "1234567890",
                            "tts_engine": "google",
                            "language_code": "en-US",
                            "gender": "MALE",
                            "voice_name": "en-US-Standard-J",
                            "speed": "1",
                            "pitch": "2023-02-05",
                            "language": "English (US)",
                            "tenant_id": "tenant_12345",
                            "voice_style": "Newscast-Formal"
                        },
                        "asr_data": {
                            "_id": "62d5164908eb6c8c036f591h",
                            "number_id": "1234567890",
                            "asr_engine": "google",
                            "language_code": "en-US",
                            "model": "English (US)",
                            "displayed_model": "Medical Conversation",
                            "language": "English (US)",
                            "tenant_id": "tenant_12345"
                        }
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/voip": {
"post": {
"tags": [
    "Voip-Numbers"
],
"summary": "Save SIP Trunk",
"description": "The save SIP trunk API facilitates user to save/create SIP Trunks for a specific number.",
"operationId": "post-basic-api-v1-number-voip",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Save_Voip_Data"
            },
            "example": {
                "type": "VOIP",
                "msisdn": "19212093845",
                "cost": "0.9",
                "tenant_id": "tenant_12345",
                "features": [
                    "VOICE"
                ],
                "voip_user_id": "9897969594",
                "voip_user_password": "Abc123",
                "voip_sip_server": "test-server",
                "customer_email": "customer123@gmail.com",
                "country": "US"
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_200"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/test-voip/{msisdn}": {
"post": {
"tags": [
    "Voip-Numbers"
],
"summary": "Test SIP Trunk Connection",
"description": "The test SIP trunk API facilitates users to test a SIP Trunks for a given MSISDN number and will check the SIP Trunk connection to return a success or failure message",
"operationId": "post-basic-api-v1-number-test-voip-msisdn",
"parameters": [
    {
        "name": "msisdn",
        "in": "path",
        "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": 19212093845
    }
],
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/TestVoipConnectionResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "message": "Voip is successfully tested with successfull connection",
                        "connection_result": "CONNECTED"
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/update-voip-number": {
"patch": {
"tags": [
    "Voip-Numbers"
],
"summary": "Update SIP Trunk",
"description": "The update SIP trunk API enables users to modify existing SIP Trunk information by providing updated data. ",
"operationId": "patch-basic-api-v1-number-update-voip-number",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Update_Voip_Data"
            },
            "example": {
                "msisdn": "19212093845",
                "tenant_id": "tenant_12345",
                "voip_user_id": "9897969594",
                "voip_user_password": "Abc123",
                "voip_sip_server": "test-server",
                "customer_email": "customer123@gmail.com",
                "old_msisdn": "19212093845",
                "is_numberChanged": "true"
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_200"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/sms_integration": {
"post": {
"tags": [
    "Sms"
],
"summary": "Save Sms Connector Configuration",
"description": "The save configuration details API enables users to store the specific configuration details for an SMS connector. This functionality allows for the convenient preservation and retrieval of the configured settings related to the SMS connector, ensuring consistency and ease of use.",
"operationId": "post-basic-api-v1-sms_integration",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Save_Sms_Connector_Configuration"
            },
            "example": {
                "type": "sms",
                "tenant_id": "tenant_12345",
                "number": "1234567890",
                "id": "1234",
                "secret": "fejv43rdvnt43r3ff",
                "is_activated": true
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/SaveSmsConnectorConfigurationResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "result": {
                            "acknowledged": true,
                            "modifiedCount": "1",
                            "upsertedId": "122",
                            "upsertedCount": "0",
                            "matchedCount": "1"
                        }
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
},
"patch": {
"tags": [
    "Sms"
],
"summary": "Update Sms Connector List",
"description": "This endpoint allows you to update the configuration details for an existing SMS connector",
"operationId": "patch-basic-api-v1-sms_integration",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Update_Sms_Connector_Configuration"
            },
            "example": {
                "type": "sms",
                "tenant_id": "tenant_12345",
                "number": "1234567890",
                "id": "1234",
                "secret": "fejv43rdvnt43r3ff",
                "is_activated": true,
                "_id": "62d5164908eb6c8c036f591h"
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/UpdateSmsConnectorConfigurationResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "result": {
                            "acknowledged": true,
                            "modifiedCount": 1,
                            "upsertedId": "122",
                            "upsertedCount": "0",
                            "matchedCount": "1"
                        }
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/sms_integration/{tenant_id}": {
"get": {
"tags": [
    "Sms"
],
"summary": "Fetch Sms Connector List",
"description": "The fetch SMS connector list api facilitates user to retrieve the list of SMS connectors for the specific tenant.",
"operationId": "get-basic-api-v1-sms_integration-tenant_id",
"parameters": [
    {
        "name": "tenant_id",
        "in": "path",
        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": "tenant_12345"
    }
],
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/FetchSmsConnectorListResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "result": [
                            {
                                "_id": "62d5164908eb6c8c036f591h",
                                "sms_connector": [
                                    {
                                        "_id": "62d5164908eb6c8c036f591h",
                                        "type": "twilio",
                                        "number": "1234567890",
                                        "id": "1234",
                                        "secret": "fejv43rdvnt43r3ff",
                                        "is_activated": true
                                    }
                                ]
                            }
                        ]
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/sms_integration/{tenant_id}/{type}/{number}": {
"delete": {
"tags": [
    "Sms"
],
"summary": "Delete Sms Connector List",
"description": "The delete SMS connector list API removes an SMS connector associated with a specific tenant based on its type and number. This API provides the functionality to delete the SMS connector from the list, ensuring efficient management of SMS connectors for the designated tenant.",
"operationId": "delete-basic-api-v1-sms_integration-tenant_id-type-number",
"parameters": [
    {
        "name": "tenant_id",
        "in": "path",
        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": "tenant_12345"
    },
    {
        "name": "type",
        "in": "path",
        "description": "Type define the entity individual personality.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": "sms"
    },
    {
        "name": "number",
        "in": "path",
        "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "example": 1234567890
    }
],
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/DeleteSmsConnectorConfigurationResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "result": {
                            "acknowledged": true,
                            "modifiedCount": "1",
                            "upsertedId": "122",
                            "upsertedCount": "0",
                            "matchedCount": "1"
                        }
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/tts/save": {
"post": {
"tags": [
    "Update Number Configuration"
],
"summary": "Update TTS",
"description": "The update TTS API facilitates user to update text-to-speech data to the server, using the specified TTS engine and settings.",
"operationId": "post-basic-api-v1-number-tts-save",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Save_Voice_Data"
            },
            "example": {
                "tts": {
                    "tts_engine": "google",
                    "number": "1234567890",
                    "language_code": "en-US",
                    "ssml_gender": "MALE",
                    "voice": " en-US-Standard-J",
                    "voice_style ": "Newscast-Formal",
                    "tenant_id": "tenant_12345",
                    "pitch": "1",
                    "speed": "1",
                    "language": "Hindi (India)"
                },
                "mode": "update"
            }
        }
    }
},
"responses": {
    "201": {
        "description": "CREATED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_201"
                },
                "example": {
                    "response": "Created",
                    "message": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/attach/numberBot": {
"post": {
"tags": [
    "Update Number Configuration"
],
"summary": " Attach Number With DVA",
"description": "The attach number to DVA API facilitates user to attach a number with DVA. Once the number is attached, the DVA can receive and respond to messages sent to that number.",
"operationId": "post-basic-api-v1-number-attach-numberbot",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Attach_Number_Bot"
            },
            "example": {
                "number": "1234567890",
                "tenant_id": "tenant_12345",
                "webhook": "http://39.228.104.43:8896/webhooks/rest/webhook",
                "bot_name": "abcd",
                "bot_id": "fsdhfb2324xcnvx34534vdnj"
            }
        }
    }
},
"responses": {
    "201": {
        "description": "CREATED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_201"
                },
                "example": {
                    "response": "Created",
                    "message": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/deattach/numberBot": {
"post": {
"tags": [
    "Update Number Configuration"
],
"summary": "Deattach Number With DVA",
"description": "The deattach number to DVA API facilitates user to attach a number with DVA. Once the number is deattached, the DVA can not  receive and respond to messages sent to that number.",
"operationId": "post-basic-api-v1-number-deattach-numberbot",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/DeAttach_Number_Bot"
            },
            "example": {
                "number": "1234567890",
                "tenant_id": "tenant_12345",
                "bot_id": "sadfsdf3dsf43v34nfn"
            }
        }
    }
},
"responses": {
    "201": {
        "description": "CREATED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_201"
                },
                "example": {
                    "response": "Created",
                    "message": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/teams/save": {
"post": {
"tags": [
    "Update Number Configuration"
],
"summary": "Attach Number With teams",
"description": "The attach number with teams api facilitates user to attach a number with teams.",
"operationId": "post-basic-api-v1-teams-save",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/save_Team_Data"
            },
            "example": {
                "tenant_id": "tenant_12345",
                "name": "tester_09722811",
                "display_name": "tester",
                "number_attached": "9876543210"
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/SaveTeamsResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": {
                        "response": {
                            "created_at": "2023-05-01T10:54:27.7520000+00:00",
                            "team_id": "1",
                            "tenant_id": "tenant_12345",
                            "name": "admin_tenant_12345",
                            "display_name": "tester",
                            "number_attached": "9876543210",
                            "default_team": true
                        }
                    },
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/teams": {
"delete": {
"tags": [
    "Update Number Configuration"
],
"summary": "DeAttach Number With teams",
"description": "The deattach number with teams API facilitates user to deattach a number with teams.",
"operationId": "delete-basic-api-v1-teams",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Delete_Team_Data"
            },
            "example": {
                "name": "tester_09722811"
            }
        }
    }
},
"responses": {
    "200": {
        "description": "OK",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/DeleteTeamDataResponse"
                },
                "example": {
                    "response": "SUCCESS",
                    "message": "",
                    "data": "1",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}
},
"/basic-integrations/basic/api/v1/number/googleASR/save": {
"post": {
"tags": [
    "Update Number Configuration"
],
"summary": "Update Asr",
"description": "The update ASR API allows user to update Google ASR data to the server. You can use the `mode` parameter to indicate whether you want update an existing one",
"operationId": "post-basic-api-v1-number-googleasr-save",
"requestBody": {
    "content": {
        "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Save_Asr_Data"
            },
            "example": {
                "asr": {
                    "asr_engine": "google",
                    "number": "1234567890",
                    "language_code": "en-US",
                    "model": "English-US",
                    "tenant_id": "tenant_12345",
                    "language": "Hindi (India)",
                    "displayed_model": "Default"
                },
                "mode": "update"
            }
        }
    }
},
"responses": {
    "201": {
        "description": "CREATED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_201"
                },
                "example": {
                    "response": "Created",
                    "message": "",
                    "error": "{}"
                }
            }
        }
    },
    "204": {
        "description": "NO_CONTENT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_204"
                },
                "example": {
                    "response": "No content",
                    "error": {
                        "code": 204,
                        "example": "NO_CONTENT",
                        "message": "No Content found"
                    }
                }
            }
        }
    },
    "400": {
        "description": "BAD_REQUEST",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_400"
                },
                "example": {
                    "response": "Bad Request",
                    "error": {
                        "code": 400,
                        "example": "BAD_REQUEST",
                        "message": "required parameters missing or invalid"
                    }
                }
            }
        }
    },
    "401": {
        "description": "UNAUTHORIZED",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_401"
                },
                "example": {
                    "response": "Unauthorized",
                    "error": {
                        "code": 401,
                        "example": "UNAUTHORIZED",
                        "message": "invalid authentication data"
                    }
                }
            }
        }
    },
    "403": {
        "description": "FORBIDDEN",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_403"
                },
                "example": {
                    "response": " Forbidden",
                    "error": {
                        "code": 403,
                        "example": "FORBIDDEN",
                        "message": "authentication required"
                    }
                }
            }
        }
    },
    "404": {
        "description": "NOT_FOUND",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_404"
                },
                "example": {
                    "response": "Not Found",
                    "error": {
                        "code": 404,
                        "example": "NOT_FOUND",
                        "message": "requested resource not available"
                    }
                }
            }
        }
    },
    "409": {
        "description": "CONFLICT",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_409"
                },
                "example": {
                    "response": "Conflict",
                    "error": {
                        "code": 409,
                        "example": "CONFLICT",
                        "message": "conflict has been occurred"
                    }
                }
            }
        }
    },
    "500": {
        "description": "INTERNAL_SERVER_ERROR",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_500"
                },
                "example": {
                    "response": "Internal Server Error",
                    "error": {
                        "code": 500,
                        "example": "INTERNAL_SERVER_ERROR",
                        "message": "Internal server error occurred"
                    }
                }
            }
        }
    },
    "503": {
        "description": "SERVICE_UNAVAILABLE",
        "content": {
            "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/response_503"
                },
                "example": {
                    "response": "Service Unavailable",
                    "error": {
                        "code": 503,
                        "example": "SERVICE_UNAVAILABLE",
                        "message": "Currently this Service is Unavailable"
                    }
                }
            }
        }
    }
}
}

}
}
// schema
{
    "Delete_Voip_Data": {
        "required": ["customer_email", "msisdn"],
        "type": "object",
        "properties": {
            "msisdn": {
                "type": "string",
                "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                "example": "19212093845"
            },
            "customer_email": {
                "type": "string",
                "description": "Customer email refers to the email address associated with a customer's account or profile.",
                "example": "customer123@gmail.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "bot_attached": {
                "type": "object",
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "description": "The unique identifier of the bot.",
                        "example": "sadfsdf3dsf43v34nfn"
                    }
                }
            }
        }
    },
    "Save_Voip_Data": {
        "required": ["type", "msisdn", "cost", "tenant_id", "features", "voip_user_id", "voip_user_password", "voip_sip_server", "customer_email", "country"],
        "type": "object",
        "properties": {
            "type": {
                "enum": ["VOIP"],
                "type": "string",
                "description": "Type define the entity individual personality."
            },
            "msisdn": {
                "type": "string",
                "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                "example": "19212093845"
            },
            "cost": {
                "type": "string",
                "description": "Cost refers to the amount of money or resources required to acquire/buy a number.",
                "example": "0.9"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "features": {
                "type": "array",
                "items": {
                    "enum": ["VOICE", "SMS"],
                    "type": "string"
                },
                "description": "Features refers to specific qualities, characteristics or attributes of a number."
            },
            "voip_user_id": {
                "type": "string",
                "description": "VOIP user ID refers to a unique identifier assigned to an individual user within a Voice over IP (VoIP) system.",
                "example": "9897969594"
            },
            "voip_user_password": {
                "type": "string",
                "description": "VOIP user password refers to the confidential string of characters or passphrase set by a user to authenticate their identity and gain access to Voice over IP (VoIP) services.",
                "example": "Abc123"
            },
            "voip_sip_server": {
                "type": "string",
                "description": "The SIP server being used for the VOIP call",
                "example": "test-server"
            },
            "customer_email": {
                "type": "string",
                "description": "Customer email refers to the email address associated with a customer's account or profile.",
                "example": "customer123@gmail.com"
            },
            "country": {
                "type": "string",
                "description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
                "example": "US"
            }
        }
    },
    "Update_Voip_Data": {
        "required": ["msisdn", "tenant_id", "voip_user_id", "voip_user_password", "voip_sip_server", "customer_email", "old_msisdn"],
        "type": "object",
        "properties": {
            "msisdn": {
                "type": "string",
                "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                "example": "19212093845"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "voip_user_id": {
                "type": "string",
                "description": "VOIP user ID refers to a unique identifier assigned to an individual user within a Voice over IP (VoIP) system.",
                "example": "9897969594"
            },
            "voip_user_password": {
                "type": "string",
                "description": "VOIP user password refers to the confidential string of characters or passphrase set by a user to authenticate their identity and gain access to Voice over IP (VoIP) services.",
                "example": "Abc123"
            },
            "voip_sip_server": {
                "type": "string",
                "description": "The SIP server used for the VOIP service.",
                "example": "test-server"
            },
            "customer_email": {
                "type": "string",
                "description": "Customer email refers to the email address associated with a customer's account or profile.",
                "example": "customer123@gmail.com"
            },
            "old_msisdn": {
                "type": "string",
                "description": "Old MSISDN refers to the previously assigned MSISDN of a mobile device or phone number.",
                "example": "19212093845"
            },
            "is_numberChanged": {
                "type": "boolean",
                "description": "A boolean flag indicating whether the phone number associated with the VOIP service has changed.",
                "example": "true"
            }
        }
    },
    "Save_Sms_Connector_Configuration": {
        "required": ["tenant_id", "type", "number", "id", "secret"],
        "type": "object",
        "properties": {
            "type": {
                "type": "string",
                "description": "Type define the entity individual personality.",
                "example": "sms"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "number": {
                "type": "string",
                "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                "example": "1234567890"
            },
            "id": {
                "type": "string",
                "description": "It is a unique and specific label or code assigned to an entity, or individual to distinguish it from others within a given context or system.",
                "example": "1234"
            },
            "secret": {
                "type": "string",
                "description": "The secret key used to authenticate with the SMS provider.",
                "example": "fejv43rdvnt43r3ff"
            },
            "is_activated": {
                "type": "boolean",
                "description": "The key indicates whether the entity is active or not.",
                "example": true
            }
        }
    },
    "Update_Sms_Connector_Configuration": {
        "required": ["tenant_id", "type", "number", "id", "secret", "_id"],
        "type": "object",
        "properties": {
            "type": {
                "type": "string",
                "description": "Type define the entity individual personality",
                "example": "sms"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "number": {
                "type": "string",
                "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                "example": "1234567890"
            },
            "id": {
                "type": "string",
                "description": "It is a unique and specific label or code assigned to an entity, or individual to distinguish it from others within a given context or system.",
                "example": "1234"
            },
            "secret": {
                "type": "string",
                "description": "The secret key used to authenticate with the SMS provider.",
                "example": "fejv43rdvnt43r3ff"
            },
            "is_activated": {
                "type": "boolean",
                "description": "The key indicates whether the entity is active or not.",
                "example": true
            },
            "_id": {
                "type": "string",
                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                "example": "62d5164908eb6c8c036f591h"
            }
        }
    },
    "Save_Voice_Data": {
        "required": ["mode"],
        "type": "object",
        "properties": {
            "tts": {
                "required": ["tts_engine", "number", "language_code", "ssml_gender", "voice", "tenant_id", "language"],
                "type": "object",
                "properties": {
                    "tts_engine": {
                        "type": "string",
                        "description": "A Text-to-Speech (TTS) engine is a software component or system responsible for the conversion of text into synthesized speech. ",
                        "example": "google"
                    },
                    "number": {
                        "type": "string",
                        "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                        "example": "1234567890"
                    },
                    "language_code": {
                        "type": "string",
                        "description": "A language code is a standardized representation or identifier assigned to a specific language.",
                        "example": "en-US"
                    },
                    "ssml_gender": {
                        "enum": ["MALE", "FEMALE"],
                        "type": "string",
                        "description": "SSML gender refers to the attribute or parameter used in Speech Synthesis Markup Language (SSML) to specify the gender or perceived voice characteristics of the synthesized speech. "
                    },
                    "voice": {
                        "type": "string",
                        "description": "Voice refers to the unique sound produced by an individual or entity when speaking or communicating.",
                        "example": " en-US-Standard-J"
                    },
                    "voice_style ": {
                        "type": "string",
                        "description": "Voice style refers to the specific manner, character, or tone in which speech or synthesized voices are delivered.",
                        "example": "Newscast-Formal"
                    },
                    "tenant_id": {
                        "type": "string",
                        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                        "example": "tenant_12345"
                    },
                    "pitch": {
                        "type": "string",
                        "description": "Pitch refers to the perceived highness or lowness of a sound or voice. ",
                        "example": "1"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Speed refers to the rate at which words or syllables are articulated.",
                        "example": "1"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
                        "example": "Hindi (India)"
                    }
                },
                "description": "Text-to-Speech (TTS) refers to the technology/process of converting written or textual content into spoken words."
            },
            "mode": {
                "enum": ["update"],
                "type": "string",
                "description": "This denotes whether the data is in the process of being created or updated.",
                "default": "update"
            }
        }
    },
    "Attach_Number_Bot": {
        "required": ["number", "tenant_id", "webhook"],
        "type": "object",
        "properties": {
            "number": {
                "type": "string",
                "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                "example": "1234567890"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "webhook": {
                "type": "string",
                "description": "The URL of the webhook associated with the bot",
                "example": "http://39.228.104.43:8896/webhooks/rest/webhook"
            },
            "bot_name": {
                "type": "string",
                "description": "The name of the bot",
                "example": "abcd"
            },
            "bot_id": {
                "type": "string",
                "description": "The unique identifier of the bot",
                "example": "fsdhfb2324xcnvx34534vdnj"
            }
        }
    },
    "DeAttach_Number_Bot": {
        "required": ["number", "tenant_id", "bot_id"],
        "type": "object",
        "properties": {
            "number": {
                "type": "string",
                "description": "A phone number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                "example": "1234567890"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "bot_id": {
                "type": "string",
                "description": "The unique identifier of the bot.",
                "example": "sadfsdf3dsf43v34nfn"
            }
        }
    },
    "Save_Asr_Data": {
        "required": ["mode"],
        "type": "object",
        "properties": {
            "asr": {
                "required": ["asr_engine", "number", "language_code", "model", "tenant_id", "language", "displayed_model"],
                "type": "object",
                "properties": {
                    "asr_engine": {
                        "type": "string",
                        "description": "ASR Engine refers to an Automatic Speech Recognition (ASR) system or software that converts spoken language into written text.",
                        "example": "google"
                    },
                    "number": {
                        "type": "string",
                        "description": "A phone number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                        "example": "1234567890"
                    },
                    "language_code": {
                        "type": "string",
                        "description": "A language code is a standardized representation or identifier assigned to a specific language.",
                        "example": "en-US"
                    },
                    "model": {
                        "type": "string",
                        "description": "The ASR engine relies on a dedicated model to process speech data effectively. This model plays a crucial role in converting audio input into text output.",
                        "example": "English-US"
                    },
                    "tenant_id": {
                        "type": "string",
                        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                        "example": "tenant_12345"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
                        "example": "Hindi (India)"
                    },
                    "displayed_model": {
                        "type": "string",
                        "description": "The displayed name of the model used by the ASR engine to process the speech data.",
                        "example": "Default"
                    }
                }
            },
            "mode": {
                "enum": ["update"],
                "type": "string",
                "description": "This indicates whether the data being sent is a new record/created/existing record to be updated.",
                "default": "update"
            }
        }
    },
    "save_Team_Data": {
        "required": ["tenant_id", "name", "display_name", "number_attached"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "name": {
                "type": "string",
                "description": "The unique name of the team.",
                "example": "tester_09722811"
            },
            "display_name": {
                "type": "string",
                "description": "The display name of the team.",
                "example": "tester"
            },
            "number_attached": {
                "type": "string",
                "description": "The phone number attached to the team.",
                "example": "9876543210"
            }
        }
    },
    "Delete_Team_Data": {
        "required": ["name"],
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of the team to be deleted.",
                "example": "tester_09722811"
            }
        }
    },
    "DeleteTeamDataResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "integer",
                "description": "The number of data response to be deleted.",
                "example": "1"
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "FetchTtsAsrDataResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "tts_data": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                "example": "62d5164908eb6c8c036f591h"
                            },
                            "number_id": {
                                "type": "string",
                                "description": "A number_id is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                                "example": "1234567890"
                            },
                            "tts_engine": {
                                "type": "string",
                                "description": "A Text-to-Speech (TTS) engine is a software component or system responsible for the conversion of text into synthesized speech. ",
                                "example": "google"
                            },
                            "language_code": {
                                "type": "string",
                                "description": "A language code is a standardized representation or identifier assigned to a specific language.",
                                "example": "en-US"
                            },
                            "gender": {
                                "type": "string",
                                "description": "Gender refers to the attribute or parameter used in Speech Synthesis Markup Language (SSML) to specify the gender or perceived voice characteristics of the synthesized speech. ",
                                "example": "MALE"
                            },
                            "voice_name": {
                                "type": "string",
                                "description": "Voice name refers to the name of unique sound produced by an individual or entity when speaking or communicating.",
                                "example": "en-US-Standard-J"
                            },
                            "speed": {
                                "type": "string",
                                "description": "Speed refers to the rate at which words or syllables are articulated.",
                                "example": "1"
                            },
                            "pitch": {
                                "type": "string",
                                "description": "Pitch refers to the perceived highness or lowness of a sound or voice.",
                                "example": "2.5"
                            },
                            "language": {
                                "type": "string",
                                "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
                                "example": "English (US)"
                            },
                            "tenant_id": {
                                "type": "string",
                                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                "example": "tenant_12345"
                            },
                            "voice_style": {
                                "type": "string",
                                "description": "Voice style refers to the specific manner, character, or tone in which speech or synthesized voices are delivered.",
                                "example": "Newscast-Formal"
                            }
                        }
                    },
                    "asr_data": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                "example": "62d5164908eb6c8c036f591h"
                            },
                            "number_id": {
                                "type": "string",
                                "description": "A number_id is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                                "example": "1234567890"
                            },
                            "asr_engine": {
                                "type": "string",
                                "description": "ASR Engine refers to an Automatic Speech Recognition (ASR) system or software that converts spoken language into written text.",
                                "example": "google"
                            },
                            "language_code": {
                                "type": "string",
                                "description": "A language code is a standardized representation or identifier assigned to a specific language.",
                                "example": "en-US"
                            },
                            "model": {
                                "type": "string",
                                "description": "The ASR engine relies on a dedicated model to process speech data effectively. This model plays a crucial role in converting audio input into text output.",
                                "example": "English (US)"
                            },
                            "displayed_model": {
                                "type": "string",
                                "description": "The displayed name of the model used by the ASR engine to process the speech data",
                                "example": "Medical Conversation"
                            },
                            "language": {
                                "type": "string",
                                "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
                                "example": "English (US)"
                            },
                            "tenant_id": {
                                "type": "string",
                                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                "example": "tenant_12345"
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "TestVoipConnectionResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message represents the content that is being transmitted from  the server to the client.",
                        "example": "Voip is successfully tested with successfull connection"
                    },
                    "connection_result": {
                        "type": "string",
                        "example": "CONNECTED"
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "SaveTeamsResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string",
                                "description": "The specific date the entity is created.",
                                "example": "2023-05-01T10:54:27.752Z"
                            },
                            "team_id": {
                                "type": "string",
                                "description": "A team ID is a unique identifier assigned to a specific team within a system. It is used to distinguish and reference a particular team among multiple teams within the same context.",
                                "example": "1"
                            },
                            "tenant_id": {
                                "type": "string",
                                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                "example": "tenant_12345"
                            },
                            "name": {
                                "type": "string",
                                "description": "The unique name of the entity.",
                                "example": "admin_tenant_12345"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "The display name of the team.",
                                "example": "tester"
                            },
                            "number_attached": {
                                "type": "string",
                                "description": "The phone number attached to the team.",
                                "example": "9876543210"
                            },
                            "default_team": {
                                "type": "boolean",
                                "description": "The attribute signifies whether the team is designated as the default option for the tenant.",
                                "example": true
                            }
                        },
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API."
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "ListAllVoipNumberResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "purchased_numbers_db": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                    "example": "62d5164908eb6c8c036f591h"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "A country is a distinct and sovereign geographical and political entity that is typically characterized by a defined territory, a stable government, and a recognized international status.",
                                    "example": "US"
                                },
                                "msisdn": {
                                    "type": "string",
                                    "description": "MSISDN refers to the unique identifiers used in telecommunication networks to represent mobile phone numbers.",
                                    "example": "19212093845"
                                },
                                "customer_email": {
                                    "type": "string",
                                    "description": "Customer email refers to the email address associated with a customer's account or profile.",
                                    "example": "customer123@gmail.com"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                    "example": "tenant_12345"
                                },
                                "voip_user_id": {
                                    "type": "string",
                                    "description": "VOIP user ID refers to a unique identifier assigned to an individual user within a Voice over IP (VoIP) system.",
                                    "example": "9897969594"
                                },
                                "voip_user_password": {
                                    "type": "string",
                                    "description": "VOIP user password refers to the confidential string of characters or passphrase set by a user to authenticate their identity and gain access to Voice over IP (VoIP) services.",
                                    "example": "Abc123"
                                },
                                "voip_sip_server": {
                                    "type": "string",
                                    "description": "The SIP server being used for the VOIP call",
                                    "example": "test_server"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "The specific date the entity is created.",
                                    "example": "2022-07-18T08:14:01.821Z"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "The specific date the entity is updated.",
                                    "example": "2022-07-18T08:14:01.821Z"
                                },
                                "is_active": {
                                    "type": "boolean",
                                    "description": "The key indicates whether the entity is active or not.",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "FetchSmsConnectorListResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                    "example": "62d5164908eb6c8c036f591h"
                                },
                                "sms_connector": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                                "example": "62d5164908eb6c8c036f591h"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type define the entity individual personality",
                                                "example": "twilio"
                                            },
                                            "number": {
                                                "type": "string",
                                                "description": "A number is a numerical sequence assigned to a telephone line or device to establish communication with other parties.",
                                                "example": "1234567890"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "It is a unique and specific label or code assigned to an entity, or individual to distinguish it from others within a given context or system.",
                                                "example": "1234"
                                            },
                                            "secret": {
                                                "type": "string",
                                                "description": "The secret key used to authenticate with the SMS provider.",
                                                "example": "fejv43rdvnt43r3ff"
                                            },
                                            "is_activated": {
                                                "type": "boolean",
                                                "description": "The key indicates whether the entity is activated or not.",
                                                "example": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "SaveSmsConnectorConfigurationResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "acknowledged": {
                                "type": "boolean",
                                "description": "The key indicates whether the entity is acknowledged or not.",
                                "example": true
                            },
                            "modifiedCount": {
                                "type": "integer",
                                "description": "Modified count refers to the number of documents or records that were successfully updated or modified",
                                "example": "1"
                            },
                            "upsertedId": {
                                "type": "string",
                                "description": "Upserted ID refers to the unique identifier of a document or record that was inserted or updated during an upsert operation.",
                                "example": "122"
                            },
                            "upsertedCount": {
                                "type": "integer",
                                "description": "Upserted count indicates the total number of documents or records that were inserted or updated during an upsert operation.",
                                "example": "0"
                            },
                            "matchedCount": {
                                "type": "integer",
                                "description": "Matched count refers to the number of documents or records that matched the specified criteria.",
                                "example": "1"
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "UpdateSmsConnectorConfigurationResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "acknowledged": {
                                "type": "boolean",
                                "description": "The key indicates whether the entity is acknowledged or not.",
                                "example": true
                            },
                            "modifiedCount": {
                                "type": "integer",
                                "description": "Modified count refers to the number of documents or records that were successfully updated or modified",
                                "example": 1
                            },
                            "upsertedId": {
                                "type": "string",
                                "description": "Upserted ID refers to the unique identifier of a document or record that was inserted or updated during an upsert operation.",
                                "example": "122"
                            },
                            "upsertedCount": {
                                "type": "integer",
                                "description": "Upserted count indicates the total number of documents or records that were inserted or updated during an upsert operation.",
                                "example": "0"
                            },
                            "matchedCount": {
                                "type": "integer",
                                "description": "Matched count refers to the number of documents or records that matched the specified criteria.",
                                "example": "1"
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "DeleteSmsConnectorConfigurationResponse": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "acknowledged": {
                                "type": "boolean",
                                "description": "The key indicates whether the entity is acknowledged or not.",
                                "example": true
                            },
                            "modifiedCount": {
                                "type": "integer",
                                "description": "Modified count refers to the number of documents or records that were successfully updated or modified",
                                "example": "1"
                            },
                            "upsertedId": {
                                "type": "string",
                                "description": "Upserted ID refers to the unique identifier of a document or record that was inserted or updated during an upsert operation.",
                                "example": "122"
                            },
                            "upsertedCount": {
                                "type": "integer",
                                "description": "Upserted count indicates the total number of documents or records that were inserted or updated during an upsert operation.",
                                "example": "0"
                            },
                            "matchedCount": {
                                "type": "integer",
                                "description": "Matched count refers to the number of documents or records that matched the specified criteria.",
                                "example": "1"
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    }
}
}

USER management
{
"title": "User Management",
"description": "The Authentication API provides a set of methods and protocols to authenticate and authorize users . It enables to implement secure authentication and authorization mechanisms. The API plays a crucial role in protecting user data and preventing unauthorized access.",

// path
"paths": {
    "/authentication-ms/v1/auth/api/v1/authentication/": {
        "post": {
            "tags": ["Users"],
            "summary": "Create new user",
            "description": "The API for creating a new user allows you to generate a fresh user account.",
            "operationId": "post-auth-api-v1-authentication",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserCreate"
                        },
                        "example": {
                            "user": {
                                "ip": "34.543.66.74",
                                "email": "admin123@gmail.com",
                                "name": "vinod",
                                "phone": {
                                    "number": "08989898989",
                                    "internationalNumber": "+91 89898 98989",
                                    "nationalNumber": "089898 98989",
                                    "e164Number": "+918989898989",
                                    "countryCode": "IN",
                                    "dialCode": "+91"
                                },
                                "position": "string",
                                "created_by": "admin123@gmail.com",
                                "reporting_manager": "admin",
                                "user_metadata": {
                                    "password": "Admin@123",
                                    "organization_name": "dev-org",
                                    "organization_display_name": "devorg",
                                    "organization_id": "org_IyyPNiNdz9w9mcqs",
                                    "tenant_id": "tenant_12345",
                                    "employee_id": "emp_123",
                                    "role": ["customer_admin", "sales"]
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201_createNewUser"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "user": {
                                        "action": "created",
                                        "ip": "131.130.190.11",
                                        "activity": "User created by Parvis Kakkar",
                                        "email": "admin123@gmail.com",
                                        "blocked": "false",
                                        "email_verified": "true",
                                        "name": "testing",
                                        "phone": {
                                            "number": "(90) 5552322",
                                            "internationalNumber": "+98 2323232",
                                            "nationalNumber": "(201) 2362-2323",
                                            "e164Number": "+1 202323212",
                                            "countryCode": "US",
                                            "dialCode": "+1"
                                        },
                                        "position": "dsdsdcdvdsd",
                                        "connection": "USER-PASSWORD-AUTH",
                                        "modified_by": "parvis.kakkar@call-ai.com",
                                        "created_by": "parvis.kakkar@call-ai.com",
                                        "created_by_id": "parvis.kakkar@call-ai.com",
                                        "password": "Cisco@345",
                                        "employee_id": "emp_123",
                                        "reporting_manager": "sdefv",
                                        "role": ["teamlead"],
                                        "org_id": "org_Ihsbdhbdh",
                                        "user_metadata": {
                                            "type": "user",
                                            "password": "Cisco@123",
                                            "organization_name": "dev-org",
                                            "organization_display_name": "dev-org",
                                            "organization_id": "org_Ihbd36yew",
                                            "tenant_id": "tenant_12345",
                                            "employee_id": "emp_1234",
                                            "role": ["teamlead"]
                                        },
                                        "roleArray": ["eshs823-jnddju3h-jjdn3u3u"],
                                        "roleArrayToRemove": ["dhsdhjsdhsj382-ndj3u38-dnjdjd3"]
                                    },
                                    "tenant_id": "tenant_12345"
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Users"],
            "summary": " Update User",
            "description": " Update User",
            "operationId": "patch-auth-api-v1-authentication",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserUpdate"
                        },
                        "example": {
                            "user": {
                                "phone": {
                                    "number": "08989898989",
                                    "internationalNumber": "+91 89898 98989",
                                    "nationalNumber": "089898 98989",
                                    "e164Number": "+918989898989",
                                    "countryCode": "IN",
                                    "dialCode": "+91"
                                },
                                "user_id": "auth0|645cbb7a0be902874f4b9f28",
                                "status": "ACTIVE",
                                "reporting_manger": "okokoks",
                                "email": "admin123@gmail.com",
                                "ip": "122.160.141.52",
                                "name": "okokokoko",
                                "role": ["customer_admin", "sales"],
                                "modified_by": "sandeep.rawat@call-ai.com",
                                "position": "okok notq",
                                "employee_id": "tr12345EHRue"
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201_userUpdate"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "null",
                                "data": {
                                    "response": "record updated successfully"
                                },
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["Users"],
            "summary": "Delete User",
            "description": "Delete User",
            "operationId": "delete-auth-api-v1-authentication",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeleteUser"
                        },
                        "example": {
                            "user": {
                                "email": "admin123@gmail.com",
                                "ip": "122.160.141.52",
                                "modified_by": "parvis.kakkar@call-ai.com",
                                "tenant_id": "tenant_12345",
                                "user_id": "auth0|645cbb7a0be902874f4b9f28"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_deleteUser"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "null",
                                "data": {
                                    "response": "SUCCESS",
                                    "message": "record deleted successfully"
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    },
    "/authentication-ms/v1/auth/api/v1/authentication/user/{email}/{tenant_id}": {
        "get": {
            "tags": ["Users"],
            "summary": "Find User By Email",
            "description": "The API for finding a user based on their email allows you to search for a user using their email address.",
            "operationId": "get-auth-api-v1-authentication-user-email-tenant_id",
            "parameters": [{
                "name": "email",
                "in": "path",
                "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "admin123@gmail.com"
            }, {
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }],
            "responses": {
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202_findUserByEmail"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "response": "SUCCESS",
                                    "userFromDB": [{
                                        "phone": {
                                            "number": "081818 18181",
                                            "internationalNumber": "+91 81818 18181",
                                            "nationalNumber": "081818 18181",
                                            "e164Number": "+918181818181",
                                            "countryCode": "IN",
                                            "dialCode": "+91"
                                        },
                                        "_id": "643e8931cfb25d46fd57f602",
                                        "modified_by": "parvis.kakkar@call-ai.com",
                                        "created_by": "parvis.kakkar@call-ai.com",
                                        "password": "Admin@1233",
                                        "base_password_changed": false,
                                        "status": "ACTIVE",
                                        "isDeleted": false,
                                        "type": "user",
                                        "blocked": false,
                                        "email": "admin123@gmail.com",
                                        "name": "Parvis Kakkar",
                                        "user_id": "auth0|643e891c170832ee0b05a804",
                                        "tenant_id": "tenant_12345",
                                        "asterisk_user_id": "616182718212",
                                        "asterisk_user_password": "qweAna",
                                        "user_metadata": {
                                            "type": "user",
                                            "password": "Admin@1233",
                                            "organization_name": "dev-org",
                                            "organization_display_name": "dev-org",
                                            "organization_id": "org_Ivysdsdsbds83njdn",
                                            "tenant_id": "tenant_12345",
                                            "employee_id": "78454549",
                                            "role": ["customer_admin"]
                                        },
                                        "role": ["customer_admin"],
                                        "position": "djaoida",
                                        "employee_id": "328932832",
                                        "reporting_manager": "foijdsdjs",
                                        "audit_log": [],
                                        "created_at": "2023-04-18T12:12:33.4970000+00:00",
                                        "updated_at": "2023-05-12T07:44:39.2870000+00:00",
                                        "__v": 0
                                    }]
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    },
    "/authentication-ms/v1/auth/api/v1/authentication/password": {
        "patch": {
            "tags": ["Users"],
            "summary": " Update Password ",
            "description": "The API for updating a user's password allows you to modify the existing password for a user account with new credentials. By providing the necessary authentication and user identification details, you can securely update the password associated with a specific user. This API ensures that users can change their passwords and maintain the security and integrity of their accounts.",
            "operationId": "patch-auth-api-v1-authentication-password",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdatePassword"
                        },
                        "example": {
                            "user": {
                                "email": "admin123@gmail.com",
                                "current_password": "Admin@123",
                                "new_password": "Admin@123",
                                "user_id": "auth0|643d280e23106bb01368df74",
                                "base_password_changed": true
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202_updatePassword"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "response": "SUCCESS"
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    },
    "/authentication-ms/v1/auth/api/v1/authentication/resend/verification/{auth_id}": {
        "get": {
            "tags": ["Users"],
            "summary": "Resend Verification Link",
            "description": "The API for resending a verification link to a user's email allows you to trigger the reissuance of a verification email to a specific user.",
            "operationId": "get-auth-api-v1-authentication-resend-verification-auth_id",
            "parameters": [{
                "name": "auth_id",
                "in": "path",
                "description": "Authentication ID is an identifier or credential used to authenticate and authorize users or entities accessing a system.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "auth0|643d280e23106bb01368df74"
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_resendVerificationLink"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "The user will get the verification link shortly",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    },
    "/authentication-ms/v1/auth/api/v1/authentication/statusUpdate": {
        "patch": {
            "tags": ["Users"],
            "summary": " Update Status ",
            "description": "The API for updating a user's status as either ACTIVE or INACTIVE allows you to modify the current status of a user account. By specifying the user's unique identifier or other relevant information, along with the desired status value, you can update the user's account status accordingly. This API enables you to manage user accounts and control their active or inactive state, providing flexibility in managing user access and permissions within your system.",
            "operationId": "patch-auth-api-v1-authentication-statusupdate",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateStatus"
                        },
                        "example": {
                            "ip": "122.160.141.52",
                            "email": "admin123@gmail.com",
                            "status": false,
                            "tenant_id": "tenant_12345",
                            "user_id": "auth0|643e891c170832ee0b05a804",
                            "activity": "Status has been changed by testing user test from ACTIVE to ACTIVE",
                            "modified_by": "admin123@gmail.com"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_statusUpdate"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    },
    "/authentication-ms/v1/auth/api/v1/authentication/users/fetch/filter": {
        "post": {
            "tags": ["Users"],
            "summary": "Filter Users",
            "description": "The API for filtering users based on role, login time, and status enables you to retrieve a subset of users that match specific criteria. By specifying parameters such as role, login time range, and status, you can retrieve a filtered list of users that meet your desired conditions.",
            "operationId": "post-auth-api-v1-authentication-users-fetch-filter",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FilterUser"
                        },
                        "example": {
                            "pageSize": 1,
                            "pageIndex": 10,
                            "selectedRolebyuser": ["agent", "customer"],
                            "status": ["Active", "Inactive", "VerificationPending"],
                            "field": "name",
                            "order": "1",
                            "org_id": "org_12345"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_filterUsers"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "null",
                                "data": {
                                    "response": "",
                                    "users": {
                                        "start": 0,
                                        "limit": 10,
                                        "length": 1,
                                        "users": [{
                                            "blocked": false,
                                            "created_at": "2022-10-10T05:59:46.1270000+00:00",
                                            "email": "admin123@gmail.com",
                                            "email_verified": true,
                                            "identities": [{
                                                "connection": "Username-Password-Authentication",
                                                "provider": "auth0",
                                                "user_id": "6343b4d2d3ad434e53ae0fe2",
                                                "isSocial": false
                                            }],
                                            "name": "parvis kakkar",
                                            "nickname": "parvis kakkar",
                                            "picture": "https://s.gravatar.com/avatar/983d21ac98eecc1f9a7157a19fbcc13f?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fks.png",
                                            "updated_at": "2023-05-01T07:56:04.4510000+00:00",
                                            "user_id": "auth0|6343b4d2d3ad434e53ae0fe2",
                                            "user_metadata": {
                                                "employee_id": "HUM46",
                                                "organization_display_name": "dev-org",
                                                "organization_id": "org_IyyPNiNdz9w9mcqs",
                                                "organization_name": "dev-org",
                                                "password": "Admin@123",
                                                "role": ["agent"],
                                                "tenant_id": "tenant_12345",
                                                "trial_expiration_date": "2022-10-17T05:57:30.2190000+00:00",
                                                "type": "user"
                                            },
                                            "last_password_reset": "2022-10-10T06:03:50.3110000+00:00",
                                            "last_login": "2023-05-01T07:53:14.5340000+00:00",
                                            "last_ip": "122.160.141.52",
                                            "logins_count": 408,
                                            "app_metadata": {
                                                "authorization": {
                                                    "groups": [],
                                                    "roles": ["agent"],
                                                    "permissions": ["read:agent_dashboard,read:my_profile"]
                                                }
                                            }
                                        }],
                                        "total": 1
                                    },
                                    "total": 1
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": "{}"
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": "{}"
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": "{}"
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": "{}"
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": "{}"
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": "{}"
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": "{}"
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": "{}"
                            }
                        }
                    }
                }
            }
        }
    }
}

// schema
"schemas": {
    "UserCreate": {
        "required": ["user"],
        "type": "object",
        "properties": {
            "user": {
                "required": ["ip", "email", "name", "phone", "position", "user_metadata", "created_by", "reporting_manager"],
                "type": "object",
                "properties": {
                    "ip": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "IP refers to a unique numerical label assigned to each device connected to a network that uses the Internet Protocol for communication.",
                        "example": "34.543.66.74"
                    },
                    "email": {
                        "type": "string",
                        "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                        "format": "email",
                        "example": "admin123@gmail.com"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "Name defines the user personal identifier.",
                        "example": "vinod"
                    },
                    "phone": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[0-9 ]+$",
                                "type": "string",
                                "description": "A number is a numerical sequence used to uniquely identify a telephone line or mobile device for the purpose of making or receiving phone calls.",
                                "example": "08989898989"
                            },
                            "internationalNumber": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[+]?[0-9 ]+$",
                                "type": "string",
                                "description": "An international number refers to a phone number that includes the necessary prefix or country code to make or receive calls from outside a specific country.",
                                "example": "+91 89898 98989"
                            },
                            "nationalNumber": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[0-9 ]+$",
                                "type": "string",
                                "description": "A national number refers to a phone number that is specific to a particular country or region.",
                                "example": "089898 98989"
                            },
                            "e164Number": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[+]?[0-9 ]+$",
                                "type": "string",
                                "description": "E164 is a globally recognized standard for phone number formatting. It defines the structure and numbering plan for international phone numbers.",
                                "example": "+918989898989"
                            },
                            "countryCode": {
                                "maxLength": 3,
                                "minLength": 2,
                                "pattern": "^[A-Za-z]+$",
                                "type": "string",
                                "description": "A country code is a numerical or alphabetical code assigned to each country or territory",
                                "example": "IN"
                            },
                            "dialCode": {
                                "maxLength": 4,
                                "minLength": 1,
                                "pattern": "^[+]?[0-9]+$",
                                "type": "string",
                                "description": "Dial code is a numerical prefix used to initiate international telephone calls.",
                                "example": "+91"
                            }
                        }
                    },
                    "position": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "A position refers to a role or job within a company and other entity."
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By refers to the entity that created the user.",
                        "format": "email",
                        "example": "admin123@gmail.com"
                    },
                    "reporting_manager": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "A reporting manager is an individual in a supervisory or managerial position within an organization who oversees and directly manages a team or a group of employees. ",
                        "example": "admin"
                    },
                    "user_metadata": {
                        "required": ["password", "organization_name", "organization_display_name", "organization_id", "tenant_id", "employee_id", "role"],
                        "type": "object",
                        "properties": {
                            "password": {
                                "minLength": 5,
                                "pattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,})$",
                                "type": "string",
                                "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                "example": "Admin@123"
                            },
                            "organization_name": {
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "type": "string",
                                "description": "An organization name refers to the official name or title of a company, institution, or entity. It is the unique and formal name by which the organization is known and recognized.",
                                "example": "dev-org"
                            },
                            "organization_display_name": {
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "type": "string",
                                "description": "An organization display name refers to the display name or title of a company, institution, or entity. It is the unique and formal display name by which the organization is displayed.",
                                "example": "devorg"
                            },
                            "organization_id": {
                                "pattern": "^[^\\s]+$",
                                "type": "string",
                                "description": "An organization ID is a unique identifier assigned to an organization or entity within a specific system.",
                                "nullable": true,
                                "example": "org_IyyPNiNdz9w9mcqs"
                            },
                            "tenant_id": {
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string",
                                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                                "nullable": true,
                                "example": "tenant_12345"
                            },
                            "employee_id": {
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "type": "string",
                                "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                "nullable": true,
                                "example": "emp_123"
                            },
                            "role": {
                                "type": "array",
                                "items": {
                                    "pattern": "^[^\\s]+$",
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group.",
                                "example": ["customer_admin", "sales"]
                            }
                        }
                    }
                }
            }
        }
    },
    "UserUpdate": {
        "required": ["user", "tenant_id"],
        "type": "object",
        "properties": {
            "user": {
                "required": ["phone", "user_id", "status", "reporting_manger", "email", "ip", "name", "role", "modified_by", "position", "employee_id"],
                "type": "object",
                "properties": {
                    "phone": {
                        "required": ["number", "internationalNumber", "nationalNumber", "e164Number", "countryCode", "dialCode"],
                        "type": "object",
                        "properties": {
                            "number": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[0-9 ]+$",
                                "type": "string",
                                "description": "A number is a numerical sequence used to uniquely identify a telephone line or mobile device for the purpose of making or receiving phone calls.",
                                "example": "08989898989"
                            },
                            "internationalNumber": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[+]?[0-9 ]+$",
                                "type": "string",
                                "description": "An international number refers to a phone number that includes the necessary prefix or country code to make or receive calls from outside a specific country.",
                                "example": "+91 89898 98989"
                            },
                            "nationalNumber": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[0-9 ]+$",
                                "type": "string",
                                "description": "A national number refers to a phone number that is specific to a particular country or region.",
                                "example": "089898 98989"
                            },
                            "e164Number": {
                                "maxLength": 15,
                                "minLength": 10,
                                "pattern": "^[+]?[0-9 ]+$",
                                "type": "string",
                                "description": "E164 is a globally recognized standard for phone number formatting. It defines the structure and numbering plan for international phone numbers.",
                                "example": "+918989898989"
                            },
                            "countryCode": {
                                "maxLength": 3,
                                "minLength": 2,
                                "pattern": "^[A-Za-z]+$",
                                "type": "string",
                                "description": "A country code is a numerical or alphabetical code assigned to each country or territory",
                                "example": "IN"
                            },
                            "dialCode": {
                                "maxLength": 4,
                                "minLength": 1,
                                "pattern": "^[+]?[0-9]+$",
                                "type": "string",
                                "description": "Dial code is a numerical prefix used to initiate international telephone calls.",
                                "example": "+91"
                            }
                        }
                    },
                    "user_id": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "The unique identifier assigned to an individual user within a platform.",
                        "example": "auth0|645cbb7a0be902874f4b9f28"
                    },
                    "status": {
                        "enum": ["ACTIVE", "INACTIVE"],
                        "type": "string",
                        "description": "Status refers to the current state or condition of an object, entity, or process.",
                        "example": "ACTIVE"
                    },
                    "reporting_manger": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "Reporting manager refers to the individual to whom an employee directly reports within an organization.",
                        "example": "okokoks"
                    },
                    "email": {
                        "type": "string",
                        "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                        "format": "email",
                        "example": "admin123@gmail.com"
                    },
                    "ip": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "IP refers to a unique numerical label assigned to each device connected to a network that uses the Internet Protocol for communication.",
                        "example": "122.160.141.52"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "Name defines the user personal identifier.",
                        "example": "okokokoko"
                    },
                    "role": {
                        "type": "array",
                        "items": {
                            "pattern": "^[^\\s]+$",
                            "type": "string"
                        },
                        "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group.",
                        "example": ["customer_admin", "sales"]
                    },
                    "modified_by": {
                        "type": "string",
                        "description": "Modified by refers to an entity that appends the changes.",
                        "format": "email",
                        "example": "sandeep.rawat@call-ai.com"
                    },
                    "position": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$",
                        "type": "string",
                        "description": "A position refers to a role or job within a company and other entity.",
                        "example": "okok notq"
                    },
                    "employee_id": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "type": "string",
                        "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                        "example": "tr12345EHRue"
                    }
                }
            },
            "tenant_id": {
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "FilterUser": {
        "required": ["pageSize", "pageIndex", "selectedRolebyuser", "field", "order", "org_id", "status"],
        "type": "object",
        "properties": {
            "pageSize": {
                "minLength": 1,
                "type": "integer",
                "description": "pageSize refers to a parameter or attribute that determines the number of items or records to be displayed on a single page.",
                "example": 1
            },
            "pageIndex": {
                "minLength": 1,
                "type": "integer",
                "description": "pageIndex is a parameter or attribute that represents the index or number of a specific page within a paginated set of data.",
                "example": 10
            },
            "selectedRolebyuser": {
                "type": "array",
                "items": {
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                },
                "description": "selectedRolebyuser represents the role or roles selected by a user within a system or application.",
                "example": ["agent", "customer"]
            },
            "status": {
                "type": "array",
                "items": {
                    "enum": ["Active", "Inactive", "VerificationPending"],
                    "type": "string"
                },
                "description": "status represents the user Active And Inactive and VerificationPending within a system or application.",
                "example": ["Active", "Inactive", "VerificationPending"]
            },
            "field": {
                "enum": ["name", "last_login"],
                "type": "string",
                "description": "Field generally refers to a specific attribute, property, or data field within a dataset or object."
            },
            "order": {
                "enum": ["1", "-1"],
                "type": "string",
                "description": "order is a term commonly used in sorting or arranging data in a specific sequence."
            },
            "org_id": {
                "minLength": 1,
                "pattern": "^[^\\s]+$",
                "type": "string",
                "description": "An organization ID, also known as an organization identifier or organization code, is a unique alphanumeric code assigned to identify a specific organization or entity.",
                "example": "org_12345"
            }
        }
    },
    "UpdatePassword": {
        "required": ["user", "tenant_id"],
        "type": "object",
        "properties": {
            "user": {
                "required": ["email", "current_password", "new_password", "user_id", "base_password_changed"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.  ",
                        "format": "email",
                        "example": "admin123@gmail.com"
                    },
                    "current_password": {
                        "minLength": 5,
                        "pattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,})$",
                        "type": "string",
                        "description": " The password that is currently set or in use for a user.",
                        "example": "Admin@123"
                    },
                    "new_password": {
                        "minLength": 5,
                        "pattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,})$",
                        "type": "string",
                        "description": " The new password is the one that will replace the old or current password.",
                        "example": "Admin@123"
                    },
                    "user_id": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "The unique identifier assigned to an individual user within a platform.",
                        "example": "auth0|643d280e23106bb01368df74"
                    },
                    "base_password_changed": {
                        "type": "boolean",
                        "description": "A base password change refers to the act of modifying or updating an existing password to create a new password. ",
                        "example": true
                    }
                }
            },
            "tenant_id": {
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "example": "tenant_12345"
            }
        }
    },
    "UpdateStatus": {
        "required": ["ip", "email", "status", "tenant_id", "user_id", "activity", "modified_by"],
        "type": "object",
        "properties": {
            "ip": {
                "minLength": 1,
                "pattern": "^[^\\s]+$",
                "type": "string",
                "description": "IP refers to a unique numerical label assigned to each device connected to a network that uses the Internet Protocol for communication.",
                "example": "122.160.141.52"
            },
            "email": {
                "type": "string",
                "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                "format": "email",
                "example": "admin123@gmail.com"
            },
            "status": {
                "type": "boolean",
                "description": "Status refers to the current state or condition of an object, entity, or process.",
                "example": false
            },
            "tenant_id": {
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "user_id": {
                "minLength": 1,
                "pattern": "^[^\\s]+$",
                "type": "string",
                "description": "The unique identifier assigned to an individual user within a platform.",
                "example": "auth0|643e891c170832ee0b05a804"
            },
            "activity": {
                "minLength": 1,
                "type": "string",
                "description": "An activity typically refers to a specific action, task, or event that a person or a group of individuals engage in.",
                "example": "Status has been changed by testing user test from ACTIVE to ACTIVE"
            },
            "modified_by": {
                "type": "string",
                "description": "Created By refers to the entity that created the user.",
                "format": "email",
                "example": "admin123@gmail.com"
            }
        }
    },
    "DeleteUser": {
        "required": ["user", "tenant_id"],
        "type": "object",
        "properties": {
            "user": {
                "required": ["email", "ip", "modified_by", "tenant_id", "user_id"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                        "format": "email",
                        "example": "admin123@gmail.com"
                    },
                    "ip": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "IP refers to a unique numerical label assigned to each device connected to a network that uses the Internet Protocol for communication.",
                        "example": "122.160.141.52"
                    },
                    "modified_by": {
                        "type": "string",
                        "description": "Modified by refers to an entity that appends the changes.",
                        "format": "email",
                        "example": "parvis.kakkar@call-ai.com"
                    },
                    "tenant_id": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string",
                        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                        "example": "tenant_12345"
                    },
                    "user_id": {
                        "minLength": 1,
                        "pattern": "^[^\\s]+$",
                        "type": "string",
                        "description": "The unique identifier assigned to an individual user within a platform.",
                        "example": "auth0|645cbb7a0be902874f4b9f28"
                    }
                }
            }
        }
    },
    "response_201_createNewUser": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string",
                                "description": "Action defines the activity which will be processed.",
                                "example": "created"
                            },
                            "ip": {
                                "type": "string",
                                "description": "IP refers to a unique numerical label assigned to each device connected to a network that uses the Internet Protocol for communication.",
                                "example": "131.130.190.11"
                            },
                            "activity": {
                                "type": "string",
                                "description": "An activity typically refers to a specific action, task, or event that a person or a group of individuals engage in.",
                                "example": "User created by Parvis Kakkar"
                            },
                            "email": {
                                "type": "string",
                                "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                                "example": "admin123@gmail.com"
                            },
                            "blocked": {
                                "type": "string",
                                "description": "Blocked defines whether a account is locked or not.",
                                "example": "false"
                            },
                            "email_verified": {
                                "type": "string",
                                "description": "Email verifies defines whether a account is verified or not.",
                                "example": "true"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name defines the user personal identifier.",
                                "example": "testing"
                            },
                            "phone": {
                                "type": "object",
                                "properties": {
                                    "number": {
                                        "type": "string",
                                        "description": "A number is a numerical sequence used to uniquely identify a telephone line or mobile device for the purpose of making or receiving phone calls.",
                                        "example": "(90) 5552322"
                                    },
                                    "internationalNumber": {
                                        "type": "string",
                                        "description": "An international number refers to a phone number that includes the necessary prefix or country code to make or receive calls from outside a specific country.",
                                        "example": "+98 2323232"
                                    },
                                    "nationalNumber": {
                                        "type": "string",
                                        "description": "A national number refers to a phone number that is specific to a particular country or region.",
                                        "example": "(201) 2362-2323"
                                    },
                                    "e164Number": {
                                        "type": "string",
                                        "description": "E164 is a globally recognized standard for phone number formatting. It defines the structure and numbering plan for international phone numbers.",
                                        "example": "+1 202323212"
                                    },
                                    "countryCode": {
                                        "type": "string",
                                        "description": "A country code is a numerical or alphabetical code assigned to each country or territory",
                                        "example": "US"
                                    },
                                    "dialCode": {
                                        "type": "string",
                                        "description": "Dial code is a numerical prefix used to initiate international telephone calls.",
                                        "example": "+1"
                                    }
                                }
                            },
                            "position": {
                                "type": "string",
                                "description": "A position refers to a role or job within a company and other entity.",
                                "example": "dsdsdcdvdsd"
                            },
                            "connection": {
                                "type": "string",
                                "description": "A connection refers to a link between two or more entities",
                                "example": "USER-PASSWORD-AUTH"
                            },
                            "modified_by": {
                                "type": "string",
                                "description": "Modified by refers to an entity that appends the changes.",
                                "example": "parvis.kakkar@call-ai.com"
                            },
                            "created_by": {
                                "type": "string",
                                "description": "Created By refers to the entity that created the user.",
                                "example": "parvis.kakkar@call-ai.com"
                            },
                            "created_by_id": {
                                "type": "string",
                                "description": "Created by id refers to the entity's unique id",
                                "example": "parvis.kakkar@call-ai.com"
                            },
                            "password": {
                                "type": "string",
                                "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                "example": "Cisco@345"
                            },
                            "employee_id": {
                                "type": "string",
                                "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                "example": "emp_123"
                            },
                            "reporting_manager": {
                                "type": "string",
                                "description": "A reporting manager is an individual in a supervisory or managerial position within an organization who oversees and directly manages a team or a group of employees. ",
                                "example": "sdefv"
                            },
                            "role": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "teamlead"
                                },
                                "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group."
                            },
                            "org_id": {
                                "type": "string",
                                "description": "An organization ID, also known as an organization identifier or organization code, is a unique alphanumeric code assigned to identify a specific organization or entity.",
                                "example": "org_Ihsbdhbdh"
                            },
                            "user_metadata": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                        "example": "Cisco@123"
                                    },
                                    "organization_name": {
                                        "type": "string",
                                        "description": "An organization name refers to the official name or title of a company, institution, or entity. It is the unique and formal name by which the organization is known and recognized.",
                                        "example": "dev-org"
                                    },
                                    "organization_display_name": {
                                        "type": "string",
                                        "description": "An organization display name refers to the display name or title of a company, institution, or entity. It is the unique and formal display name by which the organization is displayed.",
                                        "example": "dev-org"
                                    },
                                    "organization_id": {
                                        "type": "string",
                                        "description": "An organization ID is a unique identifier assigned to an organization or entity within a specific system.",
                                        "example": "org_Ihbd36yew"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                        "example": "tenant_12345"
                                    },
                                    "employee_id": {
                                        "type": "string",
                                        "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                        "example": "emp_1234"
                                    },
                                    "role": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "teamlead"
                                        },
                                        "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group."
                                    }
                                }
                            },
                            "roleArray": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "eshs823-jnddju3h-jjdn3u3u"
                                },
                                "description": "A role array refers to an array or collection of roles associated with a user or entity within a system or application."
                            },
                            "roleArrayToRemove": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "dhsdhjsdhsj382-ndj3u38-dnjdjd3"
                                },
                                "description": "Role array to be removed refers to a subset or selection of roles within the existing role array that are intended to be removed or revoked from a user or entity within a system."
                            }
                        }
                    },
                    "tenant_id": {
                        "type": "string",
                        "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                        "example": "tenant_12345"
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_200_deleteUser": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": "null"
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                        "example": "SUCCESS"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message represents the content that is being transmitted from  the server to the client.",
                        "example": "record deleted successfully"
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_200_filterUsers": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": "null"
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                        "example": ""
                    },
                    "users": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer",
                                "description": "It represents the starting position or index of a sequence or range.",
                                "example": 0
                            },
                            "limit": {
                                "type": "integer",
                                "description": "The term limit is commonly used to define the maximum number of items, elements, or iterations allowed within a given context.",
                                "example": 10
                            },
                            "length": {
                                "type": "integer",
                                "description": "It refers to the size, extent, or count",
                                "example": 1
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "blocked": {
                                            "type": "boolean",
                                            "description": "Blocked defines whether a account is locked or not.",
                                            "example": false
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2022-10-10T05:59:46.127Z"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                                            "example": "admin123@gmail.com"
                                        },
                                        "email_verified": {
                                            "type": "boolean",
                                            "description": "Email verifies defines whether a account is verified or not.",
                                            "example": true
                                        },
                                        "identities": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "connection": {
                                                        "type": "string",
                                                        "description": "A connection refers to a link between two or more entities",
                                                        "example": "Username-Password-Authentication"
                                                    },
                                                    "provider": {
                                                        "type": "string",
                                                        "description": "Provider refers to a third-party service or entity that offers a particular service or resource to users.",
                                                        "example": "auth0"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "description": "The unique identifier assigned to an individual user within a platform.",
                                                        "example": "6343b4d2d3ad434e53ae0fe2"
                                                    },
                                                    "isSocial": {
                                                        "type": "boolean",
                                                        "description": "The key facilitates boolean value",
                                                        "example": false
                                                    }
                                                }
                                            }
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name defines the user personal identifier.",
                                            "example": "parvis kakkar"
                                        },
                                        "nickname": {
                                            "type": "string",
                                            "description": "Nickname defines the user personal short identifier.",
                                            "example": "parvis kakkar"
                                        },
                                        "picture": {
                                            "type": "string",
                                            "description": "A Url string defining the details.",
                                            "example": "https://s.gravatar.com/avatar/983d21ac98eecc1f9a7157a19fbcc13f?s=480&r=pg&d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fks.png"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "description": "Updated at refers to the date and time when a particular piece of information or content was last modified or revised. ",
                                            "example": "2023-05-01T07:56:04.451Z"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "description": "The unique identifier assigned to an individual user within a platform.",
                                            "example": "auth0|6343b4d2d3ad434e53ae0fe2"
                                        },
                                        "user_metadata": {
                                            "type": "object",
                                            "properties": {
                                                "employee_id": {
                                                    "type": "string",
                                                    "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                                    "example": "HUM46"
                                                },
                                                "organization_display_name": {
                                                    "type": "string",
                                                    "description": "An organization display name refers to the display name or title of a company, institution, or entity. It is the unique and formal display name by which the organization is displayed.",
                                                    "example": "dev-org"
                                                },
                                                "organization_id": {
                                                    "type": "string",
                                                    "description": "An organization ID is a unique identifier assigned to an organization or entity within a specific system.",
                                                    "example": "org_IyyPNiNdz9w9mcqs"
                                                },
                                                "organization_name": {
                                                    "type": "string",
                                                    "description": "An organization name refers to the official name or title of a company, institution, or entity. It is the unique and formal name by which the organization is known and recognized.",
                                                    "example": "dev-org"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                                    "example": "Admin@123"
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "agent"
                                                    },
                                                    "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group."
                                                },
                                                "tenant_id": {
                                                    "type": "string",
                                                    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                                    "example": "tenant_12345"
                                                },
                                                "trial_expiration_date": {
                                                    "type": "string",
                                                    "description": "An expiration date, also known as an expiry date or validity date, refers to the specific date or time period after which a entity is no longer considered valid.",
                                                    "example": "2022-10-17T05:57:30.219Z"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type define the entity individual personality.",
                                                    "example": "user"
                                                }
                                            }
                                        },
                                        "last_password_reset": {
                                            "type": "string",
                                            "description": "Password reset refers to the process of changing or creating a new password for an account or system when the original password is forgotten, compromised, or no longer secure.",
                                            "example": "2022-10-10T06:03:50.311Z"
                                        },
                                        "last_login": {
                                            "type": "string",
                                            "description": "Last login refers to the most recent instance when a user successfully accessed a particular system.",
                                            "example": "2023-05-01T07:53:14.534Z"
                                        },
                                        "last_ip": {
                                            "type": "string",
                                            "description": "Last IP (Internet Protocol) refers to the IP address associated with the user's most recent login activity.",
                                            "example": "122.160.141.52"
                                        },
                                        "logins_count": {
                                            "type": "integer",
                                            "description": "Login count refers to the total number of times a user has successfully logged into a system",
                                            "example": 408
                                        },
                                        "app_metadata": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "type": "object",
                                                    "properties": {
                                                        "groups": {
                                                            "type": "array"
                                                        },
                                                        "roles": {
                                                            "type": "array",
                                                            "items": {
                                                                "example": "agent"
                                                            }
                                                        },
                                                        "permissions": {
                                                            "type": "array",
                                                            "items": {
                                                                "example": "read:agent_dashboard,read:my_profile"
                                                            },
                                                            "description": "Permissions are the rights and privileges granted to a user that determine what actions they can perform and what resources they can access within the system."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "total": {
                                "type": "integer",
                                "description": "Total refer to the overall or cumulative value or count.",
                                "example": 1
                            }
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total refer to the overall or cumulative value or count.",
                        "example": 1
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_200_resendVerificationLink": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": "The user will get the verification link shortly"
            },
            "data": {
                "type": "object",
                "description": "Data represents the information or content that the API provides to the client or consumer.",
                "example": "{}"
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_202_updatePassword": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                        "example": "SUCCESS"
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_200_statusUpdate": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "description": "Data represents the information or content that the API provides to the client or consumer.",
                "example": "{}"
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_201_userUpdate": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": "null"
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                        "example": "record updated successfully"
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_202_findUserByEmail": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                        "example": "SUCCESS"
                    },
                    "userFromDB": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "phone": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "description": "A number is a numerical sequence used to uniquely identify a telephone line or mobile device for the purpose of making or receiving phone calls.",
                                            "example": "081818 18181"
                                        },
                                        "internationalNumber": {
                                            "type": "string",
                                            "description": "An international number refers to a phone number that includes the necessary prefix or country code to make or receive calls from outside a specific country.",
                                            "example": "+91 81818 18181"
                                        },
                                        "nationalNumber": {
                                            "type": "string",
                                            "description": "A national number refers to a phone number that is specific to a particular country or region.",
                                            "example": "081818 18181"
                                        },
                                        "e164Number": {
                                            "type": "string",
                                            "description": "E164 is a globally recognized standard for phone number formatting. It defines the structure and numbering plan for international phone numbers.",
                                            "example": "+918181818181"
                                        },
                                        "countryCode": {
                                            "type": "string",
                                            "description": "A country code is a numerical or alphabetical code assigned to each country or territory",
                                            "example": "IN"
                                        },
                                        "dialCode": {
                                            "type": "string",
                                            "description": "Dial code is a numerical prefix used to initiate international telephone calls.",
                                            "example": "+91"
                                        }
                                    }
                                },
                                "_id": {
                                    "type": "string",
                                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                    "example": "643e8931cfb25d46fd57f602"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "description": "Modified by refers to an entity that appends the changes.",
                                    "example": "parvis.kakkar@call-ai.com"
                                },
                                "created_by": {
                                    "type": "string",
                                    "description": "Created By refers to the entity that created the user.",
                                    "example": "parvis.kakkar@call-ai.com"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                    "example": "Admin@1233"
                                },
                                "base_password_changed": {
                                    "type": "boolean",
                                    "description": "A base password change refers to the act of modifying or updating an existing password to create a new password.",
                                    "example": false
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status refers to the current state or condition of an object, entity, or process.",
                                    "example": "ACTIVE"
                                },
                                "isDeleted": {
                                    "type": "boolean",
                                    "description": "Is Deleted is a boolean attribute that indicates whether a record or entity has been marked as deleted or removed from the system.",
                                    "example": false
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type define the entity individual personality.",
                                    "example": "user"
                                },
                                "blocked": {
                                    "type": "boolean",
                                    "description": "Blocked defines whether a account is locked or not.",
                                    "example": false
                                },
                                "email": {
                                    "type": "string",
                                    "description": "An email address is a unique identifier used for sending and receiving electronic mail messages.",
                                    "example": "admin123@gmail.com"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name defines the user personal identifier.",
                                    "example": "Parvis Kakkar"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "The unique identifier assigned to an individual user within a platform.",
                                    "example": "auth0|643e891c170832ee0b05a804"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                    "example": "tenant_12345"
                                },
                                "asterisk_user_id": {
                                    "type": "string",
                                    "description": "Asterisk User ID is a unique identifier assigned to an individual user within a system or application.",
                                    "example": "616182718212"
                                },
                                "asterisk_user_password": {
                                    "type": "string",
                                    "description": "The password that is currently set or in use for a user.",
                                    "example": "qweAna"
                                },
                                "user_metadata": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Type define the entity individual personality.",
                                            "example": "user"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "A password is a string of characters or a secret code that is used to authenticate or verify the identity of a user.",
                                            "example": "Admin@1233"
                                        },
                                        "organization_name": {
                                            "type": "string",
                                            "description": "An organization name refers to the official name or title of a company, institution, or entity. It is the unique and formal name by which the organization is known and recognized.",
                                            "example": "dev-org"
                                        },
                                        "organization_display_name": {
                                            "type": "string",
                                            "description": "An organization display name refers to the display name or title of a company, institution, or entity. It is the unique and formal display name by which the organization is displayed.",
                                            "example": "dev-org"
                                        },
                                        "organization_id": {
                                            "type": "string",
                                            "description": "An organization ID is a unique identifier assigned to an organization or entity within a specific system.",
                                            "example": "org_Ivysdsdsbds83njdn"
                                        },
                                        "tenant_id": {
                                            "type": "string",
                                            "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                            "example": "tenant_12345"
                                        },
                                        "employee_id": {
                                            "type": "string",
                                            "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                            "example": "78454549"
                                        },
                                        "role": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "customer_admin"
                                            },
                                            "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group."
                                        }
                                    }
                                },
                                "role": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "customer_admin"
                                    },
                                    "description": "A role refers to a specific position, function, or set of responsibilities that an individual or a group of individuals assume within that organization or group."
                                },
                                "position": {
                                    "type": "string",
                                    "description": "A position refers to a role or job within a company and other entity.",
                                    "example": "djaoida"
                                },
                                "employee_id": {
                                    "type": "string",
                                    "description": "An employee ID (Identification) is a unique identifier assigned to an employee within an organization.",
                                    "example": "328932832"
                                },
                                "reporting_manager": {
                                    "type": "string",
                                    "description": "A reporting manager is an individual in a supervisory or managerial position within an organization who oversees and directly manages a team or a group of employees. ",
                                    "example": "foijdsdjs"
                                },
                                "audit_log": {
                                    "type": "array",
                                    "description": "It provides a detailed account of activities and transactions, allowing for monitoring, tracking, and analysis of system behavior and user actions."
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "The specific date the user is created.",
                                    "example": "2023-04-18T12:12:33.497Z"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "The specific date the user is updated.",
                                    "example": "2023-05-12T07:44:39.287Z"
                                },
                                "__v": {
                                    "type": "integer",
                                    "description": "Versioning",
                                    "example": 0
                                }
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    }
}

}

Reporting
{
"title": "Reporting & Analytics",
"description": "The Reporting API facilitates to retrieve various types of data and metrics about voice call activity on Call AI platform. It provides access to a wide range of reports, including CDR, call transcripts/recordings and and other key performance indicators. ",

// path
"paths": {
    "/reporting-ms/v1/reporting/api/v1/analytics/filtercallDatacdrList": {
        "post": {
            "tags": ["CDR"],
            "summary": "Filter call data from CDR List",
            "description": "Filtering call data from a CDR (Call Detail Record) list API involves sorting and selecting specific call information based on various criteria.",
            "operationId": "post-reporting-api-v1-analytics-filtercalldatacdrlist",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FilterCallCdrDataList"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "offset": 5,
                            "limit": 10,
                            "order_by": "DESC",
                            "field": "call_date",
                            "condition": {
                                "ani": "9098765432",
                                "call_direction": "INBOUND",
                                "dnis": "9876234567",
                                "call_date": {
                                    "start_date": "2023-01-01",
                                    "end_date": "2023-04-01"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_filtercallDatacdrList"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": {
                                        "count": 0,
                                        "rows": [{
                                            "uid": "123456.789",
                                            "ani": "9098765432",
                                            "dnis": "9876234567",
                                            "call_end_time": "2023-07-27",
                                            "bot_id": "sfsdjfds32534dvds5sdfh",
                                            "call_direction": "INBOUND",
                                            "call_duration": 10,
                                            "bot_name": "abcd",
                                            "call_status": "ANSWERED",
                                            "call_date": "2023-03-29"
                                        }]
                                    }
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [{
                                    "$ref": "#/components/schemas/response_404"
                                }, {
                                    "$ref": "#/components/schemas/response_404_date_error"
                                }]
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/callDataqueue/{uid}": {
        "get": {
            "tags": ["CDR"],
            "summary": "Call data from Queue",
            "description": "Call data from Queue API allows user to get call data details from queue.",
            "operationId": "get-reporting-api-v1-analytics-calldataqueue-uid",
            "parameters": [{
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_callDataQueue"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": [{
                                        "uid": "123456.789",
                                        "q_name": "support",
                                        "q_end_time": "2023-07-27",
                                        "q_start_time": "2023-07-27",
                                        "q_id": "1233",
                                        "q_duration": 13880
                                    }]
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/callDataagent/{uid}": {
        "get": {
            "tags": ["CDR"],
            "summary": "Call data from Agent",
            "description": "Call data from Agent API allows user to get call data details from agent.",
            "operationId": "get-reporting-api-v1-analytics-calldataagent-uid",
            "parameters": [{
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_callDataAgent"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": [{
                                        "uid": "123456.789",
                                        "a_name": "prayag",
                                        "a_end_time": "2023-07-27",
                                        "a_start_time": "2023-07-27",
                                        "a_id": "25161919",
                                        "a_alert_time": "2022-09-20T05:21:22.0000000+00:00",
                                        "a_duration": 2330,
                                        "a_action": "ANSWERED"
                                    }]
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/recording/{uid}": {
        "get": {
            "tags": ["CALL RECORDING"],
            "summary": "Fetch Call Recordings",
            "description": "The Fetch Call Recordings API enables the retrieval of call recordings.",
            "operationId": "get-reporting-api-v1-analytics-recording-uid",
            "parameters": [{
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_fetchCallRecording"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": {
                                        "uid": "123456.789",
                                        "rec_time": "2022-07-07T12:07:34.0000000+00:00",
                                        "rec_url": "3520311170_1657195652_6001.wav"
                                    }
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["CALL RECORDING"],
            "summary": "Delete Call Recording",
            "description": "To delete call recordings.",
            "operationId": "delete-reporting-api-v1-analytics-recording-uid",
            "parameters": [{
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_deleteCallRecording"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": {
                                        "uid": "123456.789",
                                        "rec_time": "2022-07-07T12:07:34.0000000+00:00",
                                        "rec_url": "3520311170_1657195652_6001.wav"
                                    }
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/transcript/{tenant_id}/{bot_id}/{uid}": {
        "get": {
            "tags": ["CALL TRANSCRIPT & SUMMARY"],
            "summary": "Fetch chat Transcripts",
            "description": "The Fetch chat transcripts API enables the retrieval of chat transcripts.",
            "operationId": "get-reporting-api-v1-analytics-transcript-tenant_id-bot_id-uid",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "bot_id",
                "in": "path",
                "description": "The unique identifier of the bot.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "sfsdjfds32534dvds5sdfh"
            }, {
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_fetchChatTranscript"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": [{
                                        "_id": "62d5164908eb6c8c036f591h",
                                        "chat_id": "qJH64Pbjh0Pgt2gg",
                                        "bot_id": "sfsdjfds32534dvds5sdfh",
                                        "bot_name": "abcd",
                                        "tenant_id": "tenant_12345",
                                        "unique_id": "123456.789",
                                        "caller_id": "9874567383",
                                        "called_no": "9812812839",
                                        "agent_type": "bot",
                                        "user_query": "hi",
                                        "bot_response": [{
                                            "template_type": "text",
                                            "payload": {
                                                "speech": " Good afternoon, is this Sarah.",
                                                "display": " Good afternoon, is this Sarah."
                                            }
                                        }],
                                        "language": "en-US",
                                        "timestamp": "2023-04-04T08:40:58.0000000+00:00",
                                        "created_at": "2023-05-01T10:54:27.7520000+00:00",
                                        "updated_At": "2022-07-18T08:14:01.8210000+00:00",
                                        "_v": 0
                                    }]
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["CALL TRANSCRIPT & SUMMARY"],
            "summary": "Delete chat Transcripts",
            "description": "To delete chat transcripts.",
            "operationId": "delete-reporting-api-v1-analytics-transcript-tenant_id-bot_id-uid",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "bot_id",
                "in": "path",
                "description": "The unique identifier of the bot.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "sfsdjfds32534dvds5sdfh"
            }, {
                "name": "uid",
                "in": "path",
                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123456.789
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_deleteChatTranscript"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": {
                                        "acknowledged": true,
                                        "deletedCount": "1"
                                    }
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/total-call-duration/direction": {
        "post": {
            "tags": ["ANALYTICS"],
            "summary": "Fetch total call duration by direction",
            "description": "The Fetch total call duration by direction API allows to fetch the total call duration by call direction.",
            "operationId": "post-reporting-api-v1-analytics-total-call-duration-direction",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/fetchTotalCallDurationByDirection"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "range": {
                                "start_date": "2023-01-01",
                                "end_date": "2023-04-01"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_fetchTotalDurationByDirection"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "-",
                                "data": {
                                    "data": {
                                        "inbound_duration_self_help": [{
                                            "total_call_duration_inbound": "25:11:59",
                                            "total_call_duration_inbound_in_sec": "90719"
                                        }]
                                    },
                                    "inbound_duration_agent": [{
                                        "call_duration_agent_inbound": "2023-07-27",
                                        "call_duration_agent_inbound_in_sec": "1225"
                                    }],
                                    "outbound_duration_self_help": [{
                                        "total_call_duration_outbound": "2023-07-27",
                                        "total_call_duration_outbound_in_sec": "161"
                                    }],
                                    "outbound_duration_agent": [{
                                        "call_duration_agent_outbound": "2023-07-27",
                                        "call_duration_agent_outbound_in_sec": "161"
                                    }]
                                },
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_403"
                            },
                            "example": {
                                "response": " Forbidden",
                                "error": {
                                    "code": 403,
                                    "example": "FORBIDDEN",
                                    "message": "authentication required"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/reporting-ms/v1/reporting/api/v1/analytics/total-call-count": {
        "post": {
            "tags": ["ANALYTICS"],
            "summary": "Fetch Total Call Count",
            "description": "Allows to fetch the count for total call placed.",
            "operationId": "post-reporting-api-v1-analytics-total-call-count",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FetchTotalCallCount"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "range": {
                                "start_date": "2022-08-28",
                                "end_date": "2023-04-30"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/200_fetchTotalCallCount"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "result": {
                                        "totalcall": 250,
                                        "inbound": 230,
                                        "outbound": 220
                                    }
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": {},
                                "error": "{}"
                            }
                        }
                    }
                },
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202"
                            },
                            "example": {
                                "response": "Accepted",
                                "message": "",
                                "data": {},
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "example": {
                                "response": "No content",
                                "error": {
                                    "code": 204,
                                    "example": "NO_CONTENT",
                                    "message": "No Content found"
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "Bad Request",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "Unauthorized",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Not Found",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "Conflict",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal Server Error",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "Service Unavailable",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// schema
"schemas": {
    "FilterCallCdrDataList": {
        "required": ["tenant_id", "offset", "limit", "order_by", "field", "condition"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "offset": {
                "minLength": 1,
                "type": "integer",
                "description": "An offset refers to the number of items or records that are skipped over before beginning to retrieve data.",
                "example": 5
            },
            "limit": {
                "minLength": 1,
                "type": "integer",
                "description": "Limit refers to a constraint or restriction imposed on the number of results or actions that can be obtained or performed within a system.",
                "example": 10
            },
            "order_by": {
                "minLength": 1,
                "enum": ["DESC", "ASC"],
                "type": "string",
                "description": "An order by allows you to retrieve data in a specific order, such as by ascending/descending order.",
                "example": "DESC"
            },
            "field": {
                "minLength": 1,
                "enum": ["ani", "dnis", "call_direction", "call_date"],
                "type": "string",
                "description": "Field represents a specific data element within a record.",
                "example": "call_date"
            },
            "condition": {
                "type": "object",
                "properties": {
                    "ani": {
                        "maxLength": 15,
                        "pattern": "^[0-9]+$",
                        "type": "string",
                        "description": "ANI defines the phone number of the calling party.",
                        "example": "9098765432"
                    },
                    "call_direction": {
                        "minLength": 1,
                        "enum": ["INBOUND", "OUTBOUND", ""],
                        "type": "string",
                        "description": "The direction of a call determines whether it is an incoming call or an outgoing call and empty string for both.",
                        "example": "INBOUND"
                    },
                    "dnis": {
                        "maxLength": 15,
                        "pattern": "^[0-9]+$",
                        "type": "string",
                        "description": "DNIS defines the phone number that was dialed by a caller.",
                        "example": "9876234567"
                    },
                    "call_date": {
                        "type": "object",
                        "properties": {
                            "start_date": {
                                "minLength": 1,
                                "type": "string",
                                "description": "A start date defines the specific date for the call been started.",
                                "format": "date",
                                "example": "2023-01-01"
                            },
                            "end_date": {
                                "minLength": 1,
                                "type": "string",
                                "description": "A end date defines the specific date for the call been ended.",
                                "format": "date",
                                "example": "2023-04-01"
                            }
                        },
                        "description": "A call date defines the specific date for the call been placed."
                    }
                }
            }
        }
    },
    "FetchTotalDuration": {
        "required": ["tenant_id", "range"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "range": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A start date defines the specific date for the call been started.",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "end_date": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A end date defines the specific date for the call been ended.",
                        "format": "date",
                        "example": "2023-04-01"
                    }
                },
                "description": "A range refers to a span of time between two specific dates."
            }
        }
    },
    "fetchTotalCallDurationByDirection": {
        "required": ["tenant_id", "range"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                "example": "tenant_12345"
            },
            "range": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A start date defines the specific date for the call been started.",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "end_date": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A end date defines the specific date for the call been ended.",
                        "format": "date",
                        "example": "2023-04-01"
                    }
                },
                "description": "A range refers to a span of time between two specific dates."
            }
        }
    },
    "FetchTotalCallCount": {
        "required": ["tenant_id", "range"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account.",
                "example": "tenant_12345"
            },
            "range": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "A start date defines the specific date for the call been started.",
                        "example": "2022-08-28"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "A end date defines the specific date for the call been ended.",
                        "example": "2023-04-30"
                    }
                },
                "description": "A range refers to a span of time between two specific dates."
            }
        }
    },
    "200_filtercallDatacdrList": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "description": "Count refers to the numerical value that represents the total number of items, occurrences, or entities within a specific set or group.",
                                "example": 0
                            },
                            "rows": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "string",
                                            "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it.",
                                            "example": "123456.789"
                                        },
                                        "ani": {
                                            "type": "string",
                                            "description": "ANI defines the phone number of the calling party.",
                                            "example": "9098765432"
                                        },
                                        "dnis": {
                                            "type": "string",
                                            "description": "DNIS defines the phone number that was dialed by a caller.",
                                            "example": "9876234567"
                                        },
                                        "call_end_time": {
                                            "type": "string",
                                            "description": "A end time defines the specific time for the call been ended.",
                                            "example": "06:09:56"
                                        },
                                        "bot_id": {
                                            "type": "string",
                                            "description": "The unique identifier of the bot.",
                                            "example": "sfsdjfds32534dvds5sdfh"
                                        },
                                        "call_direction": {
                                            "enum": ["INBOUND", "OUTBOUND", ""],
                                            "type": "string",
                                            "description": "The direction of a call determines whether it is an incoming call or an outgoing call and empty string for both."
                                        },
                                        "call_duration": {
                                            "type": "integer",
                                            "description": "Call duration refers to the length of time that a phone call or communication session lasts from the moment it is initiated until it is terminated. ",
                                            "example": 10
                                        },
                                        "bot_name": {
                                            "type": "string",
                                            "description": "The name of the DVA(Digital Virtual Assistant).",
                                            "example": "abcd"
                                        },
                                        "call_status": {
                                            "enum": ["ANSWERED", "NO ANSWER"],
                                            "type": "string",
                                            "description": "Call status refers to the current state or condition of a phone call or communication session. "
                                        },
                                        "call_date": {
                                            "type": "string",
                                            "description": "A call date defines the specific date for the call been placed.",
                                            "example": "2023-03-29"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_fetchTotalCall": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "totalcall": {
                                "type": "integer",
                                "example": 0
                            },
                            "inbound": {
                                "type": "integer",
                                "example": 0
                            },
                            "outbound": {
                                "type": "integer",
                                "example": 0
                            }
                        },
                        "description": "Data represents the information or content that the API provides to the client or consumer."
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_callDataQueue": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it",
                                    "example": "123456.789"
                                },
                                "q_name": {
                                    "type": "string",
                                    "description": "The name for the queue.",
                                    "example": "support"
                                },
                                "q_end_time": {
                                    "type": "string",
                                    "description": "The end time for the queue.",
                                    "example": "06:09:56"
                                },
                                "q_start_time": {
                                    "type": "string",
                                    "description": "The start time for the queue.",
                                    "example": "06:09:56"
                                },
                                "q_id": {
                                    "type": "string",
                                    "description": "The id assigned to queue.",
                                    "example": "1233"
                                },
                                "q_duration": {
                                    "type": "integer",
                                    "description": "The call duration for a queue.",
                                    "example": 13880
                                }
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_callDataAgent": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it",
                                    "example": "123456.789"
                                },
                                "a_name": {
                                    "type": "string",
                                    "description": "The name for the agent.",
                                    "example": "prayag"
                                },
                                "a_end_time": {
                                    "type": "string",
                                    "description": "The end time for the agent.",
                                    "example": "06:09:23"
                                },
                                "a_start_time": {
                                    "type": "string",
                                    "description": "The start time for the agent.",
                                    "example": "05:09:33"
                                },
                                "a_id": {
                                    "type": "string",
                                    "description": "The id assigned to agent.",
                                    "example": "25161919"
                                },
                                "a_alert_time": {
                                    "type": "string",
                                    "description": "The alert time for the agent.",
                                    "example": "2022-09-20T05:21:22Z"
                                },
                                "a_duration": {
                                    "type": "integer",
                                    "description": "The call duration for a agent.",
                                    "example": 2330
                                },
                                "a_action": {
                                    "type": "string",
                                    "description": "The action taken against the call by agent.",
                                    "example": "ANSWERED"
                                }
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_fetchCallRecording": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it",
                                "example": "123456.789"
                            },
                            "rec_time": {
                                "type": "string",
                                "description": "Recording time refers to the specific timestamp or duration during which a recording of a call takes place.",
                                "example": "2022-07-07T12:07:34Z"
                            },
                            "rec_url": {
                                "type": "string",
                                "description": "Recording URL provides the location or access point for retrieving the recorded content.",
                                "example": "3520311170_1657195652_6001.wav"
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_deleteCallRecording": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "uid": {
                                "type": "string",
                                "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it",
                                "example": "123456.789"
                            },
                            "rec_time": {
                                "type": "string",
                                "description": "Recording time refers to the specific timestamp or duration during which a recording of a call takes place.",
                                "example": "2022-07-07T12:07:34Z"
                            },
                            "rec_url": {
                                "type": "string",
                                "description": "Recording URL provides the location or access point for retrieving the recorded content.",
                                "example": "3520311170_1657195652_6001.wav"
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_fetchChatTranscript": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "A unique and distinctive label or code is assigned to an entity or individual within a particular context or system, serving the purpose of differentiation from others.",
                                    "example": "62d5164908eb6c8c036f591h"
                                },
                                "chat_id": {
                                    "type": "string",
                                    "description": "Chat ID refers to a unique identifier or code assigned to a specific chat or conversation",
                                    "example": "qJH64Pbjh0Pgt2gg"
                                },
                                "bot_id": {
                                    "type": "string",
                                    "description": "The unique identifier of the bot.",
                                    "example": "sfsdjfds32534dvds5sdfh"
                                },
                                "bot_name": {
                                    "type": "string",
                                    "description": "The name of the DVA(Digital Virtual Assistant).",
                                    "example": "abcd"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "description": "A tenant ID is a unique identifier utilized to associate the data of each tenant with their specific account or instance.",
                                    "example": "tenant_12345"
                                },
                                "unique_id": {
                                    "type": "string",
                                    "description": "A UID (Unique Identifier) is a string of characters that is assigned to a specific CDR or object in order to uniquely identify it.",
                                    "example": "123456.789"
                                },
                                "caller_id": {
                                    "type": "string",
                                    "description": "Caller ID displays the telephone number the calling party.",
                                    "example": "9874567383"
                                },
                                "called_no": {
                                    "type": "string",
                                    "description": "Called number refers to the telephone number that is dialed or called by the calling party.",
                                    "example": "9812812839"
                                },
                                "agent_type": {
                                    "type": "string",
                                    "description": "Agent type refers to the categorization or classification of a user or entity based on their role or characteristics within a system.",
                                    "example": "bot"
                                },
                                "user_query": {
                                    "type": "string",
                                    "description": " User query refers to a request or question submitted by a user to a system.",
                                    "example": "hi"
                                },
                                "bot_response": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "template_type": {
                                                "type": "string",
                                                "description": "Template type refers to a predefined or preformatted structure or design used as a basis for creating consistent and standardized content.",
                                                "example": "text"
                                            },
                                            "payload": {
                                                "type": "object",
                                                "properties": {
                                                    "speech": {
                                                        "type": "string",
                                                        "description": "Speech refers to the verbal communication or expression of language through spoken words, sounds, and vocalizations.",
                                                        "example": " Good afternoon, is this Sarah."
                                                    },
                                                    "display": {
                                                        "type": "string",
                                                        "description": " Display refers to the presentation or rendering of information, data, or content ",
                                                        "example": " Good afternoon, is this Sarah."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "language": {
                                    "type": "string",
                                    "description": "Language refers to a complex system of communication used by humans to convey meaning, thoughts, and ideas.",
                                    "example": "en-US"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "description": "Timestamp refers to a specific point in time that represents the occurrence or recording of an event or action.",
                                    "example": "2023-04-04T08:40:58Z"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "The specific date the entity is created.",
                                    "example": "2023-05-01T10:54:27.752Z"
                                },
                                "updated_At": {
                                    "type": "string",
                                    "description": "The specific date the entity is updated.",
                                    "example": "2022-07-18T08:14:01.821Z"
                                },
                                "_v": {
                                    "type": "integer",
                                    "example": 0
                                }
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_deleteChatTranscript": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "acknowledged": {
                                "type": "boolean",
                                "description": "The key indicates whether the entity is acknowledged or not.",
                                "example": true
                            },
                            "deletedCount": {
                                "type": "integer",
                                "description": "Delted count refers to the number of documents or records that were successfully deleted.",
                                "example": "1"
                            }
                        }
                    }
                },
                "description": "Data represents the information or content that the API provides to the client or consumer."
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "200_fetchTotalCallCount": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "totalcall": {
                                "type": "integer",
                                "example": 250
                            },
                            "inbound": {
                                "type": "integer",
                                "example": 230
                            },
                            "outbound": {
                                "type": "integer",
                                "example": 220
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "200_fetchTotalDurationByDirection": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": "-"
            },
            "data": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "inbound_duration_self_help": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "total_call_duration_inbound": {
                                            "type": "string",
                                            "description": "Total call duration inbound refers to the cumulative length of time that inbound or incoming calls have been active or in progress. It represents the combined duration of all inbound calls.",
                                            "example": "25:11:59"
                                        },
                                        "total_call_duration_inbound_in_sec": {
                                            "type": "string",
                                            "description": "Total call duration inbound in seconds refers to the cumulative length of time that inbound or incoming calls have been active or in progress in seconds. It represents the combined duration of all inbound calls in seconds.",
                                            "example": "90719"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "inbound_duration_agent": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "call_duration_agent_inbound": {
                                    "type": "string",
                                    "description": "Call Duration agent inbound refers to the amount of time an agent spends actively in handling inbound or incoming calls.",
                                    "example": "00:07:35"
                                },
                                "call_duration_agent_inbound_in_sec": {
                                    "type": "string",
                                    "description": "Call Duration agent inbound refers to the amount of time an agent spends actively in handling inbound or incoming calls in seconds.",
                                    "example": "1225"
                                }
                            }
                        }
                    },
                    "outbound_duration_self_help": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "total_call_duration_outbound": {
                                    "type": "string",
                                    "description": "Total call duration outbound refers to the cumulative length of time that outbound or outgoing calls have been active or in progress. It represents the combined duration of all outbound calls.",
                                    "example": "00:02:41"
                                },
                                "total_call_duration_outbound_in_sec": {
                                    "type": "string",
                                    "description": "Total call duration outbound in seconds refers to the cumulative length of time that outbound or outgoing calls have been active or in progress in seconds. It represents the combined duration of all outbound calls in seconds.",
                                    "example": "161"
                                }
                            }
                        }
                    },
                    "outbound_duration_agent": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "call_duration_agent_outbound": {
                                    "type": "string",
                                    "description": "Call Duration agent outbound refers to the amount of time an agent spends actively in handling outbound or outgoing calls.",
                                    "example": "00:02:41"
                                },
                                "call_duration_agent_outbound_in_sec": {
                                    "type": "string",
                                    "description": "Call Duration agent outbound in seconds refers to the amount of time an agent spends actively in outbound or outgoing calls in seconds.",
                                    "example": "161"
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "Error defines the expected behavior and structure of the error responses that clients can receive when interacting with the API.",
                "example": "{}"
            }
        }
    },
    "response_404_date_error": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "description": "Response defines the expected behavior and structure of the responses that clients can receive when interacting with the API.",
                "example": "Bad Request"
            },
            "error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "Error code is a numeric or alphanumeric value that uniquely identifies a specific error condition or scenario. ",
                        "example": 400
                    },
                    "example": {
                        "type": "string",
                        "description": "Error example is a representation of an error response that demonstrates the structure and content of the error message.",
                        "example": "BAD_REQUEST"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message represents the content that is being transmitted from  the server to the client.",
                        "example": "The entered start date is beyond the provided end date."
                    }
                }
            }
        }
    }
}
}

voice campaign
{
"title": "Campaigns",
"description": "The utilization of an outbound API streamlines the process of creating and managing campaigns. This powerful tool enables users to efficiently develop and control various campaigns.With an outbound API, users can easily design and execute campaigns, monitor their progress, and make adjustments as needed. The API facilitates seamless integration with existing systems and provides the necessary functionalities for campaign creation, customization, scheduling, and performance tracking.",
// path
"paths": {
    "/campaign-ms/v1/outbound/api/v1/campaign/{tenant_id}/{campaign_id}": {
        "patch": {
            "tags": ["Interactive Campaign", "Broadcast campaign"],
            "summary": "Update Campaign",
            "description": "This API will update the campaign information that is linked with the given campaign ID and tenant ID.",
            "operationId": "patch-outbound-api-v1-campaign-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Campaign"
                        },
                        "example": {
                            "campaign_name": "abcde",
                            "modified_by": "abcd@call-ai.com",
                            "status": "active",
                            "type": "voice"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202"
                            },
                            "example": {
                                "response": "Accepted",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["Interactive Campaign", "Broadcast campaign"],
            "summary": "Delete Campaign",
            "description": "By utilizing the provided campaign ID and tenant ID, this API will remove the campaign that is associated with them.",
            "operationId": "delete-outbound-api-v1-campaign-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202"
                            },
                            "example": {
                                "response": "Accepted",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/campaign/{tenant_id}/{page_size}/{page_index}": {
        "get": {
            "tags": ["Interactive Campaign", "Broadcast campaign"],
            "summary": "Get All Campaigns Information",
            "description": "The get all campaigns Informtion API will retrieve every campaign's information.",
            "operationId": "get-outbound-api-v1-campaign-tenant_id-page_size-page_index",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "page_size",
                "in": "path",
                "description": "The page size parameter will determine the amount of data that we request. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 10
            }, {
                "name": "page_index",
                "in": "path",
                "description": "The page index parameter will specify which page of data is requested required ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 0
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_getAllCampaignInfo"
                            },
                            "example": {
                                "response": "string",
                                "message": {},
                                "data": {
                                    "campaign": {
                                        "count": 0,
                                        "rows": [{
                                            "id": 99,
                                            "campaign_name": "testing campiagn",
                                            "type": "voice",
                                            "status": "pending",
                                            "tenant_id": "tenant_123456",
                                            "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "created_by": "abcd@call-ai.com",
                                            "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "modified_by": "abcd@call-ai.com",
                                            "scheduler": {
                                                "id": "26",
                                                "campaign_id": "99",
                                                "start_time": "2023-04-27T05:39:08.0000000+00:00",
                                                "end_time": "2023-04-27T05:39:08.0000000+00:00",
                                                "timezone_country": "Australia",
                                                "timezone_city": "Sydney",
                                                "weekdays": "monday,tuesday,wednesday,thursday,friday,saturday",
                                                "tenant_id": "tenant_123456",
                                                "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                                "created_by": "abcd@call-ai.com",
                                                "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                                "modified_by": "abcd@call-ai.com"
                                            },
                                            "dialer": {
                                                "id": "20",
                                                "campaign_id": "99",
                                                "ivr_type": "interactive",
                                                "max_retry": "3",
                                                "time_out_dialing": "90000",
                                                "frequency": "5",
                                                "time_btw_retries": "90000",
                                                "bot_key": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829",
                                                "caller_id": "12073000031",
                                                "tenant_id": "tenant_123456",
                                                "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                                "created_by": "abcd@call-ai.com",
                                                "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                                "modified_by": "abcd@call-ai.com",
                                                "broadcast_data": {
                                                    "msg_type": "text",
                                                    "tts_engine": "azure",
                                                    "phrase": "Hi $name , you amount of rupee $amount is pending",
                                                    "tts_voice_name": "en-US-Wavenet-B",
                                                    "language_code": "en-US",
                                                    "language": "English (US)",
                                                    "tts_speed": "1",
                                                    "tts_pitch": "1",
                                                    "gender": "male"
                                                }
                                            }
                                        }]
                                    },
                                    "DRAFT": [{
                                        "id": 0
                                    }]
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/contact-copy": {
        "post": {
            "tags": ["Dialer Base"],
            "summary": "upload Contact in DialerBase By phonebook Id",
            "description": "The upload contact in dialerbase by phonebook ID API retrieves all contacts that are associated with the phonebook ID and then added to the Dialer Basefor outreach purposes.",
            "operationId": "post-outbound-api-v1-dialer-base-contact-copy",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Upload_DialerBase_Contacts_by_Id"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "campaign_id": "123",
                            "email": "abcd@call-ai.com",
                            "phone_book_id": "1"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/contact-upload": {
        "post": {
            "tags": ["Dialer Base"],
            "summary": "Upload Contacts in DialerBase through xlsx file For Outreach",
            "description": "The upload contacts in dialerbase through XLSX API utilize an XLSX file for the uploading of contacts to the Dialer Base to facilitate outreach efforts.",
            "operationId": "post-outbound-api-v1-dialer-base-contact-upload-tenant_id-tenant_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "query",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "properties": {
                                "campaign_id": {
                                    "type": "integer"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "max_retry": {
                                    "enum": ["1", "2", "3"],
                                    "type": "integer"
                                },
                                "pending_to_completed": {
                                    "type": "boolean"
                                },
                                "remove_duplicate": {
                                    "type": "boolean"
                                },
                                "file": {
                                    "type": "file"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/ind-contact-upload": {
        "post": {
            "tags": ["Dialer Base"],
            "summary": "upload Individual Contact in DialerBase",
            "description": "The upload individual contact in dialerbase API uploads a single contact to the Dialer Base for outreach purposes.",
            "operationId": "post-outbound-api-v1-dialer-base-ind-contact-upload",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Upload_Individual_Contact"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "campaign_id": "123",
                            "email": "abcd@call-ai.com",
                            "phone_book_id": "abc",
                            "contact_meta": [{
                                "name": "abcd",
                                "phone_number": "12345678",
                                "dial_out_time": "2023-01-12T13:35:38.0000000+00:00"
                            }]
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/number-status": {
        "patch": {
            "tags": ["Dialer Base"],
            "summary": "Update call status for a Number",
            "description": "The update call status for a number API helps to update the call status of a specific number in the Dialer Base.",
            "operationId": "patch-outbound-api-v1-dialer-base-number-status",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Number_status"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "campaign_id": "123",
                            "phone_number": "1234567",
                            "dial_base_id": "1234",
                            "call_status": "dialing"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/dialouttime": {
        "patch": {
            "tags": ["Dialer Base"],
            "summary": "Update dial out time for a number",
            "description": "The update dial out time for a number API enables the updating of the dial-out time for that number using the ID associated with a number in the dialer base.",
            "operationId": "patch-outbound-api-v1-dialer-base-dialouttime",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Dialout_time"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "campaign_id": "123",
                            "id": "1234",
                            "dial_out_time": "2023-05-23T05:41:18.0000000+00:00"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer-base/{tenant_id}/{campaign_id}": {
        "get": {
            "tags": ["Dialer Base"],
            "summary": "Retrieve All DialerBase Information",
            "description": "The retrieve all dialer base information API facilitates user to obtain the dialer base information that is associated with a given campaign ID and tenant ID.",
            "operationId": "get-outbound-api-v1-dialer-base-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_getDialerInfo"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "rows": [{
                                        "id": "4261",
                                        "phonebook_id": "1",
                                        "source": "xls",
                                        "campaign_id": "123",
                                        "phone_number": "4534535353",
                                        "name": "six",
                                        "tenant_id": "tenant_12345",
                                        "retry_count": "3",
                                        "dial_out_time": "2023-05-23T05:41:18.0000000+00:00",
                                        "call_status": "completed",
                                        "created_at": "2023-04-26T12:25:12.0000000+00:00",
                                        "created_by": "abcd@call-ai.com",
                                        "updated_at": "",
                                        "modified_by": "abcd@call-ai.com"
                                    }],
                                    "count": "42"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/phonebook": {
        "post": {
            "tags": ["PhoneBook  "],
            "summary": "Create PhoneBook",
            "description": "The create phonebook API can create a phone book that contains multiple contacts.",
            "operationId": "post-outbound-api-v1-directory-phonebook",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Create_PhoneBook"
                        },
                        "example": {
                            "phonebook": {
                                "name": "kirat",
                                "description": "singh",
                                "created_by": "abcd@call-ai.com"
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["PhoneBook  "],
            "summary": "Update PhoneBook",
            "description": "This API allows you to make modifications to an existing phone book, such as changing its name and description, by providing the phone book ID.",
            "operationId": "patch-outbound-api-v1-directory-phonebook",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_PhoneBook"
                        },
                        "example": {
                            "phonebook": {
                                "id": "32",
                                "name": "kirat",
                                "description": "singh",
                                "modified_by": "abcd@call-ai.com"
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/phonebook/{tenant_id}/{id}": {
        "get": {
            "tags": ["PhoneBook  "],
            "summary": "Fetch PhoneBook By phoneBook ID",
            "description": "The fetch phonebook by phone ID API facilitates the user to retrieve a single phone book associated with the specified phone book ID and tenant ID.",
            "operationId": "get-outbound-api-v1-directory-phonebook-tenant_id-id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "id",
                "in": "path",
                "description": "The ID is a unique identifier assigned to a specific phonebook upon creation.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_fetchBookById"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "id": "4",
                                    "tenant_id": "tenant_12345",
                                    "name": "Ankitt",
                                    "description": "the Kumar",
                                    "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                    "created_by": "sandeep.rawat@call-ai.com",
                                    "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                    "modified_by": "sandeep.rawat@call-ai.com"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "tags": ["PhoneBook  "],
            "summary": "Delete PhoneBook",
            "description": "Using this API, you can delete a phone book and all contacts associated with the specified phone book ID will also be removed.",
            "operationId": "delete-outbound-api-v1-directory-phonebook-tenant_id-id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "id",
                "in": "path",
                "description": "id is required ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Delete_PhoneBook"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "id": "32"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/phonebook/{tenant_id}/{pageIndex}/{pageSize}": {
        "get": {
            "tags": ["PhoneBook  "],
            "summary": "List PhoneBook",
            "description": "The list phonebook API facilitates user to retrieve all phone books associated with the given tenant ID.",
            "operationId": "get-outbound-api-v1-directory-phonebook-tenant_id-pageindex-pagesize",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "pageIndex",
                "in": "path",
                "description": "The page index parameter will specify which page of data is requested required ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 0
            }, {
                "name": "pageSize",
                "in": "path",
                "description": "The page size parameter will determine the amount of data that we requested ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 10
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_listPhoneBook"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "rows": [{
                                        "id": "4",
                                        "tenant_id": "tenant_12345",
                                        "name": "Ankitt",
                                        "description": "the Kumar",
                                        "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "created_by": "sandeep.rawat@call-ai.com",
                                        "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "modified_by": "sandeep.rawat@call-ai.com"
                                    }],
                                    "count": "12"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/phonebook/search/{key}/{value}/{tenant_id}/{pageIndex}/{pageSize}": {
        "get": {
            "tags": ["PhoneBook  "],
            "summary": "Search PhoneBook",
            "description": "THe search phonebook API facilitates user to search for a phonebook ID based on the given parameters and retrieve it.",
            "operationId": "get-outbound-api-v1-directory-phonebook-search-key-value-tenant_id-pageindex",
            "parameters": [{
                "name": "key",
                "in": "path",
                "description": "Using the key parameter, you can determine the specific key to be used for searching the phonebook through this API. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "name"
            }, {
                "name": "value",
                "in": "path",
                "description": "The value parameter will enable you to specify the value that you want to use for searching the phonebook.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "ankit"
            }, {
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_1234567"
            }, {
                "name": "pageIndex",
                "in": "path",
                "description": "The page index parameter will specify which page of data is requested required ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 0
            }, {
                "name": "pageSize",
                "in": "path",
                "description": "The page size parameter will determine the amount of data that we requested ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 10
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_searchPhoneBook"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "rows": [{
                                        "id": "4",
                                        "tenant_id": "tenant_12345",
                                        "name": "Ankitt",
                                        "description": "the Kumar",
                                        "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "created_by": "sandeep.rawat@call-ai.com",
                                        "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "modified_by": "sandeep.rawat@call-ai.com"
                                    }],
                                    "count": "12"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact": {
        "post": {
            "tags": ["Contact"],
            "summary": "Create Contact",
            "description": "The create contact API allows you to create a new contact within a specific phonebook associated with a given phonebook ID and tenant ID. When the phonebook is uploaded into the campaign, this contact will be included for outreach.",
            "operationId": "post-outbound-api-v1-directory-contact",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Create_Contact"
                        },
                        "example": {
                            "contact": {
                                "phone_book_id": "9",
                                "name": "kirat",
                                "phone_number": "12345677",
                                "metadata": "",
                                "created_by": "abcd@call-ai.com"
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Contact"],
            "summary": "Update Contact",
            "description": " Using this API, you can modify existing contacts associated with a phonebook by changing their name or phone numbers.",
            "operationId": "patch-outbound-api-v1-directory-contact",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Contact"
                        },
                        "example": {
                            "contact": {
                                "contact_id": "24",
                                "name": "kirat",
                                "phone_number": "12345677",
                                "modified_by": "abcd@call-ai.com"
                            },
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact/{tenant_id}/{phonebook_id}/{pageIndex}/{pageSize}": {
        "get": {
            "tags": ["Contact"],
            "summary": "list Contact",
            "description": "The list contact API allows you to list all the contacts that are associated with the provided tenant ID.",
            "operationId": "get-outbound-api-v1-directory-contact-tenant_id-phonebook_id-pageindex-pages",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_1234567"
            }, {
                "name": "phonebook_id",
                "in": "path",
                "description": "Using the phonebookid parameter, you can retrieve the contacts associated with the specified phonebook ID. required ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 4
            }, {
                "name": "pageIndex",
                "in": "path",
                "description": "The page index parameter will specify which page of data is requested required ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 0
            }, {
                "name": "pageSize",
                "in": "path",
                "description": "The page size parameter will determine the amount of data that we requested ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 4
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_listContact"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "rows": [{
                                        "id": "48",
                                        "phone_book_id": "4",
                                        "name": "admin",
                                        "phone_number": "71232928882",
                                        "metadata": "",
                                        "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "created_by": "sandeep.rawat@call-ai.com",
                                        "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "modified_by": "sandeep.rawat@call-ai.com"
                                    }],
                                    "count": "1"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact/byId/{tenant_id}/{contact_id}": {
        "get": {
            "tags": ["Contact"],
            "summary": "Fetch Contact By Id",
            "description": "The fetch contact by ID facilitates user to retrieve a single contact associated with the provided contact ID and tenant ID.",
            "operationId": "get-outbound-api-v1-directory-contact-byid-tenant_id-contact_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_1234567"
            }, {
                "name": "contact_id",
                "in": "path",
                "description": "A contact ID is used as a reference for a single contact with a unique identifier.",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 1
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_fetchContactById"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "id": "48",
                                    "phone_book_id": "4",
                                    "name": "admin",
                                    "phone_number": "71232928882",
                                    "metadata": "",
                                    "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                    "created_by": "sandeep.rawat@call-ai.com",
                                    "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                    "modified_by": "sandeep.rawat@call-ai.com"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact/{tenant_id}/{contact_id}": {
        "delete": {
            "tags": ["Contact"],
            "summary": "Delete Contact",
            "description": "The delete contact API enables user to delete the contact associated with the provided contac",
            "operationId": "delete-outbound-api-v1-directory-contact-tenant_id-contact_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "contact_id",
                "in": "path",
                "description": "A contact ID is used as a reference for a single contact with a unique identifier. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Delete_Contact"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "id": "24"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact/search/{tenant_id}/{phonebook_id}/{key}/{value}/{pageIndex}/{pageSize}": {
        "get": {
            "tags": ["Contact"],
            "summary": "Search Contact",
            "description": "The search contact API can search and retrieve contacts based on the provided parameters.",
            "operationId": "get-outbound-api-v1-directory-contact-search-tenant_id-phonebook_id-key-valu",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each key is requiredtenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_1234567"
            }, {
                "name": "phonebook_id",
                "in": "path",
                "description": "Using the phonebookid parameter, you can retrieve the contacts associated with the specified phonebook ID.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 4
            }, {
                "name": "key",
                "in": "path",
                "description": "Using the key parameter, you can determine the specific key to be used for searching the Contact through this API. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "name"
            }, {
                "name": "value",
                "in": "path",
                "description": "The value parameter will enable you to specify the value that you want to use for searching the Contact.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "admin"
            }, {
                "name": "pageIndex",
                "in": "path",
                "description": "The page index parameter will specify which page of data is requested required ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 0
            }, {
                "name": "pageSize",
                "in": "path",
                "description": "The page size parameter will determine the amount of data that we requested ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 10
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200_searchContact"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "rows": [{
                                        "id": "48",
                                        "phone_book_id": "4",
                                        "name": "admin",
                                        "phone_number": "71232928882",
                                        "metadata": "",
                                        "created_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "created_by": "sandeep.rawat@call-ai.com",
                                        "updated_at": "2022-11-03T10:20:37.0000000+00:00",
                                        "modified_by": "sandeep.rawat@call-ai.com"
                                    }],
                                    "count": "1"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/scheduler/{tenant_id}/{campaign_id}": {
        "patch": {
            "tags": ["Scheduler"],
            "summary": "Update Scheduler",
            "description": "Using this API, you can modify the schedule of a campaign, such as its start and end dates, as well as the days of the week when the campaign will be active. Simply provide the campaign ID and tenant ID along with the updated schedule details to make the changes.",
            "operationId": "patch-outbound-api-v1-scheduler-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Scheduler"
                        },
                        "example": {
                            "tenant_id": "tenant_12345",
                            "modified_by": "abcd@call-ai.com",
                            "timezone": "Australia/sydney",
                            "start_time": "2023-01-11T10:50:51.0000000+00:00",
                            "end_time": "2023-01-15T15:46:27.0000000+00:00",
                            "campaign_id": "99",
                            "weekdays": "monday,tuesday,wednesday,thursday,friday,saturday"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/campaign/create-campaign": {
        "post": {
            "tags": ["Interactive Campaign"],
            "summary": "Create Campaign Scheduler and Dialer",
            "description": "The create campaign scheduler and dialer API have the ability to utilize campaign creation and scheduling features. It allows you to set specific dates, times, and days of the week for your campaigns to run. Additionally, you can integrate a dialer into your campaigns, and even attach a bot that will guide the outreach calls. Furthermore, you can configure the number of retry attempts for situations when customers don't answer the calls.",
            "operationId": "post-outbound-api-v1-campaign-create-campaign",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Create_Overall_Campaign"
                        },
                        "example": {
                            "campaign": {
                                "name": "abcd",
                                "type": "voice"
                            },
                            "dialer": {
                                "max_retry": "3",
                                "time_out_dialing": "90000",
                                "frequency": "5",
                                "time_btw_retries": "10",
                                "bot_key": "abcdefghijk1234567890abcdefghijklmnopqrstuvw",
                                "caller_id": "123455678"
                            },
                            "scheduler": {
                                "timezone": "Australia/sydney",
                                "start_time": "2023-01-11T10:50:51.0000000+00:00",
                                "end_time": "2023-01-15T15:46:27.0000000+00:00",
                                "weekdays": "monday,tuesday,saturday"
                            },
                            "created_by": "abcd@call-ai.com",
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201_create_overall_campaign"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "string",
                                "data": {
                                    "campaign_id": "1"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/directory/contact-upload": {
        "post": {
            "tags": ["Contact"],
            "summary": "upload Directory Contacts through XLSX file.",
            "description": "The upload directory contacts through XLSX filefacilitatesuser to upload multiple contacts associated with a single phonebook through an XLSX file.When the phonebook is uploaded into the campaign, these contacts will be included for outreach.",
            "operationId": "post-outbound-api-v1-directory-contact-upload-tenant_id-tenant_id-phonebook_",
            "parameters": [{
                "name": "tenant_id",
                "in": "query",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "phonebook_id",
                "in": "query",
                "description": "Using the phonebookid parameter, you can retrieve the contacts associated with the specified phonebook ID.",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": 4
            }],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "properties": {
                                "phone_book_id": {
                                    "type": "integer"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "file": {
                                    "type": "file"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/create-voice-broadcast-campaign": {
        "post": {
            "tags": ["Broadcast campaign"],
            "summary": "Create Overall Broadcast Based campaign",
            "description": "With this API, you have the ability to utilize campaign creation and scheduling features. It allows you to set specific dates, times, and days of the week for your campaigns to run. Additionally, you can integrate a dialer into your campaigns, and even attach a bot that will guide the outreach calls. Furthermore, you can configure the number of retry attempts for situations when customers don't answer the calls.",
            "operationId": "post-outbound-api-v1-dialer-create-voice-broadcast-campaign",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Create_Overall_Campaign_For_Broadcast"
                        },
                        "example": {
                            "campaign": {
                                "name": "abcd",
                                "type": "voice"
                            },
                            "dialer": {
                                "max_retry": "3",
                                "time_out_dialing": "90000",
                                "frequency": "5",
                                "time_btw_retries": "10",
                                "caller_id": "123455678"
                            },
                            "scheduler": {
                                "timezone": "Australia/sydney",
                                "start_time": "2023-01-11T10:50:51.0000000+00:00",
                                "end_time": "2023-01-15T15:46:27.0000000+00:00",
                                "weekdays": "monday,tuesday,saturday"
                            },
                            "created_by": "abcd@call-ai.com",
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201_create_overall_campaign_for_broadcast"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "broadcast campaign created Successfully with dialer and scheduler",
                                "data": {
                                    "campaign_id": "1"
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/text-broadcast": {
        "post": {
            "tags": ["Broadcast campaign"],
            "summary": "Create Text Message For Text-Based Broadcast Campaign",
            "description": "Leverage our API to seamlessly integrate and dynamically generate personalized messages for your text-based broadcast campaigns. Customize Text-to-Speech (TTS) settings to deliver engaging and impactful messages to your audience.",
            "operationId": "post-outbound-api-v1-dialer-text-broadcast",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Create_Text_Based_Dialer"
                        },
                        "example": {
                            "tts_engine": "azure",
                            "tts_voice_name": "en-US-Wavenet-B",
                            "language": "English (US)",
                            "language_code": "en-US",
                            "phrase": "Hi $name , you amount of rupee $amount is pending",
                            "tts_speed": "1",
                            "tts_pitch": "1",
                            "gender": "male",
                            "campaign_id": "123",
                            "created_by": "abcd@call-ai.com",
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Broadcast campaign"],
            "summary": "Update Text For Text-Based Broadcast Campaign",
            "description": "Leverage our API to seamlessly integrate and dynamically update personalized messages for your text-based broadcast campaigns. Update your Text-to-Speech (TTS) settings to deliver engaging and impactful messages to your audience.",
            "operationId": "patch-outbound-api-v1-dialer-text-broadcast",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Text_Based_Dialer"
                        },
                        "example": {
                            "tts_engine": "azure",
                            "tts_voice_name": "en-US-Wavenet-B",
                            "language": "English (US)",
                            "language_code": "en-US",
                            "phrase": "Hi $name , you amount of rupee $amount is pending",
                            "tts_speed": "1",
                            "tts_pitch": "1",
                            "campaign_id": "123",
                            "updated_by": "abcd@call-ai.com",
                            "tenant_id": "tenant_12345"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/single-campaign/{tenant_id}/{campaign_id}": {
        "get": {
            "tags": ["Broadcast campaign", "Interactive Campaign"],
            "summary": "Get A Single Campaign Information",
            "description": "By utilizing the campaign ID, the API will retrieve the corresponding campaign information.",
            "operationId": "get-outbound-api-v1-dialer-single-campaign-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [{
                                    "$ref": "#/components/schemas/response_200_getSingleTextBasedBroadcastCampaignInfo"
                                }, {
                                    "$ref": "#/components/schemas/response_200_getSingleInteractiveCampaignInfo"
                                }, {
                                    "$ref": "#/components/schemas/response_200_getSingleVoiceBasedBroadcastCampaignInfo"
                                }]
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": {
                                    "campaign": {
                                        "id": "99",
                                        "campaign_name": "testing campiagn",
                                        "type": "voice",
                                        "status": "pending",
                                        "tenant_id": "tenant_123456",
                                        "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                        "created_by": "abcd@call-ai.com",
                                        "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                        "modified_by": "abcd@call-ai.com",
                                        "dialer": {
                                            "id": "20",
                                            "campaign_id": "99",
                                            "ivr_type": "interactive",
                                            "max_retry": "3",
                                            "time_out_dialing": "90000",
                                            "frequency": "5",
                                            "time_btw_retries": "90000",
                                            "bot_key": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829",
                                            "caller_id": "12073000031",
                                            "tenant_id": "tenant_123456",
                                            "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "created_by": "abcd@call-ai.com",
                                            "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "modified_by": "abcd@call-ai.com",
                                            "broadcast_data": {
                                                "msg_type": "text",
                                                "tts_engine": "azure",
                                                "phrase": "Hi $name , you amount of rupee $amount is pending",
                                                "tts_voice_name": "en-US-Wavenet-B",
                                                "language_code": "en-US",
                                                "language": "English (US)",
                                                "tts_speed": "1",
                                                "tts_pitch": "1",
                                                "gender": "male"
                                            }
                                        },
                                        "scheduler": {
                                            "id": "26",
                                            "campaign_id": "99",
                                            "start_time": "2023-04-27T05:39:08.0000000+00:00",
                                            "end_time": "2023-04-27T05:39:08.0000000+00:00",
                                            "timezone_country": "Australia",
                                            "timezone_city": "Sydney",
                                            "weekdays": "monday,tuesday,wednesday,thursday,friday,saturday",
                                            "tenant_id": "tenant_123456",
                                            "created_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "created_by": "abcd@call-ai.com",
                                            "updated_at": "2023-04-27T05:39:08.0000000+00:00",
                                            "modified_by": "abcd@call-ai.com"
                                        }
                                    }
                                },
                                "error": {}
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/voice-broadcast/{tenant_id}/{campaign_id}": {
        "post": {
            "tags": ["Broadcast campaign"],
            "summary": "Upload Recorded Audio Message",
            "description": "With this API, you have the capability to upload a recorded message For Your Broadcast Campaign and initiate a broadcast campaign to deliver the given message to the intended recipients.",
            "operationId": "post-outbound-api-v1-dialer-voice-broadcast-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "properties": {
                                "file": {
                                    "type": "file"
                                },
                                "campaign_id": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "tenant_id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["Broadcast campaign"],
            "summary": "Update Recorded Audio Message",
            "description": "With this API, you have the capability to Update a recorded message for your broadcast campaign and initiate a broadcast campaign to deliver the given message to the intended recipients.",
            "operationId": "patch-outbound-api-v1-dialer-voice-broadcast-tenant_id-campaign_id",
            "parameters": [{
                "name": "tenant_id",
                "in": "path",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance. ",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "tenant_12345"
            }, {
                "name": "campaign_id",
                "in": "path",
                "description": "When a new campaign is created, a campaign ID is assigned to it. ",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": 123
            }],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "properties": {
                                "file": {
                                    "type": "file"
                                },
                                "campaign_id": {
                                    "type": "integer"
                                },
                                "updated_by": {
                                    "type": "string"
                                },
                                "tenant_id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/update-broadcast-dialer": {
        "patch": {
            "tags": ["Dialer  "],
            "summary": "Update Broadcast Based Dailer",
            "description": "Using this API, you can modify an existing Broadcast Based dialer by specifying the number of retry attempts to be made when a customer is not answering.",
            "operationId": "patch-outbound-api-v1-dialer-update-broadcast-dialer",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Broadcast_Based_Dialer"
                        },
                        "example": {
                            "max_retry": "2",
                            "time_out_dialing": "90000",
                            "frequency": "5",
                            "time_btw_retries": "10",
                            "caller_id": "12073000031",
                            "tenant_id": "tenant_12345",
                            "campaign_id": "99",
                            "modified_by": "abcd@call-ai.com"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202"
                            },
                            "example": {
                                "response": "Accepted",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "/campaign-ms/v1/outbound/api/v1/dialer/update-interactive-dialer": {
        "patch": {
            "tags": ["Dialer  "],
            "summary": "Update Interactive Based Dailer",
            "description": "Using this API, you can modify an existing Interactive Based dialer by changing the attached bot for a campaign and specifying the number of retry attempts to be made when a customer is not answering.",
            "operationId": "patch-outbound-api-v1-dialer-update-interactive-dialer",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Update_Interactive_Based_Dialer"
                        },
                        "example": {
                            "ivr_type": "interactive",
                            "max_retry": "2",
                            "time_out_dialing": "90000",
                            "frequency": "5",
                            "time_btw_retries": "10",
                            "bot_key": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829",
                            "caller_id": "12073000031",
                            "tenant_id": "tenant_12345",
                            "campaign_id": "99",
                            "modified_by": "abcd@call-ai.com"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "OK",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_200"
                            },
                            "example": {
                                "response": "SUCCESS",
                                "message": "",
                                "data": "",
                                "error": "{}"
                            }
                        }
                    }
                },
                "201": {
                    "description": "CREATED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_201"
                            },
                            "example": {
                                "response": "Created",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "202": {
                    "description": "ACCEPTED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_202"
                            },
                            "example": {
                                "response": "Accepted",
                                "message": "",
                                "data": "{}",
                                "error": "{}"
                            }
                        }
                    }
                },
                "204": {
                    "description": "NO_CONTENT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_204"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "BAD_REQUEST",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_400"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 400,
                                    "example": "BAD_REQUEST",
                                    "message": "required parameters missing or invalid"
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "UNAUTHORIZED",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "FORBIDDEN",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_401"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 401,
                                    "example": "UNAUTHORIZED",
                                    "message": "invalid authentication data"
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "NOT_FOUND",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_404"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 404,
                                    "example": "NOT_FOUND",
                                    "message": "requested resource not available"
                                }
                            }
                        }
                    }
                },
                "409": {
                    "description": "CONFLICT",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_409"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 409,
                                    "example": "CONFLICT",
                                    "message": "conflict has been occurred"
                                }
                            }
                        }
                    }
                },
                "500": {
                    "description": "INTERNAL_SERVER_ERROR",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_500"
                            },
                            "example": {
                                "response": "Internal server error occurred",
                                "error": {
                                    "code": 500,
                                    "example": "INTERNAL_SERVER_ERROR",
                                    "message": "Internal server error occurred"
                                }
                            }
                        }
                    }
                },
                "503": {
                    "description": "SERVICE_UNAVAILABLE",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/response_503"
                            },
                            "example": {
                                "response": "FAILED",
                                "error": {
                                    "code": 503,
                                    "example": "SERVICE_UNAVAILABLE",
                                    "message": "Currently this Service is Unavailable"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
// schema
"schemas": {
    "Create_Overall_Campaign": {
        "required": ["campaign", "dialer", "scheduler", "created_by", "tenant_id"],
        "type": "object",
        "properties": {
            "campaign": {
                "required": ["name", "status", "type"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a campaign when it is created.",
                        "example": "abcd"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type parameter refers to the category or type of campaign.",
                        "example": "voice"
                    }
                }
            },
            "dialer": {
                "required": ["max_retry", "time_out_dialing", "frequency", "time_btw_retries", "bot_key", "caller_id"],
                "type": "object",
                "properties": {
                    "max_retry": {
                        "enum": ["0", "1", "2"],
                        "type": "string",
                        "description": "The max retry parameter refers to the maximum number of times that the system will attempt to reach out to a contact.",
                        "example": "3"
                    },
                    "time_out_dialing": {
                        "enum": ["30000", "60000", "90000"],
                        "type": "string",
                        "description": "Time out dialing refers to the duration for which the phone will ring before the call is considered unanswered.",
                        "example": "90000"
                    },
                    "frequency": {
                        "enum": ["5", "10", "15", "20", "25", "30"],
                        "type": "string",
                        "description": "Frequency refers to the number of calls that can be made per minute and can be adjusted during the campaign without interrupting it.",
                        "example": "5"
                    },
                    "time_btw_retries": {
                        "enum": ["10", "20", "30", "40", "50"],
                        "type": "string",
                        "description": "Time Between Retries refers to the duration between attempts to call the same phone number again.",
                        "example": "10"
                    },
                    "bot_key": {
                        "type": "string",
                        "description": "Bot key refers to the identifier for the bot that is associated with the campaign and used for outreach.",
                        "example": "abcdefghijk1234567890abcdefghijklmnopqrstuvw"
                    },
                    "caller_id": {
                        "type": "string",
                        "description": "Caller ID refers to the phone number that is attached to the campaign",
                        "example": "123455678"
                    }
                }
            },
            "scheduler": {
                "required": ["timezone", "start_time", "end_time", "weekdays"],
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "A time zone is a designated area with the same standard time. It helps coordinate schedules and activities across different regions by establishing a common reference for timekeeping.",
                        "example": "Australia/sydney"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "The start time parameter specifies the exact time when the campaign will begin.",
                        "example": "2023-01-11 10:50:51"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "The End time parameter specifies the exact time when the campaign will End.",
                        "example": "2023-01-15 15:46:27"
                    },
                    "weekdays": {
                        "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                        "type": "string",
                        "description": "Weekdays parameter refers to the specific days of the week on which a campaign will run.",
                        "example": "monday,tuesday,saturday"
                    }
                }
            },
            "created_by": {
                "type": "string",
                "description": "Created by refers to the email address that was used to create Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_Campaign": {
        "required": ["campaign_name", "modified_by", "status", "type"],
        "type": "object",
        "properties": {
            "campaign_name": {
                "type": "string",
                "description": "The campaign_name parameter refers to the title given to a campaign when it is getting updated",
                "example": "abcde"
            },
            "modified_by": {
                "type": "string",
                "description": "Created by refers to the email address that is used to modify the Campaign",
                "example": "abcd@call-ai.com"
            },
            "status": {
                "enum": ["active", "inactive"],
                "type": "string",
                "description": "Status refers to the current state of the campaign.",
                "example": "active"
            },
            "type": {
                "type": "string",
                "description": "The type parameter refers to the category or type of campaign.",
                "example": "voice"
            }
        }
    },
    "Upload_DialerBase_Contacts_by_Id": {
        "required": ["campaign_id", "email", "phone_book_id", "tenant_id"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "123"
            },
            "email": {
                "type": "string",
                "description": "Email refers to the email address that is used to upload DialerBase Contacts by Id",
                "example": "abcd@call-ai.com"
            },
            "phone_book_id": {
                "type": "string",
                "description": "Phonebook ID refers to the unique identifier of a phonebook that contains contacts.",
                "example": "1"
            }
        }
    },
    "Upload_DialerBase_Contact": {
        "required": ["campaign_id", "email", "max_retry", "pending_to_completed", "remove_duplicate", "file"],
        "type": "object",
        "properties": {
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "123"
            },
            "email": {
                "type": "string",
                "description": "Email refers to the email address that is used to upload DialerBase Contacts",
                "example": "abcd@call-ai.com"
            },
            "max_retry": {
                "enum": ["1", "2", "3"],
                "type": "integer",
                "description": "The max retry parameter refers to the maximum number of times that the system will attempt to reach out to a contact.",
                "example": "1"
            },
            "pending_to_completed": {
                "type": "boolean",
                "description": "The pending to complete flag updates the status of contacts from pending to complete if the same contacts are uploaded in a campaign multiple times.",
                "example": "true"
            },
            "remove_duplicate": {
                "type": "boolean",
                "description": "The purpose of removing duplicates in outbound campaigns is to ensure that the same contact is not called multiple times during a single campaign.",
                "example": "true"
            },
            "file": {
                "type": "file",
                "description": "This file Contains all the Contacts that will be uploaded to the Dialerbase",
                "format": "binary"
            }
        }
    },
    "Upload_Individual_Contact": {
        "required": ["campaign_id", "email", "phone_book_id", "tenant_id", "contact_meta"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "123"
            },
            "email": {
                "type": "string",
                "description": "Email refers to the email address that is used to upload DialerBase Contacts",
                "example": "abcd@call-ai.com"
            },
            "phone_book_id": {
                "type": "string",
                "description": "Phonebook ID refers to the unique identifier of a phonebook that contains contacts.",
                "example": "abc"
            },
            "contact_meta": {
                "type": "array",
                "items": {
                    "required": ["name", "email", "phone_number", "dial_out_time"],
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name parameter refers to the title given to a contact when it is uploaded.",
                            "example": "abcd"
                        },
                        "phone_number": {
                            "type": "string",
                            "description": "Phone number refers used to specify the phone number for the outreach process.",
                            "example": "12345678"
                        },
                        "dial_out_time": {
                            "type": "string",
                            "description": "Dial out time refers to the specific time at which an outreach will be performed.",
                            "format": "date-time",
                            "example": "2023-01-12T13:35:38.0000000+00:00"
                        }
                    }
                }
            }
        }
    },
    "Update_Number_status": {
        "required": ["tenant_id", "campaign_id", "phone_number", "dial_base_id", "call_status"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "123"
            },
            "phone_number": {
                "type": "string",
                "description": "Phone number refers used to specify the phone number for the outreach process.",
                "example": "1234567"
            },
            "dial_base_id": {
                "type": "integer",
                "description": "The dialer base ID is a unique identifier that is used to refer to a specific dialer base.",
                "example": "1234"
            },
            "call_status": {
                "enum": ["dialing", "completed", "pending"],
                "type": "string",
                "description": "call_status refers to the current state of the Number.",
                "example": "dialing"
            }
        }
    },
    "Update_Dialout_time": {
        "required": ["tenant_id", "campaign_id", "id", "dial_out_time"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "123"
            },
            "id": {
                "type": "integer",
                "description": "The ID is a unique identifier that is used to refer to a specific dialer base.",
                "example": "1234"
            },
            "dial_out_time": {
                "type": "string",
                "format": "date-time",
                "example": "2023-05-23T05:41:18.0000000+00:00"
            }
        }
    },
    "Create_PhoneBook": {
        "required": ["phonebook", "tenant_id"],
        "type": "object",
        "properties": {
            "phonebook": {
                "required": ["name", "description", "created_by"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a PhoneBook when it is created.",
                        "example": "kirat"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description  refers to the description given to a PhoneBook when it is created.",
                        "example": "singh"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created by refers to the email address that was used to create Phonebook",
                        "example": "abcd@call-ai.com"
                    }
                },
                "description": "A phonebook refers to an object that contains all the data related to the phone numbers."
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_PhoneBook": {
        "required": ["phonebook", "tenant_id"],
        "type": "object",
        "properties": {
            "phonebook": {
                "required": ["id", "name", "description", "modified_by"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID is a unique identifier assigned to a specific phonebook upon creation.",
                        "example": "32"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a PhoneBook when it is created.",
                        "example": "kirat"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description  refers to the description given to a PhoneBook when it is created.",
                        "example": "singh"
                    },
                    "modified_by": {
                        "type": "string",
                        "description": "Modified by refers to the email address that was used to modify phonebook",
                        "example": "abcd@call-ai.com"
                    }
                },
                "description": "A phonebook refers to an object that contains all the data related to the phone numbers."
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Delete_PhoneBook": {
        "required": ["id", "tenant_id"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "id": {
                "type": "string",
                "description": "The ID is a unique identifier assigned to a specific phonebook upon creation.",
                "example": "32"
            }
        }
    },
    "Create_Contact": {
        "required": ["contact", "tenant_id"],
        "type": "object",
        "properties": {
            "contact": {
                "required": ["phone_book_id", "name", "phone_number", "created_by", "metadata"],
                "type": "object",
                "properties": {
                    "phone_book_id": {
                        "type": "integer",
                        "description": "The Phone Book ID is a unique identifier assigned to a specific phonebook upon creation.",
                        "example": "9"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a contact when it is created.",
                        "example": "kirat"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "The term phone number refers to the specific contact that is being targeted for outreach purposes.",
                        "example": "12345677"
                    },
                    "metadata": {
                        "type": "string",
                        "example": ""
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created by refers to the email address that was used to create Contact",
                        "example": "abcd@call-ai.com"
                    }
                }
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_Contact": {
        "required": ["contact", "tenant_id"],
        "type": "object",
        "properties": {
            "contact": {
                "required": ["contact_id", "name", "phone_number", "modified_by"],
                "type": "object",
                "properties": {
                    "contact_id": {
                        "type": "integer",
                        "description": "A contact ID refers to the unique identifier which is assigned to each contact upon its creation.",
                        "example": "24"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a contact when it is created.",
                        "example": "kirat"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "The term phone number refers to the specific contact that is being targeted for outreach purposes.",
                        "example": "12345677"
                    },
                    "modified_by": {
                        "type": "string",
                        "description": "Modified by refers to the email address that was used to Update Contact",
                        "example": "abcd@call-ai.com"
                    }
                }
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "upload_Directory_Contacts": {
        "required": ["phone_book_id", "email", "file"],
        "type": "object",
        "properties": {
            "phone_book_id": {
                "type": "integer",
                "description": "The phone book ID is a unique identifier assigned to a specific phonebook upon creation, which will be used here to upload contact to the specific phonebook",
                "example": "42"
            },
            "email": {
                "type": "string",
                "description": "Email refers to the email address that is used to upload Contacts",
                "example": "abcd@call-ai.com"
            },
            "file": {
                "type": "file",
                "description": "This file Contains all the Contacts that will be uploaded to the phoneBook",
                "format": "binary"
            }
        }
    },
    "Delete_Contact": {
        "required": ["tenant_id", "id"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "id": {
                "type": "string",
                "description": "A ID refers to the unique identifier which is assigned to each contact upon its creation.",
                "example": "24"
            }
        }
    },
    "Update_Scheduler": {
        "required": ["tenant_id", "modified_by", "timezone", "start_time", "end_time", "campaign_id", "weekdays"],
        "type": "object",
        "properties": {
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "modified_by": {
                "type": "string",
                "description": "Modified by refers to the email address that was used to Update Scheduler",
                "example": "abcd@call-ai.com"
            },
            "timezone": {
                "type": "string",
                "description": "A time zone is a designated area with the same standard time. It helps coordinate schedules and activities across different regions by establishing a common reference for timekeeping.",
                "example": "Australia/sydney"
            },
            "start_time": {
                "type": "string",
                "description": "The start time parameter specifies the exact time when the campaign will begin.",
                "format": "date-time",
                "example": "2023-01-11T10:50:51.0000000+00:00"
            },
            "end_time": {
                "type": "string",
                "description": "The End time parameter specifies the exact time when the campaign will End.",
                "format": "date-time",
                "example": "2023-01-15T15:46:27.0000000+00:00"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "99"
            },
            "weekdays": {
                "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                "type": "string",
                "description": "Weekdays parameter refers to the specific days of the week on which a campaign will run.",
                "example": "monday,tuesday,wednesday,thursday,friday,saturday"
            }
        }
    },
    "Create_Overall_Campaign_For_Broadcast": {
        "required": ["campaign", "dialer", "scheduler", "created_by", "tenant_id"],
        "type": "object",
        "properties": {
            "campaign": {
                "required": ["name", "status", "type"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name parameter refers to the title given to a campaign when it is created.",
                        "example": "abcd"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type parameter refers to the category or type of campaign.",
                        "example": "voice"
                    }
                }
            },
            "dialer": {
                "required": ["max_retry", "time_out_dialing", "frequency", "time_btw_retries", "caller_id"],
                "type": "object",
                "properties": {
                    "max_retry": {
                        "enum": ["0", "1", "2"],
                        "type": "string",
                        "description": "The max retry parameter refers to the maximum number of times that the system will attempt to reach out to a contact.",
                        "example": "3"
                    },
                    "time_out_dialing": {
                        "enum": ["30000", "60000", "90000"],
                        "type": "string",
                        "description": "Time out dialing refers to the duration for which the phone will ring before the call is considered unanswered.",
                        "example": "90000"
                    },
                    "frequency": {
                        "enum": ["5", "10", "15", "20", "25", "30"],
                        "type": "string",
                        "description": "Frequency refers to the number of calls that can be made per minute and can be adjusted during the campaign without interrupting it.",
                        "example": "5"
                    },
                    "time_btw_retries": {
                        "enum": ["10", "20", "30", "40", "50"],
                        "type": "string",
                        "description": "Time Between Retries refers to the duration between attempts to call the same phone number again.",
                        "example": "10"
                    },
                    "caller_id": {
                        "type": "string",
                        "description": "Caller ID refers to the phone number that is attached to the campaign",
                        "example": "123455678"
                    }
                }
            },
            "scheduler": {
                "required": ["timezone", "start_time", "end_time", "weekdays"],
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "A time zone is a designated area with the same standard time. It helps coordinate schedules and activities across different regions by establishing a common reference for timekeeping.",
                        "example": "Australia/sydney"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "The start time parameter specifies the exact time when the campaign will begin.",
                        "example": "2023-01-11 10:50:51"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "The End time parameter specifies the exact time when the campaign will End.",
                        "example": "2023-01-15 15:46:27"
                    },
                    "weekdays": {
                        "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                        "type": "string",
                        "description": "Weekdays parameter refers to the specific days of the week on which a campaign will run.",
                        "example": "monday,tuesday,saturday"
                    }
                }
            },
            "created_by": {
                "type": "string",
                "description": "Created by refers to the email address that was used to create Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Create_Text_Based_Dialer": {
        "required": ["campaign_id", "tts_engine", "phrase", "tts_voice_name", "created_by", "tenant_id", "language", "language_code", "gender"],
        "type": "object",
        "properties": {
            "tts_engine": {
                "enum": ["azure", "google", "polly"],
                "type": "string",
                "description": "The parameter tts_voice_name allows you to specify the desired voice name for text-to-speech conversion.",
                "example": "azure"
            },
            "tts_voice_name": {
                "type": "string",
                "description": "The parameter tts_voice_name allows you to specify the desired voice name for text-to-speech conversion.",
                "example": "en-US-Wavenet-B"
            },
            "language": {
                "type": "string",
                "description": "The language parameter specifies the desired language for the text-to-speech (TTS) output. It allows you to choose the specific language in which you want the TTS engine to generate the audio.",
                "example": "English (US)"
            },
            "language_code": {
                "type": "string",
                "description": "TThe language code parameter allows you to specify the code corresponding to the desired language for the text-to-speech (TTS) output. This code represents the specific language you want the TTS engine to use when generating the audio.",
                "example": "en-US"
            },
            "phrase": {
                "type": "string",
                "description": "The phrase parameter in our API empowers you to precisely convey the message you want to communicate through your broadcast campaign.",
                "example": "Hi $name , you amount of rupee $amount is pending"
            },
            "tts_speed": {
                "type": "integer",
                "description": "The tts_speed parameter is used to control the speed of the text-to-speech (TTS) output. Please note that this parameter is typically applicable when using specific TTS engines like Google TTS. If you choose Google TTS as your preferred engine, you can utilize the tts_speed parameter to adjust the speed of the generated speech according to your preference",
                "example": "1"
            },
            "tts_pitch": {
                "type": "integer",
                "description": "TThe tts_pitch parameter is responsible for controlling the pitch of the text-to-speech (TTS) output. It should be noted that this parameter is specifically applicable when using certain TTS engines like Google TTS.",
                "example": "1"
            },
            "gender": {
                "enum": ["male", "female"],
                "description": "The gender parameter determines the desired gender of the text-to-speech (TTS) output. It allows you to select the preferred male or female voice characteristics when using specific TTS engines."
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance",
                "example": "123"
            },
            "created_by": {
                "type": "string",
                "description": "Created by refers to the email address that was used to create Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_Text_Based_Dialer": {
        "required": ["campaign_id", "tts_engine", "phrase", "tts_voice_name", "updated_by", "tenant_id", "language", "language_code", "gender"],
        "type": "object",
        "properties": {
            "tts_engine": {
                "enum": ["azure", "google", "polly"],
                "type": "string",
                "description": "The parameter tts_voice_name allows you to specify the desired voice name for text-to-speech conversion.",
                "example": "azure"
            },
            "tts_voice_name": {
                "type": "string",
                "description": "The parameter tts_voice_name allows you to specify the desired voice name for text-to-speech conversion.",
                "example": "en-US-Wavenet-B"
            },
            "language": {
                "type": "string",
                "description": "The language parameter specifies the desired language for the text-to-speech (TTS) output. It allows you to choose the specific language in which you want the TTS engine to generate the audio.",
                "example": "English (US)"
            },
            "language_code": {
                "type": "string",
                "description": "TThe language code parameter allows you to specify the code corresponding to the desired language for the text-to-speech (TTS) output. This code represents the specific language you want the TTS engine to use when generating the audio.",
                "example": "en-US"
            },
            "phrase": {
                "type": "string",
                "description": "The phrase parameter in our API empowers you to precisely convey the message you want to communicate through your broadcast campaign.",
                "example": "Hi $name , you amount of rupee $amount is pending"
            },
            "tts_speed": {
                "type": "integer",
                "description": "The tts_speed parameter is used to control the speed of the text-to-speech (TTS) output. Please note that this parameter is typically applicable when using specific TTS engines like Google TTS. If you choose Google TTS as your preferred engine, you can utilize the tts_speed parameter to adjust the speed of the generated speech according to your preference",
                "example": "1"
            },
            "tts_pitch": {
                "type": "integer",
                "description": "TThe tts_pitch parameter is responsible for controlling the pitch of the text-to-speech (TTS) output. It should be noted that this parameter is specifically applicable when using certain TTS engines like Google TTS.",
                "example": "1"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance",
                "example": "123"
            },
            "updated_by": {
                "type": "string",
                "description": "Updated by refers to the email address that was used to update Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Create_Recorded_Based_Dialer": {
        "required": ["file", "campaign_id", "created_by", "tenant_id"],
        "type": "object",
        "properties": {
            "file": {
                "type": "file",
                "description": "This file contains a pre-recorded message that the user wishes to broadcast.",
                "format": "binary"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance",
                "example": "123"
            },
            "created_by": {
                "type": "string",
                "description": "Created by refers to the email address that was used to create Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_Recorded_Based_Dialer": {
        "required": ["campaign_id", "Updated_by", "tenant_id"],
        "type": "object",
        "properties": {
            "file": {
                "type": "file",
                "description": "This file contains a pre-recorded message that the user wishes to broadcast.",
                "format": "binary"
            },
            "campaign_id": {
                "type": "integer",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance",
                "example": "123"
            },
            "updated_by": {
                "type": "string",
                "description": "Updated by refers to the email address that was used to Update Campaign",
                "example": "abcd@call-ai.com"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            }
        }
    },
    "Update_Broadcast_Based_Dialer": {
        "required": ["max_retry", "time_out_dialing", "frequency", "time_btw_retries", "caller_id", "tenant_id", "campaign_id", "modified_by"],
        "type": "object",
        "properties": {
            "max_retry": {
                "enum": ["0", "1", "2"],
                "type": "string",
                "description": "The max retry parameter refers to the maximum number of times that the system will attempt to reach out to a contact.",
                "example": "2"
            },
            "time_out_dialing": {
                "enum": ["30000", "60000", "90000"],
                "type": "string",
                "description": "Time out dialing refers to the duration for which the phone will ring before the call is considered unanswered.",
                "example": "90000"
            },
            "frequency": {
                "enum": ["5", "10", "15", "20", "25", "30"],
                "type": "string",
                "description": "Frequency refers to the number of calls that can be made per minute and can be adjusted during the campaign without interrupting it.",
                "example": "5"
            },
            "time_btw_retries": {
                "enum": ["10", "20", "30", "40", "50"],
                "type": "string",
                "description": "Time Between Retries refers to the duration between attempts to call the same phone number again.",
                "example": "10"
            },
            "caller_id": {
                "type": "string",
                "description": "Caller ID refers to the phone number that is attached to the campaign",
                "example": "12073000031"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "string",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "99"
            },
            "modified_by": {
                "type": "string",
                "description": "Modified by refers to the email address that was used to modify Dialer",
                "example": "abcd@call-ai.com"
            }
        }
    },
    "Update_Interactive_Based_Dialer": {
        "required": ["max_retry", "time_out_dialing", "frequency", "time_btw_retries", "bot_key", "caller_id", "tenant_id", "campaign_id", "modified_by"],
        "type": "object",
        "properties": {
            "ivr_type": {
                "type": "string",
                "description": "The IVR type is used to specify the type of communication desired.",
                "example": "interactive"
            },
            "max_retry": {
                "enum": ["0", "1", "2"],
                "type": "string",
                "description": "The max retry parameter refers to the maximum number of times that the system will attempt to reach out to a contact.",
                "example": "2"
            },
            "time_out_dialing": {
                "enum": ["30000", "60000", "90000"],
                "type": "string",
                "description": "Time out dialing refers to the duration for which the phone will ring before the call is considered unanswered.",
                "example": "90000"
            },
            "frequency": {
                "enum": ["5", "10", "15", "20", "25", "30"],
                "type": "string",
                "description": "Frequency refers to the number of calls that can be made per minute and can be adjusted during the campaign without interrupting it.",
                "example": "5"
            },
            "time_btw_retries": {
                "enum": ["10", "20", "30", "40", "50"],
                "type": "string",
                "description": "Time Between Retries refers to the duration between attempts to call the same phone number again.",
                "example": "10"
            },
            "bot_key": {
                "type": "string",
                "description": "Bot key refers to the identifier for the bot that is associated with the campaign and used for outreach.",
                "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829"
            },
            "caller_id": {
                "type": "string",
                "description": "Caller ID refers to the phone number that is attached to the campaign",
                "example": "12073000031"
            },
            "tenant_id": {
                "type": "string",
                "description": "A tenant ID is used to associate each tenant's data with their specific account or instance.",
                "example": "tenant_12345"
            },
            "campaign_id": {
                "type": "string",
                "description": "A campaign ID is used to associate each campaign's data with their specific account or instance.",
                "example": "99"
            },
            "modified_by": {
                "type": "string",
                "description": "Modified by refers to the email address that was used to modify Dialer",
                "example": "abcd@call-ai.com"
            }
        }
    },
    "response_201_create_overall_campaign": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client."
            },
            "data": {
                "type": "object",
                "properties": {
                    "campaign_id": {
                        "type": "string",
                        "example": "1"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_getAllCampaignInfo": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string"
            },
            "message": {},
            "data": {
                "type": "object",
                "properties": {
                    "campaign": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer"
                            },
                            "rows": {
                                "type": "array",
                                "items": {
                                    "required": ["id", "campaign_name", "type", "status", "tenant_id", "created_at", "created_by", "updated_at", "modified_by", "scheduler", "dialer"],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 99
                                        },
                                        "campaign_name": {
                                            "type": "string",
                                            "example": "testing campiagn"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "voice"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "tenant_id": {
                                            "type": "string",
                                            "example": "tenant_123456"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2023-04-27T05:39:08Z"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "abcd@call-ai.com"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2023-04-27T05:39:08Z"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "abcd@call-ai.com"
                                        },
                                        "scheduler": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "26"
                                                },
                                                "campaign_id": {
                                                    "type": "string",
                                                    "example": "99"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "timezone_country": {
                                                    "type": "string",
                                                    "example": "Australia"
                                                },
                                                "timezone_city": {
                                                    "type": "string",
                                                    "example": "Sydney"
                                                },
                                                "weekdays": {
                                                    "type": "string",
                                                    "example": "monday,tuesday,wednesday,thursday,friday,saturday"
                                                },
                                                "tenant_id": {
                                                    "type": "string",
                                                    "example": "tenant_123456"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "created_by": {
                                                    "type": "string",
                                                    "example": "abcd@call-ai.com"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "modified_by": {
                                                    "type": "string",
                                                    "example": "abcd@call-ai.com"
                                                }
                                            }
                                        },
                                        "dialer": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "20"
                                                },
                                                "campaign_id": {
                                                    "type": "string",
                                                    "example": "99"
                                                },
                                                "ivr_type": {
                                                    "type": "string",
                                                    "example": "interactive"
                                                },
                                                "max_retry": {
                                                    "type": "integer",
                                                    "example": "3"
                                                },
                                                "time_out_dialing": {
                                                    "type": "integer",
                                                    "example": "90000"
                                                },
                                                "frequency": {
                                                    "type": "integer",
                                                    "example": "5"
                                                },
                                                "time_btw_retries": {
                                                    "type": "integer",
                                                    "example": "90000"
                                                },
                                                "bot_key": {
                                                    "type": "string",
                                                    "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829"
                                                },
                                                "caller_id": {
                                                    "type": "string",
                                                    "example": "12073000031"
                                                },
                                                "tenant_id": {
                                                    "type": "string",
                                                    "example": "tenant_123456"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "created_by": {
                                                    "type": "string",
                                                    "example": "abcd@call-ai.com"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-04-27T05:39:08Z"
                                                },
                                                "modified_by": {
                                                    "type": "string",
                                                    "example": "abcd@call-ai.com"
                                                },
                                                "broadcast_data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "msg_type": {
                                                            "type": "string",
                                                            "example": "text"
                                                        },
                                                        "tts_engine": {
                                                            "enum": ["azure", "google", "polly"],
                                                            "type": "string"
                                                        },
                                                        "phrase": {
                                                            "type": "string",
                                                            "example": "Hi $name , you amount of rupee $amount is pending"
                                                        },
                                                        "tts_voice_name": {
                                                            "type": "string",
                                                            "example": "en-US-Wavenet-B"
                                                        },
                                                        "language_code": {
                                                            "type": "string",
                                                            "example": "en-US"
                                                        },
                                                        "language": {
                                                            "type": "string",
                                                            "example": "English (US)"
                                                        },
                                                        "tts_speed": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "tts_pitch": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "gender": {
                                                            "enum": ["male", "female"]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "DRAFT": {
                        "type": "array",
                        "items": {
                            "required": ["id"],
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_getDialerInfo": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "4261"
                                },
                                "phonebook_id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "xls"
                                },
                                "campaign_id": {
                                    "type": "integer",
                                    "example": "123"
                                },
                                "phone_number": {
                                    "type": "integer",
                                    "example": "4534535353"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "six"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "example": "tenant_12345"
                                },
                                "retry_count": {
                                    "type": "string",
                                    "example": "3"
                                },
                                "dial_out_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-05-23T05:41:18.0000000+00:00"
                                },
                                "call_status": {
                                    "type": "string",
                                    "example": "completed"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-04-26T12:25:12.0000000+00:00"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "abcd@call-ai.com"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "abcd@call-ai.com"
                                }
                            }
                        }
                    },
                    "count": {
                        "type": "integer",
                        "example": "42"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_fetchBookById": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "4"
                    },
                    "tenant_id": {
                        "type": "string",
                        "example": "tenant_12345"
                    },
                    "name": {
                        "type": "string",
                        "example": "Ankitt"
                    },
                    "description": {
                        "type": "string",
                        "example": "the Kumar"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-11-03T10:20:37.0000000+00:00"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "sandeep.rawat@call-ai.com"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-11-03T10:20:37.0000000+00:00"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "sandeep.rawat@call-ai.com"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_listPhoneBook": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "4"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "example": "tenant_12345"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Ankitt"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "the Kumar"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                }
                            }
                        }
                    },
                    "count": {
                        "type": "integer",
                        "example": "12"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_searchPhoneBook": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "4"
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "example": "tenant_12345"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Ankitt"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "the Kumar"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                }
                            }
                        }
                    },
                    "count": {
                        "type": "integer",
                        "example": "12"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_searchContact": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "48"
                                },
                                "phone_book_id": {
                                    "type": "string",
                                    "example": "4"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "admin"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "example": "71232928882"
                                },
                                "metadata": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                }
                            }
                        }
                    },
                    "count": {
                        "type": "integer",
                        "example": "1"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_listContact": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "48"
                                },
                                "phone_book_id": {
                                    "type": "string",
                                    "example": "4"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "admin"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "example": "71232928882"
                                },
                                "metadata": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-11-03T10:20:37.0000000+00:00"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "sandeep.rawat@call-ai.com"
                                }
                            }
                        }
                    },
                    "count": {
                        "type": "integer",
                        "example": "1"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_fetchContactById": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "description": "Message represents the content that is being transmitted from  the server to the client.",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "48"
                    },
                    "phone_book_id": {
                        "type": "string",
                        "example": "4"
                    },
                    "name": {
                        "type": "string",
                        "example": "admin"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "71232928882"
                    },
                    "metadata": {
                        "type": "string",
                        "example": ""
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-11-03T10:20:37.0000000+00:00"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "sandeep.rawat@call-ai.com"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-11-03T10:20:37.0000000+00:00"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "sandeep.rawat@call-ai.com"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_getSingleInteractiveCampaignInfo": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "campaign": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "99"
                            },
                            "campaign_name": {
                                "type": "string",
                                "example": "testing campiagn"
                            },
                            "type": {
                                "type": "string",
                                "example": "voice"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "tenant_id": {
                                "type": "string",
                                "example": "tenant_123456"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "created_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "modified_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "dialer": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "20"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "ivr_type": {
                                        "type": "string",
                                        "example": "interactive"
                                    },
                                    "max_retry": {
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "time_out_dialing": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "frequency": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "time_btw_retries": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "bot_key": {
                                        "type": "string",
                                        "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829"
                                    },
                                    "caller_id": {
                                        "type": "string",
                                        "example": "12073000031"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    }
                                }
                            },
                            "scheduler": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "26"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "timezone_country": {
                                        "type": "string",
                                        "example": "Australia"
                                    },
                                    "timezone_city": {
                                        "type": "string",
                                        "example": "Sydney"
                                    },
                                    "weekdays": {
                                        "type": "string",
                                        "example": "monday,tuesday,wednesday,thursday,friday,saturday"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_getSingleTextBasedBroadcastCampaignInfo": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "campaign": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "99"
                            },
                            "campaign_name": {
                                "type": "string",
                                "example": "testing campiagn"
                            },
                            "type": {
                                "type": "string",
                                "example": "voice"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "tenant_id": {
                                "type": "string",
                                "example": "tenant_123456"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "created_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "modified_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "dialer": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "20"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "ivr_type": {
                                        "type": "string",
                                        "example": "interactive"
                                    },
                                    "max_retry": {
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "time_out_dialing": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "frequency": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "time_btw_retries": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "bot_key": {
                                        "type": "string",
                                        "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829"
                                    },
                                    "caller_id": {
                                        "type": "string",
                                        "example": "12073000031"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "broadcast_data": {
                                        "type": "object",
                                        "properties": {
                                            "msg_type": {
                                                "type": "string",
                                                "example": "text"
                                            },
                                            "tts_engine": {
                                                "enum": ["azure", "google", "polly"],
                                                "type": "string"
                                            },
                                            "phrase": {
                                                "type": "string",
                                                "example": "Hi $name , you amount of rupee $amount is pending"
                                            },
                                            "tts_voice_name": {
                                                "type": "string",
                                                "example": "en-US-Wavenet-B"
                                            },
                                            "language_code": {
                                                "type": "string",
                                                "example": "en-US"
                                            },
                                            "language": {
                                                "type": "string",
                                                "example": "English (US)"
                                            },
                                            "tts_speed": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "tts_pitch": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "gender": {
                                                "enum": ["male", "female"]
                                            }
                                        }
                                    }
                                }
                            },
                            "scheduler": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "26"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "timezone_country": {
                                        "type": "string",
                                        "example": "Australia"
                                    },
                                    "timezone_city": {
                                        "type": "string",
                                        "example": "Sydney"
                                    },
                                    "weekdays": {
                                        "type": "string",
                                        "example": "monday,tuesday,wednesday,thursday,friday,saturday"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_200_getSingleVoiceBasedBroadcastCampaignInfo": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "example": ""
            },
            "data": {
                "type": "object",
                "properties": {
                    "campaign": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "99"
                            },
                            "campaign_name": {
                                "type": "string",
                                "example": "testing campiagn"
                            },
                            "type": {
                                "type": "string",
                                "example": "voice"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "tenant_id": {
                                "type": "string",
                                "example": "tenant_123456"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "created_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "datetime",
                                "example": "2023-04-27T05:39:08Z"
                            },
                            "modified_by": {
                                "type": "string",
                                "example": "abcd@call-ai.com"
                            },
                            "dialer": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "20"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "ivr_type": {
                                        "type": "string",
                                        "example": "interactive"
                                    },
                                    "max_retry": {
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "time_out_dialing": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "frequency": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "time_btw_retries": {
                                        "type": "integer",
                                        "example": "90000"
                                    },
                                    "bot_key": {
                                        "type": "string",
                                        "example": "L0ed2cb3haKNxSRZySVqWQVDWBED30Vi829"
                                    },
                                    "caller_id": {
                                        "type": "string",
                                        "example": "12073000031"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "broadcast_data": {
                                        "type": "object",
                                        "properties": {
                                            "msg_type": {
                                                "type": "string",
                                                "example": "text"
                                            },
                                            "tts_audio": {
                                                "type": "string",
                                                "example": "bark_generation.wav"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2023-04-27T05:39:08Z"
                                            },
                                            "created_by": {
                                                "type": "string",
                                                "example": "abcd@call-ai.com"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2023-04-27T05:39:08Z"
                                            },
                                            "updated_by": {
                                                "type": "string",
                                                "example": "abcd@call-ai.com"
                                            }
                                        }
                                    }
                                }
                            },
                            "scheduler": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "26"
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "example": "99"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "timezone_country": {
                                        "type": "string",
                                        "example": "Australia"
                                    },
                                    "timezone_city": {
                                        "type": "string",
                                        "example": "Sydney"
                                    },
                                    "weekdays": {
                                        "type": "string",
                                        "example": "monday,tuesday,wednesday,thursday,friday,saturday"
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "example": "tenant_123456"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2023-04-27T05:39:08Z"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "abcd@call-ai.com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    },
    "response_201_create_overall_campaign_for_broadcast": {
        "type": "object",
        "properties": {
            "response": {
                "type": "string",
                "example": "SUCCESS"
            },
            "message": {
                "type": "string",
                "example": "broadcast campaign created Successfully with dialer and scheduler"
            },
            "data": {
                "type": "object",
                "properties": {
                    "campaign_id": {
                        "type": "string",
                        "example": "1"
                    }
                }
            },
            "error": {
                "type": "object"
            }
        }
    }
}
}
